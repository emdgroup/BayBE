# Example for using the multi target mode for the objective

Example for using the multi target mode for the objective.
It uses a desirability value to handle several targets.

This example assumes some basic familiarity with using BayBE.
We thus refer to [`campaign`](./../Basics/campaign.md) for a basic example.

## Necessary imports for this example


```python
import pandas as pd
```


```python
from baybe import Campaign
from baybe.objectives import DesirabilityObjective
from baybe.parameters import CategoricalParameter, NumericalDiscreteParameter
from baybe.searchspace import SearchSpace
from baybe.targets import NumericalTarget
from baybe.utils.dataframe import add_fake_measurements
```

## Experiment setup and creating the searchspace


```python
Categorical_1 = CategoricalParameter("Cat_1", values=["22", "33"], encoding="OHE")
Categorical_2 = CategoricalParameter(
    "Cat_2",
    values=["very bad", "bad", "OK", "good", "very good"],
    encoding="INT",
)
Num_disc_1 = NumericalDiscreteParameter(
    "Num_disc_1", values=[1, 2, 3, 4, 6, 8, 10], tolerance=0.3
)
Num_disc_2 = NumericalDiscreteParameter(
    "Num_disc_2", values=[-1, -3, -6, -9], tolerance=0.3
)
```


```python
parameters = [Categorical_1, Categorical_2, Num_disc_1, Num_disc_2]
```


```python
searchspace = SearchSpace.from_product(parameters=parameters)
```

## Defining the targets

The multi target mode is handled when creating the objective object.
Thus we first need to define the different targets.

This examples has different targets with different modes.
The first target is maximized and while the second one is minimized.
Note that in this multi target mode, the user must specify bounds for each target.


```python
Target_1 = NumericalTarget(
    name="Target_1", mode="MAX", bounds=(0, 100), transformation="LINEAR"
)
Target_2 = NumericalTarget(
    name="Target_2", mode="MIN", bounds=(0, 100), transformation="LINEAR"
)
```

For each target it is also possible to specify a `target_transform` function.
A detailed discussion of this functionality can be found at the end of this example.

In this example, define a third target working with the mode `MATCH`.
We furthermore use `target_transform="BELL"`.


```python
Target_3 = NumericalTarget(
    name="Target_3", mode="MATCH", bounds=(45, 55), transformation="BELL"
)
```

Note that the `MATCH` mode seeks to have the target at the mean between the two bounds.
For example, choosing 95 and 105 will lead the algorithm seeking 100 as the optimal
value.
Thus, using the bounds, it is possible to control both the match target and
the range around this target that is considered viable.

## Creating the objective

Now to work with these three targets the objective object must be properly created.
The mode is set to `DESIRABILITY` and the targets are described in a list.


```python
targets = [Target_1, Target_2, Target_3]
```

As the recommender requires a single function, the different targets need to be
combined.
Thus, a `scalarizer` is used to create a single target out of the several targets given.
The combine function can either be the mean `MEAN` or the geometric mean `GEOM_MEAN`.
Per default, `GEOM_MEAN` is used.
Weights for each target can also be specified as a list of floats in the arguments
Per default, weights are equally distributed between all targets and are normalized
internally.
It is thus not necessary to handle normalization or scaling.


```python
objective = DesirabilityObjective(
    targets=targets,
    weights=[20, 20, 60],
    scalarizer="MEAN",
)
```


```python
print(objective)
```

    Objective
       Type: DesirabilityObjective
       Targets
                        Type      Name  ... Transformation  Weight
          0  NumericalTarget  Target_1  ...         LINEAR    20.0
          1  NumericalTarget  Target_2  ...         LINEAR    20.0
          2  NumericalTarget  Target_3  ...           BELL    60.0
          
          [3 rows x 7 columns]
       Scalarizer: MEAN


## Creating and printing the campaign


```python
campaign = Campaign(searchspace=searchspace, objective=objective)
print(campaign)
```

    Campaign
       Meta Data
          Batches done: 0
          Fits done: 0
          Discrete Subspace Meta Data
             Recommended: 0/280
             Measured: 0/280
             Excluded: 0/280
       SearchSpace
          Search Space Type: DISCRETE
          SubspaceDiscrete
             Discrete Parameters
                         Name                        Type  Num_Values
Encoding
                0       Cat_1        CategoricalParameter           2
CategoricalEncoding.OHE
                1       Cat_2        CategoricalParameter           5
CategoricalEncoding.INT
                2  Num_disc_1  NumericalDiscreteParameter           7
None
                3  Num_disc_2  NumericalDiscreteParameter           4
None
             Experimental Representation
                    Cat_1      Cat_2  Num_disc_1  Num_disc_2
                0      22         OK         1.0        -9.0
                1      22         OK         1.0        -6.0
                2      22         OK         1.0        -3.0
                ..    ...        ...         ...         ...
                277    33  very good        10.0        -6.0
                278    33  very good        10.0        -3.0
                279    33  very good        10.0        -1.0
                
                [280 rows x 4 columns]
             Constraints
                Empty DataFrame
                Columns: []
                Index: []
             Computational Representation
                     Cat_1_22  Cat_1_33  ...  Num_disc_1  Num_disc_2
                0         1.0       0.0  ...         1.0        -9.0
                1         1.0       0.0  ...         1.0        -6.0
                2         1.0       0.0  ...         1.0        -3.0
                ..        ...       ...  ...         ...         ...
                277       0.0       1.0  ...        10.0        -6.0
                278       0.0       1.0  ...        10.0        -3.0
                279       0.0       1.0  ...        10.0        -1.0
                
                [280 rows x 5 columns]
       Objective
          Type: DesirabilityObjective
          Targets
                           Type      Name  ... Transformation  Weight
             0  NumericalTarget  Target_1  ...         LINEAR    20.0
             1  NumericalTarget  Target_2  ...         LINEAR    20.0
             2  NumericalTarget  Target_3  ...           BELL    60.0
             
             [3 rows x 7 columns]
          Scalarizer: MEAN
       TwoPhaseMetaRecommender
          Initial recommender
             RandomRecommender
                Compatibility: SearchSpaceType.HYBRID
          Recommender
             BotorchRecommender
                Surrogate
                   GaussianProcessSurrogate
                      Supports Transfer Learning: True
                      Kernel factory: DefaultKernelFactory()
                Acquisition function: qLogExpectedImprovement()
                Compatibility: SearchSpaceType.HYBRID
                Sequential continuous: False
                Hybrid sampler: None
                Sampling percentage: 1.0
          Switch after: 1
          Remain switched: False
          Has switched: False


## Performing some iterations

The following loop performs some recommendations and adds fake results.
It also prints what happens to internal data.


```python
N_ITERATIONS = 3
```


```python
for kIter in range(N_ITERATIONS):
    rec = campaign.recommend(batch_size=3)
    add_fake_measurements(rec, campaign.targets)
    campaign.add_measurements(rec)
    desirability = campaign.objective.transform(campaign.measurements, allow_extra=True)

    print(f"\n\n#### ITERATION {kIter+1} ####")
    print("\nRecommended measurements with fake measured results:\n")
    print(rec)
    print("\nInternal measurement database with desirability values:\n")
    print(pd.concat([campaign.measurements, desirability], axis=1))
```

    
    
    #### ITERATION 1 ####
    
    Recommended measurements with fake measured results:
    
       Cat_1     Cat_2  Num_disc_1  Num_disc_2   Target_1   Target_2   Target_3
    58    22      good         1.0        -3.0  13.148787  69.891021  53.386333
    89    22  very bad         2.0        -6.0  27.745489  21.346545  54.199481
    40    22       bad         4.0        -9.0   7.476234  75.301697  56.752512
    
    Internal measurement database with desirability values:
    
      Cat_1     Cat_2  Num_disc_1  Num_disc_2   Target_1   Target_2   Target_3  \
    0    22      good         1.0        -3.0  13.148787  69.891021  53.386333   
    1    22  very bad         2.0        -6.0  27.745489  21.346545  54.199481   
    2    22       bad         4.0        -9.0   7.476234  75.301697  56.752512   
    
       BatchNr  FitNr  Desirability  
    0        1    NaN      0.563548  
    1        1    NaN      0.634465  
    2        1    NaN      0.305398  


    
    
    #### ITERATION 2 ####
    
    Recommended measurements with fake measured results:
    
          Cat_1      Cat_2  Num_disc_1  Num_disc_2   Target_1   Target_2  \
    index                                                                  
    117      22  very good         2.0        -6.0  13.277381  31.195852   
    57       22       good         1.0        -6.0  65.043096  78.499556   
    94       22   very bad         3.0        -3.0  26.423106  74.043406   
    
            Target_3  
    index             
    117    52.086639  
    57     53.733090  
    94     55.334444  
    
    Internal measurement database with desirability values:
    
      Cat_1      Cat_2  Num_disc_1  Num_disc_2   Target_1   Target_2   Target_3  \
    0    22       good         1.0        -3.0  13.148787  69.891021  53.386333   
    1    22   very bad         2.0        -6.0  27.745489  21.346545  54.199481   
    2    22        bad         4.0        -9.0   7.476234  75.301697  56.752512   
    3    22  very good         2.0        -6.0  13.277381  31.195852  52.086639   
    4    22       good         1.0        -6.0  65.043096  78.499556  53.733090   
    5    22   very bad         3.0        -3.0  26.423106  74.043406  55.334444   
    
       BatchNr  FitNr  Desirability  
    0        1    1.0      0.563548  
    1        1    1.0      0.634465  
    2        1    1.0      0.305398  
    3        2    NaN      0.714125  
    4        2    NaN      0.627138  
    5        2    NaN      0.444371  
    
    
    #### ITERATION 3 ####
    
    Recommended measurements with fake measured results:
    
          Cat_1      Cat_2  Num_disc_1  Num_disc_2   Target_1   Target_2  \
    index                                                                  
    112      22  very good         1.0        -9.0  71.934736  25.184612   
    252      33  very good         1.0        -9.0  56.455009  52.951427   
    167      33         OK        10.0        -1.0  82.203295  92.441443   
    
            Target_3  
    index             
    112    55.868319  
    252    51.548156  
    167    55.816894  
    
    Internal measurement database with desirability values:
    
      Cat_1      Cat_2  Num_disc_1  Num_disc_2   Target_1   Target_2   Target_3  \
    0    22       good         1.0        -3.0  13.148787  69.891021  53.386333   
    1    22   very bad         2.0        -6.0  27.745489  21.346545  54.199481   
    2    22        bad         4.0        -9.0   7.476234  75.301697  56.752512   
    3    22  very good         2.0        -6.0  13.277381  31.195852  52.086639   
    4    22       good         1.0        -6.0  65.043096  78.499556  53.733090   
    5    22   very bad         3.0        -3.0  26.423106  74.043406  55.334444   
    6    22  very good         1.0        -9.0  71.934736  25.184612  55.868319   
    7    33  very good         1.0        -9.0  56.455009  52.951427  51.548156   
    8    33         OK        10.0        -1.0  82.203295  92.441443  55.816894   
    
       BatchNr  FitNr  Desirability  
    0        1    1.0      0.563548  
    1        1    1.0      0.634465  
    2        1    1.0      0.305398  
    3        2    2.0      0.714125  
    4        2    2.0      0.627138  
    5        2    2.0      0.444371  
    6        3    NaN      0.594824  
    7        3    NaN      0.778924  
    8        3    NaN      0.484491  


## Addendum: Description of `transformation` functions

This function is used to transform target values to the interval `[0,1]` for `MAX`/`MIN`
mode.
An ascending or decreasing `LINEAR` function is used per default.
This function maps input values in a specified interval [lower, upper] to the interval
`[0,1]`.
Outside the specified interval, the function remains constant, that is, 0 or 1.

For the match mode, two functions are available `TRIANGULAR` and `BELL`.
The `TRIANGULAR` function is 0 outside a specified interval and linearly increases to 1
from both
interval ends, reaching the value 1 at the center of the interval.
This function is used per default for MATCH mode.
The `BELL` function is a Gaussian bell curve, specified through the boundary values of
the sigma
interval, reaching the maximum value of 1 at the interval center.
