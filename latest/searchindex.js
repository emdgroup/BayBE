Search.setIndex({"alltitles": {"Acquisition function": [[380, "acquisition-function"]], "AcquisitionFunction": [[20, null]], "Active Learning": [[422, null]], "Added": [[418, "added"], [418, "id5"], [418, "id13"], [418, "id17"], [418, "id23"], [418, "id30"], [418, "id39"], [418, "id45"], [418, "id49"], [418, "id56"], [418, "id61"], [418, "id67"], [418, "id73"], [418, "id77"], [418, "id81"], [418, "id85"], [418, "id90"], [418, "id94"], [418, "id97"], [418, "id101"], [418, "id105"], [418, "id109"], [418, "id112"], [418, "id116"], [418, "id120"], [418, "id124"], [418, "id128"], [418, "id134"], [418, "id137"]], "Addendum: Description of transformation functions": [[402, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[439, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[437, null]], "Adding Partial Results": [[423, "adding-partial-results"]], "Adding measurements": [[424, "adding-measurements"]], "AdditiveKernel": [[103, null]], "Advanced Example: Chemical Substances": [[416, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[400, "an-imaginary-use-case"]], "Array-Based Callables": [[434, null]], "Asynchronous Workflows": [[423, null]], "Automatic field conversion": [[433, "automatic-field-conversion"]], "Available Models": [[435, "available-models"]], "Available recommenders suitable for initial recommendation": [[380, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[380, "available-surrogate-models"]], "Backtesting": [[373, null], [412, null]], "BaseSequentialMetaRecommender": [[167, null]], "Basic Instructions": [[426, "basic-instructions"]], "Basic Usage": [[428, "basic-usage"]], "Basic creation": [[424, "basic-creation"]], "Basic example for using BayBE": [[379, null]], "Basic string assembly": [[433, "basic-string-assembly"]], "BasicKernel": [[90, null]], "Basics": [[378, null], [424, "basics"]], "Batch optimization": [[424, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[416, null]], "Bayesian Recommenders": [[431, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[260, null]], "BayesianRecommender": [[178, null]], "Bernoulli Multi Armed Bandit": [[400, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[236, null]], "BetaPrior": [[153, null]], "BinaryTarget": [[278, null]], "BotorchRecommender": [[180, null]], "Bound methods": [[390, "bound-methods"]], "Breaking Changes": [[418, "breaking-changes"], [418, "id22"], [418, "id29"]], "Building from the Product of Parameter Values": [[432, "building-from-the-product-of-parameter-values"], [432, "id2"]], "Building the Model": [[400, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[417, "cpus-without-avx-support-installation-of-polars"]], "Caching of recommendations": [[424, "caching-of-recommendations"]], "Campaign": [[27, null]], "Campaign Stopping": [[391, null]], "Campaigns": [[424, null]], "Candidate Control in Discrete Spaces": [[424, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[427, null]], "CardinalityConstraint": [[30, null]], "CategoricalEncoding": [[132, null]], "CategoricalParameter": [[127, null], [430, "categoricalparameter"]], "Caution": [[427, null]], "Changed": [[418, "changed"], [418, "id3"], [418, "id6"], [418, "id8"], [418, "id14"], [418, "id18"], [418, "id24"], [418, "id31"], [418, "id36"], [418, "id40"], [418, "id46"], [418, "id50"], [418, "id53"], [418, "id57"], [418, "id62"], [418, "id68"], [418, "id74"], [418, "id78"], [418, "id82"], [418, "id86"], [418, "id91"], [418, "id95"], [418, "id98"], [418, "id102"], [418, "id106"], [418, "id110"], [418, "id113"], [418, "id117"], [418, "id121"], [418, "id125"], [418, "id129"]], "Changelog": [[418, null]], "Clustering Recommenders": [[431, "clustering-recommenders"]], "Code Design": [[419, "code-design"]], "ColumnTransformer": [[364, null]], "Comparing recommendations in both objects": [[408, "comparing-recommendations-in-both-objects"]], "CompositeKernel": [[91, null]], "Condition": [[36, null]], "Conditions": [[425, "conditions"]], "Constraint": [[31, null]], "Constraint Setup": [[397, "constraint-setup"]], "Constraints": [[425, null]], "Constraints Continuous": [[381, null]], "Constraints Discrete": [[384, null]], "Constraints Setup": [[398, "constraints-setup"]], "Construct the campaign and run some iterations": [[382, "construct-the-campaign-and-run-some-iterations"], [383, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[432, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[375, "constructing-campaigns-for-the-simulation-loop"], [376, "constructing-campaigns-for-the-simulation-loop"], [377, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[432, "constructing-from-a-dataframe"], [432, "id1"], [432, "id3"]], "Constructing hybrid recommenders": [[406, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[405, "constructing-the-campaign-and-performing-a-recommendation"], [406, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[406, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[425, "continuous-constraints"]], "Continuous Parameters": [[430, "continuous-parameters"]], "Continuous Subspaces": [[432, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[40, null]], "ContinuousConstraint": [[32, null]], "ContinuousLinearConstraint": [[41, null], [425, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[33, null]], "ContinuousParameter": [[123, null]], "Contributing to BayBE": [[419, null]], "Contributors": [[420, null], [420, "id1"]], "Convenience construction and implicit conversion": [[429, null]], "Conventions for attrs classes": [[419, "conventions-for-attrs-classes"]], "Convert model to onnx": [[394, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[394, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[395, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[394, "create-campaign"]], "Creating Continuous Search Spaces": [[404, null]], "Creating a Simplex-Bound Discrete Subspace": [[432, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign": [[424, "creating-a-campaign"]], "Creating a campaign from the configuration file": [[409, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[385, "creating-and-printing-the-campaign"], [386, "creating-and-printing-the-campaign"], [388, "creating-and-printing-the-campaign"], [402, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[374, "creating-the-campaigns"]], "Creating the Objective": [[376, "creating-the-objective"]], "Creating the Optimization Objective": [[412, "creating-the-optimization-objective"], [413, "creating-the-optimization-objective"]], "Creating the Search Space": [[412, "creating-the-search-space"]], "Creating the Searchspace": [[413, "creating-the-searchspace"]], "Creating the campaign": [[380, "creating-the-campaign"], [395, "creating-the-campaign"], [408, "creating-the-campaign"]], "Creating the constraint": [[385, "creating-the-constraint"], [387, "creating-the-constraint"]], "Creating the constraints": [[386, "creating-the-constraints"], [388, "creating-the-constraints"]], "Creating the objective": [[402, "creating-the-objective"]], "Creating the recommender object": [[380, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[375, "creating-the-searchspace-and-the-objective"], [377, "creating-the-searchspace-and-the-objective"], [382, "creating-the-searchspace-and-the-objective"], [383, "creating-the-searchspace-and-the-objective"], [385, "creating-the-searchspace-and-the-objective"], [386, "creating-the-searchspace-and-the-objective"], [387, "creating-the-searchspace-and-the-objective"], [388, "creating-the-searchspace-and-the-objective"], [405, "creating-the-searchspace-and-the-objective"]], "Creation from a JSON config": [[424, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[435, null]], "Custom Hooks": [[389, null]], "Custom Surrogates": [[393, null]], "CustomDiscreteParameter": [[130, null], [430, "customdiscreteparameter"]], "CustomEncoding": [[133, null]], "CustomONNXSurrogate": [[242, null]], "Dataframe deserialization": [[433, "dataframe-deserialization"]], "DefaultKernelFactory": [[256, null]], "Defining config dictionaries": [[410, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[391, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[392, "defining-the-hook"]], "Defining the Hooks": [[390, "defining-the-hooks"]], "Defining the Optimization Objective": [[416, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[374, "defining-the-optimization-problem"]], "Defining the Search Space": [[416, "defining-the-search-space"]], "Defining the Tasks": [[412, "defining-the-tasks"], [413, "defining-the-tasks"]], "Defining the targets": [[402, "defining-the-targets"]], "Defining the test function": [[382, "defining-the-test-function"], [383, "defining-the-test-function"], [405, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[406, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[418, "deprecations"], [418, "id20"], [418, "id27"], [418, "id34"], [418, "id43"], [418, "id59"], [418, "id65"], [418, "id71"], [418, "id88"]], "Deserialization from configuration strings": [[433, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[115, null], [429, "desirabilityobjective"]], "Developer Tools": [[419, "developer-tools"]], "Discrete Constraints": [[425, "discrete-constraints"]], "Discrete Parameters": [[430, "discrete-parameters"]], "Discrete Subspaces": [[432, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[397, null]], "DiscreteCardinalityConstraint": [[47, null]], "DiscreteConstraint": [[34, null]], "DiscreteCustomConstraint": [[48, null], [425, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[49, null], [425, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[50, null], [425, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[51, null], [425, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[52, null], [425, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[124, null]], "DiscretePermutationInvarianceConstraint": [[53, null], [425, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[54, null]], "DiscreteSamplingMethod": [[360, null]], "DiscreteSumConstraint": [[55, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[425, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[400, "discussion"]], "Disk Caching": [[426, "disk-caching"]], "Dummy": [[299, null]], "Duplicate Substances": [[397, "duplicate-substances"]], "Dynamic Exclusion": [[427, "dynamic-exclusion"]], "EDBOKernelFactory": [[258, null]], "EXPERIMENTAL: Floating Point Precision": [[426, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[439, null]], "Environment Variables": [[426, null]], "Equivalent copies": [[433, null]], "Estimation with Constraints": [[439, null]], "Example Searchspace and objective parameters": [[380, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[382, null]], "Example for creating campaigns from configs": [[409, null]], "Example for custom parameter passing in surrogate models": [[395, null]], "Example for full simulation loop using a table-based lookup mechanism": [[376, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[377, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[375, null]], "Example for linear constraints in a continuous searchspace": [[383, null]], "Example for surrogate model with a custom pretrained model": [[394, null]], "Example for the serialization of a campaign": [[408, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[405, null]], "Example for using custom constraints in discrete searchspaces": [[385, null]], "Example for using dependency constraints in discrete searchspaces": [[386, null]], "Example for using different strategies": [[380, null]], "Example for using exclusion constraints in discrete searchspaces": [[387, null]], "Example for using exclusion constraints incorporating sums and products": [[388, null]], "Example for using synthetic test functions in hybrid spaces": [[406, null]], "Example for using the multi target mode for the objective": [[402, null]], "Example for validation of a config file": [[410, null]], "Examples": [[414, null]], "Examples On This Page": [[428, null]], "Excluding Configurations": [[427, "excluding-configurations"]], "Expectations": [[437, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[394, "experiment-setup"], [395, "experiment-setup"]], "Experiment setup": [[385, "experiment-setup"], [386, "experiment-setup"], [387, "experiment-setup"], [388, "experiment-setup"], [408, "experiment-setup"]], "Experiment setup and creating the searchspace": [[402, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[427, null]], "Experimental Representation Limits": [[428, null]], "Experimental and Computational Representations": [[428, "experimental-and-computational-representations"]], "Experimental feature only!": [[426, null]], "Expired Deprecations (from 0.6.*)": [[418, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[418, "expired-deprecations-from-0-7"]], "Explainers": [[428, "explainers"]], "Extending BayBE\u2019s Functionality": [[419, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[435, "extracting-the-model-for-advanced-study"]], "FAQ": [[415, null]], "FPSRecommender": [[192, null]], "Fixed": [[418, "fixed"], [418, "id9"], [418, "id11"], [418, "id15"], [418, "id19"], [418, "id25"], [418, "id33"], [418, "id37"], [418, "id42"], [418, "id47"], [418, "id51"], [418, "id58"], [418, "id63"], [418, "id69"], [418, "id75"], [418, "id83"], [418, "id87"], [418, "id92"], [418, "id99"], [418, "id103"], [418, "id107"], [418, "id114"], [418, "id118"], [418, "id122"], [418, "id126"], [418, "id130"], [418, "id132"], [418, "id135"]], "From GitHub": [[416, "from-github"]], "From Local Clone": [[416, "from-local-clone"]], "From Package Index": [[416, "from-package-index"]], "From the Default Constructor": [[432, "from-the-default-constructor"]], "Further information": [[424, "further-information"]], "GammaPrior": [[154, null]], "GaussianMixtureClusteringRecommender": [[187, null]], "GaussianProcessPreset": [[253, null]], "GaussianProcessSurrogate": [[246, null]], "General Information": [[431, "general-information"]], "General Workflow": [[419, "general-workflow"]], "Generating Lookup Tables": [[412, "generating-lookup-tables"], [413, "generating-lookup-tables"]], "Getting Recommendations": [[427, null]], "Getting a recommendation and adding measurements": [[379, "getting-a-recommendation-and-adding-measurements"]], "Getting recommendations": [[424, "getting-recommendations"]], "Global Uncertainty Reduction": [[422, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[155, null]], "HalfNormalPrior": [[156, null]], "Hook instance vs. target instance": [[390, null]], "Hybrid constraints": [[425, null]], "Imports": [[374, "imports"], [390, "imports"], [392, "imports"], [397, "imports"], [398, "imports"], [400, "imports"], [404, "imports"], [412, "imports"], [413, "imports"]], "Inclusion of initial data": [[375, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[238, null]], "Indices and Tables": [[416, "indices-and-tables"]], "Influence of Continuous Parameters": [[439, null]], "Insights": [[428, null]], "Installation Related Issues": [[417, "installation-related-issues"]], "Interval": [[340, null]], "Invoking alternative constructors": [[433, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[394, "iterate-with-recommendations-and-measurements"], [395, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[433, "json-de-serialization"]], "KMeansClusteringRecommender": [[188, null]], "Kernel": [[92, null]], "KernelFactory": [[248, null]], "Known Issues": [[417, null]], "License": [[421, null]], "Limitations": [[436, "limitations"]], "LinearKernel": [[94, null]], "Links for documentation": [[395, "links-for-documentation"]], "Local Uncertainty Reduction": [[422, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[157, null]], "Lookup functionality and data creation": [[375, "lookup-functionality-and-data-creation"], [376, "lookup-functionality-and-data-creation"], [377, "lookup-functionality-and-data-creation"]], "MATCH mode": [[436, "match-mode"]], "MIN and MAX mode": [[436, "min-and-max-mode"]], "Maintainers": [[420, "maintainers"]], "Mandatory target bounds": [[429, null]], "Manual verification of the constraint": [[385, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[386, "manual-verification-of-the-constraints"], [387, "manual-verification-of-the-constraints"], [388, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[423, "marking-experiments-as-pending"]], "MaternKernel": [[95, null]], "MeanPredictionSurrogate": [[262, null]], "Memory During Optimization": [[439, null]], "MemorySize": [[203, null]], "Meta Recommenders": [[427, null], [431, "meta-recommenders"]], "MetaRecommender": [[165, null]], "Method overrides": [[419, "method-overrides"]], "Missing Lookup Values": [[434, null]], "Mixtures": [[396, null]], "Model Interpretation in BO": [[428, null]], "Model Outputs": [[394, "model-outputs"], [395, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[397, null]], "Modeling a Mixture in Traditional Representation": [[398, null]], "Monitoring the Probability of Improvement": [[392, null]], "Monkeypatching": [[390, "monkeypatching"], [391, null], [392, "monkeypatching"]], "Multi Target": [[401, null]], "Multi-Armed Bandit": [[399, null]], "NGBoostSurrogate": [[264, null]], "NaiveHybridSpaceRecommender": [[172, null]], "Necessary imports": [[394, "necessary-imports"], [395, "necessary-imports"], [408, "necessary-imports"], [409, "necessary-imports"], [410, "necessary-imports"]], "Necessary imports for this example": [[375, "necessary-imports-for-this-example"], [376, "necessary-imports-for-this-example"], [377, "necessary-imports-for-this-example"], [379, "necessary-imports-for-this-example"], [380, "necessary-imports-for-this-example"], [382, "necessary-imports-for-this-example"], [383, "necessary-imports-for-this-example"], [385, "necessary-imports-for-this-example"], [386, "necessary-imports-for-this-example"], [387, "necessary-imports-for-this-example"], [388, "necessary-imports-for-this-example"], [402, "necessary-imports-for-this-example"], [405, "necessary-imports-for-this-example"], [406, "necessary-imports-for-this-example"]], "Nesting objects": [[433, "nesting-objects"]], "NonPredictiveRecommender": [[185, null]], "NormalPrior": [[158, null]], "NumericalContinuousParameter": [[137, null], [430, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[138, null], [430, "numericaldiscreteparameter"]], "NumericalTarget": [[284, null], [436, "numericaltarget"]], "Objective": [[110, null], [429, null]], "Optimizing a Custom Black-Box Function": [[374, null]], "Optional Dependencies": [[416, "optional-dependencies"]], "Optional dependency": [[430, null]], "Optional: Defining the Optimization Strategy": [[416, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[397, null]], "PAMClusteringRecommender": [[189, null]], "Parameter": [[125, null]], "Parameter Importance via SHAP": [[428, "parameter-importance-via-shap"]], "Parameter Setup": [[397, "parameter-setup"], [398, "parameter-setup"]], "Parameter encoding": [[430, null]], "Parameter names": [[430, null]], "Parameter tolerances": [[424, null]], "ParameterEncoding": [[134, null]], "Parameters": [[430, null]], "Parameters for a full simulation loop": [[375, "parameters-for-a-full-simulation-loop"], [376, "parameters-for-a-full-simulation-loop"], [377, "parameters-for-a-full-simulation-loop"]], "PartialAcquisitionFunction": [[22, null]], "Performing some iterations": [[402, "performing-some-iterations"]], "Performing the simulation loop": [[375, "performing-the-simulation-loop"]], "PeriodicKernel": [[96, null]], "Permanent Exclusion": [[427, "permanent-exclusion"]], "Permutation Invariance": [[397, "permutation-invariance"]], "PiecewisePolynomialKernel": [[97, null]], "PlainKernelFactory": [[249, null]], "Plots": [[428, "plots"]], "Plotting the Results": [[374, "plotting-the-results"], [391, "plotting-the-results"], [392, "plotting-the-results"]], "Polars": [[426, "polars"]], "PolynomialKernel": [[98, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Prior": [[151, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[391, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[104, null]], "Pure Recommenders": [[431, "pure-recommenders"]], "PureRecommender": [[175, null]], "Purely Continuous Search Spaces": [[422, null]], "PyCharm vs. exceptiongroup": [[417, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[99, null]], "RFFKernel": [[100, null]], "RQKernel": [[101, null]], "RandomForestSurrogate": [[266, null]], "RandomRecommender": [[193, null]], "RecommenderProtocol": [[162, null]], "Recommenders": [[431, null]], "Registering Custom Hooks": [[390, null]], "Removed": [[418, "removed"], [418, "id26"], [418, "id32"], [418, "id41"], [418, "id54"], [418, "id64"], [418, "id70"], [418, "id79"]], "Representation of Data within Discrete Subspaces": [[432, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[439, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[432, "restricting-search-spaces-using-constraints"]], "Row Order": [[426, null]], "Running the Simulation": [[400, "running-the-simulation"]], "Running the Simulation Loop": [[374, "running-the-simulation-loop"]], "SHAPInsight": [[83, null]], "SKLearnClusteringRecommender": [[190, null]], "Sampling Recommenders": [[431, "sampling-recommenders"]], "Scalarizer": [[118, null]], "ScaleKernel": [[105, null]], "Search Space Creation": [[397, "search-space-creation"], [398, "search-space-creation"]], "Search Space Memory Estimation": [[439, "search-space-memory-estimation"]], "Search Spaces": [[432, null]], "SearchSpace": [[198, null]], "SearchSpaceType": [[199, null]], "Searchspaces": [[403, null]], "Seeing Transfer Learning in Action": [[437, "seeing-transfer-learning-in-action"]], "Sequential vs. parallel experimentation": [[424, null]], "SequentialMetaRecommender": [[168, null]], "SerialMixin": [[221, null]], "Serialization": [[407, null], [424, "serialization"], [433, null]], "Serialization and de-serialization": [[408, "serialization-and-de-serialization"]], "Settings": [[374, "settings"], [391, "settings"], [392, "settings"], [404, "settings"], [412, "settings"], [413, "settings"]], "Setup": [[379, "setup"], [400, "setup"]], "Signature components": [[390, null]], "Simplex Construction": [[397, null]], "Simulating Multiple Scenarios": [[434, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[434, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[434, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[391, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[391, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[434, null]], "Simulation Loop": [[412, "simulation-loop"], [413, "simulation-loop"]], "SingleTargetObjective": [[120, null], [429, "singletargetobjective"]], "Slot-based Representation": [[398, null]], "SmoothedBoxPrior": [[159, null]], "StreamingSequentialMetaRecommender": [[169, null]], "Sub-Sampling Method": [[422, null]], "SubSelectionCondition": [[37, null], [425, "subselectioncondition"]], "SubspaceContinuous": [[196, null]], "SubspaceDiscrete": [[204, null]], "Substance Amounts": [[397, "substance-amounts"]], "SubstanceEncoding": [[135, null]], "SubstanceParameter": [[141, null], [430, "substanceparameter"]], "Suggested Fix": [[417, null], [417, null], [417, null], [417, null]], "Supported Acquisition Functions": [[423, null]], "Supported Recommenders": [[423, null]], "Surrogate": [[239, null]], "SurrogateProtocol": [[240, null]], "Surrogates": [[435, null]], "Synchronizing Pull Requests": [[419, "synchronizing-pull-requests"]], "Target": [[276, null]], "TargetMode": [[281, null]], "TargetTransformation": [[282, null]], "Targets": [[436, null]], "TaskParameter": [[128, null], [430, "taskparameter"]], "Technology": [[437, null]], "Telemetry": [[426, "telemetry"]], "Telemetry Scope": [[426, null]], "Terminology": [[397, "terminology"], [433, null], [437, null]], "Terminology Continued": [[437, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[434, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[400, "the-black-box-model"]], "The Lookup Mechanism": [[434, "the-lookup-mechanism"]], "The Optimization Loop": [[416, "the-optimization-loop"]], "The Role of the TaskParameter": [[437, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[409, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[427, "the-recommend-call"]], "The type field": [[433, "the-type-field"]], "Theoretical Span": [[397, null]], "ThresholdCondition": [[38, null], [425, "thresholdcondition"]], "Trajectory-Based Control": [[427, null]], "Transfer Learning": [[411, null], [413, null], [437, null]], "Triggering the Hook": [[392, "triggering-the-hook"]], "Triggering the Hooks": [[390, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[170, null]], "Uninstalling Internet Packages": [[426, null]], "Unlocking Data Treasures Through Transfer Learning": [[437, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[301, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[438, null]], "Using Custom Models": [[435, "using-custom-models"]], "Using Explicit Bounds": [[432, "using-explicit-bounds"]], "Using None": [[434, "using-none"]], "Using a Callable": [[434, "using-a-callable"]], "Using a Dataframe": [[434, "using-a-dataframe"]], "Using abbreviations": [[433, "using-abbreviations"]], "Using configuration instead": [[394, "using-configuration-instead"], [395, "using-configuration-instead"]], "Using default values": [[433, "using-default-values"]], "Utilities": [[439, null]], "Validation of model parameters": [[395, "validation-of-model-parameters"]], "Verification of Constraints": [[397, "verification-of-constraints"], [398, "verification-of-constraints"]], "Verification of Span": [[397, "verification-of-span"]], "Verification of the two dictionaries": [[410, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[383, "verify-the-constraints"]], "Windows \u2013 Torch Problems": [[417, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[382, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [383, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [406, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[419, "writing-docstrings"]], "Writing classes": [[419, "writing-classes"]], "[0.1.0] - 2022-10-01": [[418, "id136"]], "[0.10.0] - 2024-08-02": [[418, "id28"]], "[0.11.0] - 2024-09-09": [[418, "id21"]], "[0.11.1] - 2024-10-01": [[418, "id16"]], "[0.11.2] - 2024-10-11": [[418, "id12"]], "[0.11.3] - 2024-11-06": [[418, "id10"]], "[0.11.4] - 2025-01-27": [[418, "id7"]], "[0.12.0] - 2025-01-28": [[418, "id4"]], "[0.12.1] - 2025-01-29": [[418, "id2"]], "[0.12.2] - 2025-01-31": [[418, "id1"]], "[0.2.0] - 2022-11-10": [[418, "id133"]], "[0.2.1] - 2022-12-01": [[418, "id131"]], "[0.2.2] - 2023-01-13": [[418, "id127"]], "[0.2.3] - 2023-03-14": [[418, "id123"]], "[0.2.4] - 2023-03-24": [[418, "id119"]], "[0.3.0] - 2023-06-27": [[418, "id115"]], "[0.3.1] - 2023-07-17": [[418, "id111"]], "[0.3.2] - 2023-07-24": [[418, "id108"]], "[0.4.0] - 2023-08-16": [[418, "id104"]], "[0.4.1] - 2023-08-23": [[418, "id100"]], "[0.4.2] - 2023-08-29": [[418, "id96"]], "[0.5.0] - 2023-09-15": [[418, "id93"]], "[0.5.1] - 2023-10-19": [[418, "id89"]], "[0.6.0] - 2023-11-17": [[418, "id84"]], "[0.6.1] - 2023-11-27": [[418, "id80"]], "[0.7.0] - 2023-12-04": [[418, "id76"]], "[0.7.1] - 2023-12-07": [[418, "id72"]], "[0.7.2] - 2024-01-24": [[418, "id66"]], "[0.7.3] - 2024-02-09": [[418, "id60"]], "[0.7.4] - 2024-02-28": [[418, "id55"]], "[0.8.0] - 2024-02-29": [[418, "id52"]], "[0.8.1] - 2024-03-11": [[418, "id48"]], "[0.8.2] - 2024-03-27": [[418, "id44"]], "[0.9.0] - 2024-05-21": [[418, "id38"]], "[0.9.1] - 2024-06-04": [[418, "id35"]], "[Unreleased]": [[418, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[19, null]], "baybe.acquisition.partial": [[21, null]], "baybe.acquisition.utils": [[23, null]], "baybe.acquisition.utils.convert_acqf": [[24, null]], "baybe.acquisition.utils.str_to_acqf": [[25, null]], "baybe.campaign": [[26, null]], "baybe.constraints": [[28, null]], "baybe.constraints.base": [[29, null]], "baybe.constraints.conditions": [[35, null]], "baybe.constraints.continuous": [[39, null]], "baybe.constraints.deprecation": [[42, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[43, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[44, null]], "baybe.constraints.deprecation.structure_constraints": [[45, null]], "baybe.constraints.discrete": [[46, null]], "baybe.constraints.validation": [[56, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[57, null]], "baybe.constraints.validation.validate_constraints": [[58, null]], "baybe.exceptions": [[59, null]], "baybe.exceptions.DeprecationError": [[60, null]], "baybe.exceptions.EmptySearchSpaceError": [[61, null]], "baybe.exceptions.IncompatibilityError": [[62, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, null]], "baybe.exceptions.IncompatibleArgumentError": [[64, null]], "baybe.exceptions.IncompatibleExplainerError": [[65, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[66, null]], "baybe.exceptions.InvalidSurrogateModelError": [[67, null]], "baybe.exceptions.InvalidTargetValueError": [[68, null]], "baybe.exceptions.ModelNotTrainedError": [[69, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[70, null]], "baybe.exceptions.NoRecommendersLeftError": [[71, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[72, null]], "baybe.exceptions.NothingToSimulateError": [[73, null]], "baybe.exceptions.NumericalUnderflowError": [[74, null]], "baybe.exceptions.OptionalImportError": [[75, null]], "baybe.exceptions.UnidentifiedSubclassError": [[76, null]], "baybe.exceptions.UnmatchedAttributeError": [[77, null]], "baybe.exceptions.UnusedObjectWarning": [[78, null]], "baybe.insights": [[79, null]], "baybe.insights.shap": [[80, null]], "baybe.insights.shap.EXPLAINERS": [[81, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[82, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[84, null]], "baybe.insights.shap.SHAP_PLOTS": [[85, null]], "baybe.insights.shap.is_shap_explainer": [[86, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[87, null]], "baybe.kernels": [[88, null]], "baybe.kernels.base": [[89, null]], "baybe.kernels.basic": [[93, null]], "baybe.kernels.composite": [[102, null]], "baybe.objective": [[106, null]], "baybe.objective.Objective": [[107, null]], "baybe.objectives": [[108, null]], "baybe.objectives.base": [[109, null]], "baybe.objectives.base.to_objective": [[111, null]], "baybe.objectives.deprecation": [[112, null]], "baybe.objectives.deprecation.structure_objective": [[113, null]], "baybe.objectives.desirability": [[114, null]], "baybe.objectives.desirability.scalarize": [[116, null]], "baybe.objectives.enum": [[117, null]], "baybe.objectives.single": [[119, null]], "baybe.parameters": [[121, null]], "baybe.parameters.base": [[122, null]], "baybe.parameters.categorical": [[126, null]], "baybe.parameters.custom": [[129, null]], "baybe.parameters.enum": [[131, null]], "baybe.parameters.numerical": [[136, null]], "baybe.parameters.substance": [[139, null]], "baybe.parameters.substance.Smiles": [[140, null]], "baybe.parameters.utils": [[142, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[143, null]], "baybe.parameters.utils.sort_parameters": [[144, null]], "baybe.parameters.validation": [[145, null]], "baybe.parameters.validation.validate_decorrelation": [[146, null]], "baybe.parameters.validation.validate_is_finite": [[147, null]], "baybe.parameters.validation.validate_unique_values": [[148, null]], "baybe.priors": [[149, null]], "baybe.priors.base": [[150, null]], "baybe.priors.basic": [[152, null]], "baybe.recommenders": [[160, null]], "baybe.recommenders.base": [[161, null]], "baybe.recommenders.meta": [[163, null]], "baybe.recommenders.meta.base": [[164, null]], "baybe.recommenders.meta.sequential": [[166, null]], "baybe.recommenders.naive": [[171, null]], "baybe.recommenders.pure": [[173, null]], "baybe.recommenders.pure.base": [[174, null]], "baybe.recommenders.pure.bayesian": [[176, null]], "baybe.recommenders.pure.bayesian.base": [[177, null]], "baybe.recommenders.pure.bayesian.botorch": [[179, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[181, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[182, null]], "baybe.recommenders.pure.nonpredictive": [[183, null]], "baybe.recommenders.pure.nonpredictive.base": [[184, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[186, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[191, null]], "baybe.searchspace": [[194, null]], "baybe.searchspace.continuous": [[195, null]], "baybe.searchspace.core": [[197, null]], "baybe.searchspace.core.to_searchspace": [[200, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[201, null]], "baybe.searchspace.discrete": [[202, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[205, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[206, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[207, null]], "baybe.searchspace.validation": [[208, null]], "baybe.searchspace.validation.get_transform_parameters": [[209, null]], "baybe.searchspace.validation.validate_parameter_names": [[210, null]], "baybe.searchspace.validation.validate_parameters": [[211, null]], "baybe.serialization": [[212, null]], "baybe.serialization.core": [[213, null]], "baybe.serialization.core.block_deserialization_hook": [[214, null]], "baybe.serialization.core.block_serialization_hook": [[215, null]], "baybe.serialization.core.converter": [[216, null]], "baybe.serialization.core.get_base_structure_hook": [[217, null]], "baybe.serialization.core.select_constructor_hook": [[218, null]], "baybe.serialization.core.unstructure_base": [[219, null]], "baybe.serialization.mixin": [[220, null]], "baybe.serialization.utils": [[222, null]], "baybe.serialization.utils.deserialize_dataframe": [[223, null]], "baybe.serialization.utils.serialize_dataframe": [[224, null]], "baybe.simulation": [[225, null]], "baybe.simulation.core": [[226, null]], "baybe.simulation.core.simulate_experiment": [[227, null]], "baybe.simulation.lookup": [[228, null]], "baybe.simulation.lookup.look_up_targets": [[229, null]], "baybe.simulation.scenarios": [[230, null]], "baybe.simulation.scenarios.simulate_scenarios": [[231, null]], "baybe.simulation.transfer_learning": [[232, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[233, null]], "baybe.surrogates": [[234, null]], "baybe.surrogates.bandit": [[235, null]], "baybe.surrogates.base": [[237, null]], "baybe.surrogates.custom": [[241, null]], "baybe.surrogates.custom.register_custom_architecture": [[243, null]], "baybe.surrogates.gaussian_process": [[244, null]], "baybe.surrogates.gaussian_process.core": [[245, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[247, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[250, null]], "baybe.surrogates.gaussian_process.presets": [[251, null]], "baybe.surrogates.gaussian_process.presets.core": [[252, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[254, null]], "baybe.surrogates.gaussian_process.presets.default": [[255, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[257, null]], "baybe.surrogates.linear": [[259, null]], "baybe.surrogates.naive": [[261, null]], "baybe.surrogates.ngboost": [[263, null]], "baybe.surrogates.random_forest": [[265, null]], "baybe.surrogates.utils": [[267, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[268, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[269, null]], "baybe.surrogates.utils.catch_constant_targets": [[270, null]], "baybe.surrogates.validation": [[271, null]], "baybe.surrogates.validation.get_model_params_validator": [[272, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[273, null]], "baybe.targets": [[274, null]], "baybe.targets.base": [[275, null]], "baybe.targets.binary": [[277, null]], "baybe.targets.binary.ChoiceValue": [[279, null]], "baybe.targets.enum": [[280, null]], "baybe.targets.numerical": [[283, null]], "baybe.targets.transforms": [[285, null]], "baybe.targets.transforms.bell_transform": [[286, null]], "baybe.targets.transforms.linear_transform": [[287, null]], "baybe.targets.transforms.triangular_transform": [[288, null]], "baybe.telemetry": [[289, null]], "baybe.telemetry.get_user_details": [[290, null]], "baybe.telemetry.is_enabled": [[291, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[292, null]], "baybe.telemetry.telemetry_record_value": [[293, null]], "baybe.utils": [[294, null]], "baybe.utils.augmentation": [[295, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[296, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[297, null]], "baybe.utils.basic": [[298, null]], "baybe.utils.basic.UNSPECIFIED": [[300, null]], "baybe.utils.basic.find_subclass": [[303, null]], "baybe.utils.basic.get_baseclasses": [[304, null]], "baybe.utils.basic.get_subclasses": [[305, null]], "baybe.utils.basic.group_duplicate_values": [[306, null]], "baybe.utils.basic.hilberts_factory": [[307, null]], "baybe.utils.basic.is_all_instance": [[308, null]], "baybe.utils.basic.match_attributes": [[309, null]], "baybe.utils.basic.refers_to": [[310, null]], "baybe.utils.basic.register_hooks": [[311, null]], "baybe.utils.basic.to_tuple": [[312, null]], "baybe.utils.boolean": [[313, null]], "baybe.utils.boolean.check_if_in": [[314, null]], "baybe.utils.boolean.is_abstract": [[315, null]], "baybe.utils.boolean.strtobool": [[316, null]], "baybe.utils.chemistry": [[317, null]], "baybe.utils.chemistry.get_canonical_smiles": [[318, null]], "baybe.utils.chemistry.get_fingerprint_class": [[319, null]], "baybe.utils.chemistry.name_to_smiles": [[320, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[321, null]], "baybe.utils.conversion": [[322, null]], "baybe.utils.conversion.fraction_to_float": [[323, null]], "baybe.utils.conversion.nonstring_to_tuple": [[324, null]], "baybe.utils.dataframe": [[325, null]], "baybe.utils.dataframe.add_fake_measurements": [[326, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[327, null]], "baybe.utils.dataframe.add_parameter_noise": [[328, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[329, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[330, null]], "baybe.utils.dataframe.df_drop_string_columns": [[331, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[332, null]], "baybe.utils.dataframe.filter_df": [[333, null]], "baybe.utils.dataframe.fuzzy_row_match": [[334, null]], "baybe.utils.dataframe.get_transform_objects": [[335, null]], "baybe.utils.dataframe.pretty_print_df": [[336, null]], "baybe.utils.dataframe.to_tensor": [[337, null]], "baybe.utils.interval": [[338, null]], "baybe.utils.interval.InfiniteIntervalError": [[339, null]], "baybe.utils.interval.convert_bounds": [[341, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[342, null]], "baybe.utils.memory": [[343, null]], "baybe.utils.memory.bytes_to_human_readable": [[344, null]], "baybe.utils.numerical": [[345, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[346, null]], "baybe.utils.numerical.DTypeFloatONNX": [[347, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[348, null]], "baybe.utils.numerical.closer_element": [[349, null]], "baybe.utils.numerical.closest_element": [[350, null]], "baybe.utils.numerical.geom_mean": [[351, null]], "baybe.utils.plotting": [[352, null]], "baybe.utils.plotting.create_example_plots": [[353, null]], "baybe.utils.plotting.indent": [[354, null]], "baybe.utils.plotting.to_string": [[355, null]], "baybe.utils.random": [[356, null]], "baybe.utils.random.set_random_seed": [[357, null]], "baybe.utils.random.temporary_seed": [[358, null]], "baybe.utils.sampling_algorithms": [[359, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[361, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[362, null]], "baybe.utils.scaling": [[363, null]], "baybe.utils.torch": [[365, null]], "baybe.utils.torch.DTypeFloatTorch": [[366, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[367, null]], "baybe.utils.validation": [[368, null]], "baybe.utils.validation.finite_float": [[369, null]], "baybe.utils.validation.non_inf_float": [[370, null]], "baybe.utils.validation.non_nan_float": [[371, null]], "baybe.utils.validation.validate_not_nan": [[372, null]], "classproperty": [[302, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[417, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNoisyExpectedImprovement": [[12, null]], "qNegIntegratedPosteriorVariance": [[13, null]], "qNoisyExpectedImprovement": [[14, null]], "qProbabilityOfImprovement": [[15, null]], "qSimpleRegret": [[16, null]], "qThompsonSampling": [[17, null]], "qUpperConfidenceBound": [[18, null]], "\u201cPre-training\u201d stage": [[394, "pre-training-stage"]], "\u26a1 Quick Start": [[416, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[416, "maintainers"]], "\ud83d\udcbb Installation": [[416, "installation"]], "\ud83d\udcc4 License": [[416, "license"]], "\ud83d\udce1 Telemetry": [[416, "telemetry"]], "\ud83d\udd0b Batteries Included": [[416, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[416, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[64, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[65, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[66, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[67, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[68, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[69, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[70, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[71, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[72, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[73, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[74, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[75, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[76, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[77, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[78, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[83, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[90, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[91, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[92, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[94, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[95, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[96, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[97, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[98, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[99, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[100, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[101, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[103, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[104, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[105, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[110, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[115, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[120, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[123, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[124, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[125, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[127, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[128, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[141, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[151, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[153, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[154, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[155, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[156, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[157, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[158, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[159, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[162, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[165, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[172, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[175, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[178, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[185, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[198, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[203, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[236, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[238, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[239, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[240, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[246, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[248, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[249, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[256, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[258, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[260, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[262, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[264, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[266, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[276, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[278, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[284, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[302, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[299, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[339, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[340, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[364, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[60, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[61, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[62, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[64, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[65, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[66, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[67, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[68, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[69, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[70, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[71, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[72, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[73, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[74, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[75, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[76, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[77, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[78, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[132, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[133, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[135, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[339, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[159, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[20, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[20, "baybe.acquisition.base.AcquisitionFunction", false]], "active_values (baybe.parameters.categorical.taskparameter attribute)": [[128, "baybe.parameters.categorical.TaskParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[326, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[327, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[328, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[103, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[172, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[175, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[178, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[185, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[172, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[175, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[178, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[185, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[172, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[175, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[178, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[185, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[153, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[329, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[159, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[83, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[105, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[103, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[104, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[167, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[90, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[268, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[269, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[253, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[19, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[21, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[23, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[26, "module-baybe.campaign", false]], "baybe.constraints": [[28, "module-baybe.constraints", false]], "baybe.constraints.base": [[29, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[35, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[39, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[42, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[46, "module-baybe.constraints.discrete", false]], "baybe.constraints.validation": [[56, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[59, "module-baybe.exceptions", false]], "baybe.insights": [[79, "module-baybe.insights", false]], "baybe.insights.shap": [[80, "module-baybe.insights.shap", false]], "baybe.kernels": [[88, "module-baybe.kernels", false]], "baybe.kernels.base": [[89, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[93, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[102, "module-baybe.kernels.composite", false]], "baybe.objective": [[106, "module-baybe.objective", false]], "baybe.objectives": [[108, "module-baybe.objectives", false]], "baybe.objectives.base": [[109, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[112, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[114, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[117, "module-baybe.objectives.enum", false]], "baybe.objectives.single": [[119, "module-baybe.objectives.single", false]], "baybe.parameters": [[121, "module-baybe.parameters", false]], "baybe.parameters.base": [[122, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[126, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[129, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[131, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[136, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[139, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[142, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[145, "module-baybe.parameters.validation", false]], "baybe.priors": [[149, "module-baybe.priors", false]], "baybe.priors.base": [[150, "module-baybe.priors.base", false]], "baybe.priors.basic": [[152, "module-baybe.priors.basic", false]], "baybe.recommenders": [[160, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[161, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[163, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[164, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[166, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[171, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[173, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[174, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[176, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[177, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[179, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[181, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[183, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[184, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[186, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[191, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[194, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[195, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[197, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[202, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[208, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[212, "module-baybe.serialization", false]], "baybe.serialization.core": [[213, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[220, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[222, "module-baybe.serialization.utils", false]], "baybe.simulation": [[225, "module-baybe.simulation", false]], "baybe.simulation.core": [[226, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[228, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[230, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[232, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[234, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[235, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[237, "module-baybe.surrogates.base", false]], "baybe.surrogates.custom": [[241, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[244, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[245, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[247, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[251, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[252, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[255, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[257, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[259, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[261, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[263, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[265, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[267, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[271, "module-baybe.surrogates.validation", false]], "baybe.targets": [[274, "module-baybe.targets", false]], "baybe.targets.base": [[275, "module-baybe.targets.base", false]], "baybe.targets.binary": [[277, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[280, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[283, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[285, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[289, "module-baybe.telemetry", false]], "baybe.utils": [[294, "module-baybe.utils", false]], "baybe.utils.augmentation": [[295, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[298, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[313, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[317, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[322, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[325, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[338, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[343, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[345, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[352, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[356, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[359, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[363, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[365, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[368, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[260, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[178, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[282, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[286, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[153, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[236, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[153, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[278, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[214, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[215, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[284, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[344, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[27, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[30, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[270, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[132, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[127, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[340, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[314, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[279, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[302, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[349, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[350, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[364, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[124, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[127, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[128, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[141, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[198, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[203, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[123, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[124, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[125, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[127, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[128, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[141, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[198, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[203, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[203, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[172, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[175, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[178, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[185, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[91, "baybe.kernels.base.CompositeKernel", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[154, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[36, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[31, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[198, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[198, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[172, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[340, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[198, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[199, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[32, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[43, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[44, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[123, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[24, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[341, "baybe.utils.interval.convert_bounds", false]], "converter (in module baybe.serialization.core)": [[216, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[340, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[353, "baybe.utils.plotting.create_example_plots", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[133, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[130, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[133, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[141, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[141, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[256, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[60, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[223, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[115, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[296, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[297, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[330, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[331, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[332, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[172, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[198, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[199, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[124, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[360, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[346, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[347, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[366, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[299, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[258, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[199, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[61, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[124, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[127, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[128, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[141, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[198, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[203, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[203, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[203, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[83, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[83, "baybe.insights.shap.SHAPInsight.explainer", false]], "explainers (in module baybe.insights.shap)": [[81, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[278, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[361, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[333, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[303, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[369, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[236, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[238, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[239, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[240, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[246, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[260, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[262, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[264, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[266, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[364, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[360, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[323, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[83, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[198, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[90, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[91, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[92, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[94, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[95, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[96, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[97, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[98, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[99, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[100, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[101, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[103, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[104, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[105, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[110, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[115, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[120, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[123, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[124, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[125, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[127, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[128, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[141, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[151, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[153, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[154, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[155, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[156, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[157, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[158, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[159, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[165, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[167, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[169, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[198, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[221, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[236, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[238, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[239, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[246, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[249, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[260, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[262, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[264, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[266, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[276, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[278, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[284, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[340, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[20, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[30, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[31, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[32, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[34, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[36, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[38, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[90, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[91, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[92, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[94, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[95, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[96, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[97, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[98, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[99, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[100, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[101, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[103, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[104, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[105, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[110, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[115, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[120, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[123, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[124, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[125, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[127, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[128, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[141, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[151, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[153, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[154, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[155, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[156, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[157, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[158, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[159, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[165, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[167, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[169, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[198, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[221, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[236, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[238, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[239, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[246, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[249, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[260, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[262, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[264, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[266, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[276, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[278, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[284, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[340, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[198, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[246, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[198, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[83, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[83, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[334, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[154, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[253, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[246, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[118, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[351, "baybe.utils.numerical.geom_mean", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[217, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[304, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[318, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[198, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[165, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[319, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[272, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[165, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[165, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[198, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[143, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[305, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[178, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[335, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[209, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[290, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[306, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[155, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[156, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[307, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[199, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "incompatibilityerror": [[62, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[63, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[64, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[65, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[66, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "indent() (in module baybe.utils.plotting)": [[354, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[238, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infiniteintervalerror": [[339, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[132, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[340, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[67, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[68, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[315, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[308, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[340, "baybe.utils.interval.Interval.is_bounded", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[123, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[124, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[125, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[127, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[128, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[141, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[340, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[30, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[31, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[32, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[34, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[123, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[124, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[125, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[127, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[128, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[141, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[291, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[340, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[340, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[123, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[124, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[125, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[127, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[128, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[141, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[340, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[123, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[124, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[125, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[127, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[128, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[141, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[340, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[86, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[165, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[167, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[169, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[249, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[92, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[246, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[248, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[141, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[141, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[95, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[96, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[97, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[99, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[100, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[101, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[95, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[96, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[97, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[99, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[100, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[101, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[282, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[287, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[94, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[157, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[158, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[157, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[229, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[340, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[87, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[254, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[364, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[281, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[309, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[95, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[281, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[118, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[262, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[203, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[165, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[281, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[284, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[260, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[264, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[266, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[69, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [19, "module-baybe.acquisition.base", false], [21, "module-baybe.acquisition.partial", false], [23, "module-baybe.acquisition.utils", false], [26, "module-baybe.campaign", false], [28, "module-baybe.constraints", false], [29, "module-baybe.constraints.base", false], [35, "module-baybe.constraints.conditions", false], [39, "module-baybe.constraints.continuous", false], [42, "module-baybe.constraints.deprecation", false], [46, "module-baybe.constraints.discrete", false], [56, "module-baybe.constraints.validation", false], [59, "module-baybe.exceptions", false], [79, "module-baybe.insights", false], [80, "module-baybe.insights.shap", false], [88, "module-baybe.kernels", false], [89, "module-baybe.kernels.base", false], [93, "module-baybe.kernels.basic", false], [102, "module-baybe.kernels.composite", false], [106, "module-baybe.objective", false], [108, "module-baybe.objectives", false], [109, "module-baybe.objectives.base", false], [112, "module-baybe.objectives.deprecation", false], [114, "module-baybe.objectives.desirability", false], [117, "module-baybe.objectives.enum", false], [119, "module-baybe.objectives.single", false], [121, "module-baybe.parameters", false], [122, "module-baybe.parameters.base", false], [126, "module-baybe.parameters.categorical", false], [129, "module-baybe.parameters.custom", false], [131, "module-baybe.parameters.enum", false], [136, "module-baybe.parameters.numerical", false], [139, "module-baybe.parameters.substance", false], [142, "module-baybe.parameters.utils", false], [145, "module-baybe.parameters.validation", false], [149, "module-baybe.priors", false], [150, "module-baybe.priors.base", false], [152, "module-baybe.priors.basic", false], [160, "module-baybe.recommenders", false], [161, "module-baybe.recommenders.base", false], [163, "module-baybe.recommenders.meta", false], [164, "module-baybe.recommenders.meta.base", false], [166, "module-baybe.recommenders.meta.sequential", false], [171, "module-baybe.recommenders.naive", false], [173, "module-baybe.recommenders.pure", false], [174, "module-baybe.recommenders.pure.base", false], [176, "module-baybe.recommenders.pure.bayesian", false], [177, "module-baybe.recommenders.pure.bayesian.base", false], [179, "module-baybe.recommenders.pure.bayesian.botorch", false], [181, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [183, "module-baybe.recommenders.pure.nonpredictive", false], [184, "module-baybe.recommenders.pure.nonpredictive.base", false], [186, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [191, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [194, "module-baybe.searchspace", false], [195, "module-baybe.searchspace.continuous", false], [197, "module-baybe.searchspace.core", false], [202, "module-baybe.searchspace.discrete", false], [208, "module-baybe.searchspace.validation", false], [212, "module-baybe.serialization", false], [213, "module-baybe.serialization.core", false], [220, "module-baybe.serialization.mixin", false], [222, "module-baybe.serialization.utils", false], [225, "module-baybe.simulation", false], [226, "module-baybe.simulation.core", false], [228, "module-baybe.simulation.lookup", false], [230, "module-baybe.simulation.scenarios", false], [232, "module-baybe.simulation.transfer_learning", false], [234, "module-baybe.surrogates", false], [235, "module-baybe.surrogates.bandit", false], [237, "module-baybe.surrogates.base", false], [241, "module-baybe.surrogates.custom", false], [244, "module-baybe.surrogates.gaussian_process", false], [245, "module-baybe.surrogates.gaussian_process.core", false], [247, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [251, "module-baybe.surrogates.gaussian_process.presets", false], [252, "module-baybe.surrogates.gaussian_process.presets.core", false], [255, "module-baybe.surrogates.gaussian_process.presets.default", false], [257, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [259, "module-baybe.surrogates.linear", false], [261, "module-baybe.surrogates.naive", false], [263, "module-baybe.surrogates.ngboost", false], [265, "module-baybe.surrogates.random_forest", false], [267, "module-baybe.surrogates.utils", false], [271, "module-baybe.surrogates.validation", false], [274, "module-baybe.targets", false], [275, "module-baybe.targets.base", false], [277, "module-baybe.targets.binary", false], [280, "module-baybe.targets.enum", false], [283, "module-baybe.targets.numerical", false], [285, "module-baybe.targets.transforms", false], [289, "module-baybe.telemetry", false], [294, "module-baybe.utils", false], [295, "module-baybe.utils.augmentation", false], [298, "module-baybe.utils.basic", false], [313, "module-baybe.utils.boolean", false], [317, "module-baybe.utils.chemistry", false], [322, "module-baybe.utils.conversion", false], [325, "module-baybe.utils.dataframe", false], [338, "module-baybe.utils.interval", false], [343, "module-baybe.utils.memory", false], [345, "module-baybe.utils.numerical", false], [352, "module-baybe.utils.plotting", false], [356, "module-baybe.utils.random", false], [359, "module-baybe.utils.sampling_algorithms", false], [363, "module-baybe.utils.scaling", false], [365, "module-baybe.utils.torch", false], [368, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.n_fits_done", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[198, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[172, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[123, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[124, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[125, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[127, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[128, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[141, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[276, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[278, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[284, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[320, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[264, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[70, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[370, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[371, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[82, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[185, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[324, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[71, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[158, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[72, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[73, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[95, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[100, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[284, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[74, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[110, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[107, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[98, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[98, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[132, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[75, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[105, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[105, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[125, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[205, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[206, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[198, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameterencoding (class in baybe.parameters.enum)": [[134, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[30, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[31, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[32, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[34, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[198, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[96, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[96, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[96, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[97, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[249, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[83, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[98, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[236, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[238, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[239, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[246, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[260, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[262, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[264, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[266, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[236, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[236, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[98, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[336, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[236, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[151, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[104, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[175, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[97, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[360, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[266, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[154, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[99, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[162, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[165, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[172, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[175, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[178, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[185, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[187, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[192, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[162, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[169, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "refers_to() (in module baybe.utils.basic)": [[310, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[243, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[311, "baybe.utils.basic.register_hooks", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "rffkernel (class in baybe.kernels.basic)": [[100, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[101, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[362, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[116, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[115, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[118, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[155, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[156, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[157, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[158, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[105, "baybe.kernels.composite.ScaleKernel", false]], "searchspace (baybe.campaign.campaign attribute)": [[27, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[198, "baybe.searchspace.core.SearchSpace", false]], "searchspacetype (class in baybe.searchspace.core)": [[199, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[218, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[165, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[37, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[182, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[224, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[221, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[357, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[22, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[84, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[85, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[83, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[159, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[227, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[231, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[233, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[120, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[140, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[321, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[159, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[144, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[25, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[169, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[316, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[45, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[113, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[37, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[196, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[135, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[141, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[278, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[123, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[124, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[125, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[127, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[128, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[141, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[276, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[278, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[284, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[236, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[238, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[239, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[246, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[260, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[262, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[264, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[266, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[239, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[178, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[180, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[240, "baybe.surrogates.base.SurrogateProtocol", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[276, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[281, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[27, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[110, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[115, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[120, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[282, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[198, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[128, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[292, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[293, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[358, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[38, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[236, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[238, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[239, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[240, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[246, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[260, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[262, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[264, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[266, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[90, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[91, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[92, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[94, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[95, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[96, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[97, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[98, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[99, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[100, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[101, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[103, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[104, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[105, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[110, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[115, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[120, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[123, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[124, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[125, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[127, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[128, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[141, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[151, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[153, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[154, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[155, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[156, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[157, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[158, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[159, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[165, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[198, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[221, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[236, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[238, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[239, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[246, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[249, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[260, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[262, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[264, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[266, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[276, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[278, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[284, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[340, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[90, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[91, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[92, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[94, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[95, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[96, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[97, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[98, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[99, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[100, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[101, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[103, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[104, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[105, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[90, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[91, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[92, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[94, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[95, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[96, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[97, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[98, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[99, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[100, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[101, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[103, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[104, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[105, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[151, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[153, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[154, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[155, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[156, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[157, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[158, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[159, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[15, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[16, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[17, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[18, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[20, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[30, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[31, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[32, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[33, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[34, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[40, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[41, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[47, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[49, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[50, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[51, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[52, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[53, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[54, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[55, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[90, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[91, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[92, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[94, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[95, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[96, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[97, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[98, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[99, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[100, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[101, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[103, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[104, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[105, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[110, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[115, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[120, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[123, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[124, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[125, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[127, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[128, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[141, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[151, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[153, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[154, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[155, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[156, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[157, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[158, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[159, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[165, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[167, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[198, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[221, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[236, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[238, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[239, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[246, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[249, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[260, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[262, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[264, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[266, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[276, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[278, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[284, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[340, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[340, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[276, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[278, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[284, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[111, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[36, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[37, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[38, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[123, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[124, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[125, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[127, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[128, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[141, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[200, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[355, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[123, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[124, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[127, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[128, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[137, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[141, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[340, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[337, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[340, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[312, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[27, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[38, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[110, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[115, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[120, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[124, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[127, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[128, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[141, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[196, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[198, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[204, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[276, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[278, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[284, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[364, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[284, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[282, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[288, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[170, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[198, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[76, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[77, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[300, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[301, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[219, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[78, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[340, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[342, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[83, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[57, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[242, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[27, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[58, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[273, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[146, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[147, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[372, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[210, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[211, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[201, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[207, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[148, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[124, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[127, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[128, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[130, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[138, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[141, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[94, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[94, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[348, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[367, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[115, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[135, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [26, 0, 0, "-", "campaign"], [28, 0, 0, "-", "constraints"], [59, 0, 0, "-", "exceptions"], [79, 0, 0, "-", "insights"], [88, 0, 0, "-", "kernels"], [106, 0, 0, "-", "objective"], [108, 0, 0, "-", "objectives"], [121, 0, 0, "-", "parameters"], [149, 0, 0, "-", "priors"], [160, 0, 0, "-", "recommenders"], [194, 0, 0, "-", "searchspace"], [212, 0, 0, "-", "serialization"], [225, 0, 0, "-", "simulation"], [234, 0, 0, "-", "surrogates"], [274, 0, 0, "-", "targets"], [289, 0, 0, "-", "telemetry"], [294, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [19, 0, 0, "-", "base"], [21, 0, 0, "-", "partial"], [23, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNoisyExpectedImprovement"], [13, 1, 1, "", "qNegIntegratedPosteriorVariance"], [14, 1, 1, "", "qNoisyExpectedImprovement"], [15, 1, 1, "", "qProbabilityOfImprovement"], [16, 1, 1, "", "qSimpleRegret"], [17, 1, 1, "", "qThompsonSampling"], [18, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 2, 1, "", "get_integration_points"], [13, 3, 1, "", "sampling_fraction"], [13, 3, 1, "", "sampling_method"], [13, 3, 1, "", "sampling_n_points"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[13, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "n_mc_samples"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 3, 1, "", "beta"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.base": [[20, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.partial": [[22, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "botorch_acqf"], [22, 3, 1, "", "pin_discrete"], [22, 3, 1, "", "pinned_part"], [22, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[22, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[24, 5, 1, "", "convert_acqf"], [25, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[27, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "add_measurements"], [27, 3, 1, "", "allow_recommending_already_measured"], [27, 3, 1, "", "allow_recommending_already_recommended"], [27, 3, 1, "", "allow_recommending_pending_experiments"], [27, 2, 1, "", "from_config"], [27, 2, 1, "", "from_dict"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "get_surrogate"], [27, 6, 1, "", "measurements"], [27, 3, 1, "", "n_batches_done"], [27, 3, 1, "", "n_fits_done"], [27, 3, 1, "", "objective"], [27, 6, 1, "", "parameters"], [27, 2, 1, "", "posterior"], [27, 2, 1, "", "recommend"], [27, 3, 1, "", "recommender"], [27, 3, 1, "", "searchspace"], [27, 6, 1, "", "targets"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"], [27, 2, 1, "", "toggle_discrete_candidates"], [27, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[27, 4, 1, "", "data"], [27, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[27, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[27, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[27, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_surrogate.params": [[27, 4, 1, "", "batch_size"], [27, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[27, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.recommend.params": [[27, 4, 1, "", "batch_size"], [27, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[27, 4, 1, "", "complement"], [27, 4, 1, "", "constraints"], [27, 4, 1, "", "dry_run"], [27, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[27, 4, 1, "", "config_json"]], "baybe.constraints": [[29, 0, 0, "-", "base"], [35, 0, 0, "-", "conditions"], [39, 0, 0, "-", "continuous"], [42, 0, 0, "-", "deprecation"], [46, 0, 0, "-", "discrete"], [56, 0, 0, "-", "validation"]], "baybe.constraints.base": [[30, 1, 1, "", "CardinalityConstraint"], [31, 1, 1, "", "Constraint"], [32, 1, 1, "", "ContinuousConstraint"], [33, 1, 1, "", "ContinuousNonlinearConstraint"], [34, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "eval_during_augmentation"], [30, 3, 1, "", "eval_during_creation"], [30, 3, 1, "", "eval_during_modeling"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "from_json"], [30, 6, 1, "", "is_continuous"], [30, 6, 1, "", "is_discrete"], [30, 3, 1, "", "max_cardinality"], [30, 3, 1, "", "min_cardinality"], [30, 3, 1, "", "numerical_only"], [30, 3, 1, "", "parameters"], [30, 2, 1, "", "summary"], [30, 2, 1, "", "to_dict"], [30, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[30, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[30, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "eval_during_augmentation"], [31, 3, 1, "", "eval_during_creation"], [31, 3, 1, "", "eval_during_modeling"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 6, 1, "", "is_continuous"], [31, 6, 1, "", "is_discrete"], [31, 3, 1, "", "numerical_only"], [31, 3, 1, "", "parameters"], [31, 2, 1, "", "summary"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[31, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "eval_during_augmentation"], [32, 3, 1, "", "eval_during_creation"], [32, 3, 1, "", "eval_during_modeling"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_json"], [32, 6, 1, "", "is_continuous"], [32, 6, 1, "", "is_discrete"], [32, 3, 1, "", "numerical_only"], [32, 3, 1, "", "parameters"], [32, 2, 1, "", "summary"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[32, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[32, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 6, 1, "", "is_continuous"], [33, 6, 1, "", "is_discrete"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[33, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[33, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 2, 1, "", "get_invalid"], [34, 2, 1, "", "get_invalid_polars"], [34, 2, 1, "", "get_valid"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[34, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[34, 4, 1, "", "df"]], "baybe.constraints.conditions": [[36, 1, 1, "", "Condition"], [37, 1, 1, "", "SubSelectionCondition"], [38, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[36, 2, 1, "", "evaluate"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"], [36, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[36, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[36, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "evaluate"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "selection"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"], [37, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[37, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[37, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "evaluate"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 3, 1, "", "operator"], [38, 3, 1, "", "threshold"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"], [38, 2, 1, "", "to_polars"], [38, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[38, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[38, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[40, 1, 1, "", "ContinuousCardinalityConstraint"], [41, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[40, 2, 1, "", "__init__"], [40, 3, 1, "", "eval_during_augmentation"], [40, 3, 1, "", "eval_during_creation"], [40, 3, 1, "", "eval_during_modeling"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 6, 1, "", "is_continuous"], [40, 6, 1, "", "is_discrete"], [40, 3, 1, "", "max_cardinality"], [40, 3, 1, "", "min_cardinality"], [40, 3, 1, "", "numerical_only"], [40, 3, 1, "", "parameters"], [40, 2, 1, "", "sample_inactive_parameters"], [40, 2, 1, "", "summary"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[40, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "coefficients"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "is_continuous"], [41, 6, 1, "", "is_discrete"], [41, 6, 1, "", "is_eq"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "operator"], [41, 3, 1, "", "parameters"], [41, 3, 1, "", "rhs"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_botorch"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[41, 4, 1, "", "idx_offset"], [41, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[43, 5, 1, "", "ContinuousLinearEqualityConstraint"], [44, 5, 1, "", "ContinuousLinearInequalityConstraint"], [45, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[47, 1, 1, "", "DiscreteCardinalityConstraint"], [48, 1, 1, "", "DiscreteCustomConstraint"], [49, 1, 1, "", "DiscreteDependenciesConstraint"], [50, 1, 1, "", "DiscreteExcludeConstraint"], [51, 1, 1, "", "DiscreteLinkedParametersConstraint"], [52, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [53, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [54, 1, 1, "", "DiscreteProductConstraint"], [55, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[47, 2, 1, "", "__init__"], [47, 3, 1, "", "eval_during_augmentation"], [47, 3, 1, "", "eval_during_creation"], [47, 3, 1, "", "eval_during_modeling"], [47, 2, 1, "", "from_dict"], [47, 2, 1, "", "from_json"], [47, 2, 1, "", "get_invalid"], [47, 2, 1, "", "get_invalid_polars"], [47, 2, 1, "", "get_valid"], [47, 6, 1, "", "is_continuous"], [47, 6, 1, "", "is_discrete"], [47, 3, 1, "", "max_cardinality"], [47, 3, 1, "", "min_cardinality"], [47, 3, 1, "", "numerical_only"], [47, 3, 1, "", "parameters"], [47, 2, 1, "", "summary"], [47, 2, 1, "", "to_dict"], [47, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[47, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[47, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[47, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[47, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 2, 1, "", "get_invalid"], [48, 2, 1, "", "get_invalid_polars"], [48, 2, 1, "", "get_valid"], [48, 6, 1, "", "is_continuous"], [48, 6, 1, "", "is_discrete"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "parameters"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"], [48, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[48, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[48, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[48, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[48, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "affected_parameters"], [49, 3, 1, "", "conditions"], [49, 3, 1, "", "eval_during_augmentation"], [49, 3, 1, "", "eval_during_creation"], [49, 3, 1, "", "eval_during_modeling"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_json"], [49, 2, 1, "", "get_invalid"], [49, 2, 1, "", "get_invalid_polars"], [49, 2, 1, "", "get_valid"], [49, 6, 1, "", "is_continuous"], [49, 6, 1, "", "is_discrete"], [49, 3, 1, "", "numerical_only"], [49, 3, 1, "", "parameters"], [49, 3, 1, "", "permutation_invariant"], [49, 2, 1, "", "summary"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[49, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[49, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[49, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[49, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "combiner"], [50, 3, 1, "", "conditions"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 2, 1, "", "get_valid"], [50, 6, 1, "", "is_continuous"], [50, 6, 1, "", "is_discrete"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[50, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[50, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[50, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[50, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "dependencies"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "condition"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "condition"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.validation": [[57, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [58, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[57, 4, 1, "", "constraints"]], "baybe.exceptions": [[60, 7, 1, "", "DeprecationError"], [61, 7, 1, "", "EmptySearchSpaceError"], [62, 7, 1, "", "IncompatibilityError"], [63, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [64, 7, 1, "", "IncompatibleArgumentError"], [65, 7, 1, "", "IncompatibleExplainerError"], [66, 7, 1, "", "IncompatibleSearchSpaceError"], [67, 7, 1, "", "InvalidSurrogateModelError"], [68, 7, 1, "", "InvalidTargetValueError"], [69, 7, 1, "", "ModelNotTrainedError"], [70, 7, 1, "", "NoMCAcquisitionFunctionError"], [71, 7, 1, "", "NoRecommendersLeftError"], [72, 7, 1, "", "NotEnoughPointsLeftError"], [73, 7, 1, "", "NothingToSimulateError"], [74, 7, 1, "", "NumericalUnderflowError"], [75, 7, 1, "", "OptionalImportError"], [76, 7, 1, "", "UnidentifiedSubclassError"], [77, 7, 1, "", "UnmatchedAttributeError"], [78, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.insights": [[80, 0, 0, "-", "shap"]], "baybe.insights.shap": [[81, 8, 1, "", "EXPLAINERS"], [82, 8, 1, "", "NON_SHAP_EXPLAINERS"], [83, 1, 1, "", "SHAPInsight"], [84, 8, 1, "", "SHAP_EXPLAINERS"], [85, 8, 1, "", "SHAP_PLOTS"], [86, 5, 1, "", "is_shap_explainer"], [87, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[83, 2, 1, "", "__init__"], [83, 3, 1, "", "background_data"], [83, 2, 1, "", "explain"], [83, 3, 1, "", "explainer"], [83, 2, 1, "", "from_campaign"], [83, 2, 1, "", "from_recommender"], [83, 2, 1, "", "from_surrogate"], [83, 2, 1, "", "plot"], [83, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[83, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[83, 4, 1, "", "campaign"], [83, 4, 1, "", "explainer_cls"], [83, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[83, 4, 1, "", "explainer_cls"], [83, 4, 1, "", "measurements"], [83, 4, 1, "", "objective"], [83, 4, 1, "", "recommender"], [83, 4, 1, "", "searchspace"], [83, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[83, 4, 1, "", "**kwargs"], [83, 4, 1, "", "data"], [83, 4, 1, "", "explanation_index"], [83, 4, 1, "", "plot_type"], [83, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[87, 4, 1, "", "data"], [87, 4, 1, "", "explainer_cls"], [87, 4, 1, "", "surrogate"], [87, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[89, 0, 0, "-", "base"], [93, 0, 0, "-", "basic"], [102, 0, 0, "-", "composite"]], "baybe.kernels.base": [[90, 1, 1, "", "BasicKernel"], [91, 1, 1, "", "CompositeKernel"], [92, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "from_dict"], [90, 2, 1, "", "from_json"], [90, 2, 1, "", "to_dict"], [90, 2, 1, "", "to_factory"], [90, 2, 1, "", "to_gpytorch"], [90, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[90, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[90, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "from_dict"], [91, 2, 1, "", "from_json"], [91, 2, 1, "", "to_dict"], [91, 2, 1, "", "to_factory"], [91, 2, 1, "", "to_gpytorch"], [91, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[91, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[91, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "from_dict"], [92, 2, 1, "", "from_json"], [92, 2, 1, "", "to_dict"], [92, 2, 1, "", "to_factory"], [92, 2, 1, "", "to_gpytorch"], [92, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[92, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[92, 4, 1, "", "string"]], "baybe.kernels.basic": [[94, 1, 1, "", "LinearKernel"], [95, 1, 1, "", "MaternKernel"], [96, 1, 1, "", "PeriodicKernel"], [97, 1, 1, "", "PiecewisePolynomialKernel"], [98, 1, 1, "", "PolynomialKernel"], [99, 1, 1, "", "RBFKernel"], [100, 1, 1, "", "RFFKernel"], [101, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[94, 2, 1, "", "__init__"], [94, 2, 1, "", "from_dict"], [94, 2, 1, "", "from_json"], [94, 2, 1, "", "to_dict"], [94, 2, 1, "", "to_factory"], [94, 2, 1, "", "to_gpytorch"], [94, 2, 1, "", "to_json"], [94, 3, 1, "", "variance_initial_value"], [94, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[94, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[94, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "from_dict"], [95, 2, 1, "", "from_json"], [95, 3, 1, "", "lengthscale_initial_value"], [95, 3, 1, "", "lengthscale_prior"], [95, 3, 1, "", "nu"], [95, 2, 1, "", "to_dict"], [95, 2, 1, "", "to_factory"], [95, 2, 1, "", "to_gpytorch"], [95, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[95, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[95, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "from_dict"], [96, 2, 1, "", "from_json"], [96, 3, 1, "", "lengthscale_initial_value"], [96, 3, 1, "", "lengthscale_prior"], [96, 3, 1, "", "period_length_initial_value"], [96, 3, 1, "", "period_length_prior"], [96, 2, 1, "", "to_dict"], [96, 2, 1, "", "to_factory"], [96, 2, 1, "", "to_gpytorch"], [96, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[96, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[96, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "from_dict"], [97, 2, 1, "", "from_json"], [97, 3, 1, "", "lengthscale_initial_value"], [97, 3, 1, "", "lengthscale_prior"], [97, 3, 1, "", "q"], [97, 2, 1, "", "to_dict"], [97, 2, 1, "", "to_factory"], [97, 2, 1, "", "to_gpytorch"], [97, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[97, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[97, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "from_dict"], [98, 2, 1, "", "from_json"], [98, 3, 1, "", "offset_initial_value"], [98, 3, 1, "", "offset_prior"], [98, 3, 1, "", "power"], [98, 2, 1, "", "to_dict"], [98, 2, 1, "", "to_factory"], [98, 2, 1, "", "to_gpytorch"], [98, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[98, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[98, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "from_dict"], [99, 2, 1, "", "from_json"], [99, 3, 1, "", "lengthscale_initial_value"], [99, 3, 1, "", "lengthscale_prior"], [99, 2, 1, "", "to_dict"], [99, 2, 1, "", "to_factory"], [99, 2, 1, "", "to_gpytorch"], [99, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[99, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[99, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "from_dict"], [100, 2, 1, "", "from_json"], [100, 3, 1, "", "lengthscale_initial_value"], [100, 3, 1, "", "lengthscale_prior"], [100, 3, 1, "", "num_samples"], [100, 2, 1, "", "to_dict"], [100, 2, 1, "", "to_factory"], [100, 2, 1, "", "to_gpytorch"], [100, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[100, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[100, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "from_dict"], [101, 2, 1, "", "from_json"], [101, 3, 1, "", "lengthscale_initial_value"], [101, 3, 1, "", "lengthscale_prior"], [101, 2, 1, "", "to_dict"], [101, 2, 1, "", "to_factory"], [101, 2, 1, "", "to_gpytorch"], [101, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[101, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[101, 4, 1, "", "string"]], "baybe.kernels.composite": [[103, 1, 1, "", "AdditiveKernel"], [104, 1, 1, "", "ProductKernel"], [105, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[103, 2, 1, "", "__init__"], [103, 3, 1, "", "base_kernels"], [103, 2, 1, "", "from_dict"], [103, 2, 1, "", "from_json"], [103, 2, 1, "", "to_dict"], [103, 2, 1, "", "to_factory"], [103, 2, 1, "", "to_gpytorch"], [103, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[103, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[103, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[104, 2, 1, "", "__init__"], [104, 3, 1, "", "base_kernels"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[105, 2, 1, "", "__init__"], [105, 3, 1, "", "base_kernel"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 3, 1, "", "outputscale_initial_value"], [105, 3, 1, "", "outputscale_prior"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_factory"], [105, 2, 1, "", "to_gpytorch"], [105, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[105, 4, 1, "", "string"]], "baybe.objective": [[107, 5, 1, "", "Objective"]], "baybe.objectives": [[109, 0, 0, "-", "base"], [112, 0, 0, "-", "deprecation"], [114, 0, 0, "-", "desirability"], [117, 0, 0, "-", "enum"], [119, 0, 0, "-", "single"]], "baybe.objectives.base": [[110, 1, 1, "", "Objective"], [111, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 6, 1, "", "targets"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_json"], [110, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[110, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[110, 4, 1, "", "allow_extra"], [110, 4, 1, "", "allow_missing"], [110, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[113, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[115, 1, 1, "", "DesirabilityObjective"], [116, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 3, 1, "", "scalarizer"], [115, 6, 1, "", "targets"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_json"], [115, 2, 1, "", "transform"], [115, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[115, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[115, 4, 1, "", "allow_extra"], [115, 4, 1, "", "allow_missing"], [115, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[116, 4, 1, "", "scalarizer"], [116, 4, 1, "", "values"], [116, 4, 1, "", "weights"]], "baybe.objectives.enum": [[118, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[118, 3, 1, "", "GEOM_MEAN"], [118, 3, 1, "", "MEAN"]], "baybe.objectives.single": [[120, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[120, 2, 1, "", "__init__"], [120, 2, 1, "", "from_dict"], [120, 2, 1, "", "from_json"], [120, 6, 1, "", "targets"], [120, 2, 1, "", "to_dict"], [120, 2, 1, "", "to_json"], [120, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[120, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[120, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[120, 4, 1, "", "allow_extra"], [120, 4, 1, "", "allow_missing"], [120, 4, 1, "", "df"]], "baybe.parameters": [[122, 0, 0, "-", "base"], [126, 0, 0, "-", "categorical"], [129, 0, 0, "-", "custom"], [131, 0, 0, "-", "enum"], [136, 0, 0, "-", "numerical"], [139, 0, 0, "-", "substance"], [142, 0, 0, "-", "utils"], [145, 0, 0, "-", "validation"]], "baybe.parameters.base": [[123, 1, 1, "", "ContinuousParameter"], [124, 1, 1, "", "DiscreteParameter"], [125, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[123, 2, 1, "", "__init__"], [123, 6, 1, "", "comp_rep_columns"], [123, 2, 1, "", "from_dict"], [123, 2, 1, "", "from_json"], [123, 6, 1, "", "is_continuous"], [123, 6, 1, "", "is_discrete"], [123, 2, 1, "", "is_in_range"], [123, 3, 1, "", "is_numerical"], [123, 3, 1, "", "name"], [123, 2, 1, "", "summary"], [123, 2, 1, "", "to_dict"], [123, 2, 1, "", "to_json"], [123, 2, 1, "", "to_searchspace"], [123, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[123, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[123, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[123, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[124, 2, 1, "", "__init__"], [124, 6, 1, "", "comp_df"], [124, 6, 1, "", "comp_rep_columns"], [124, 3, 1, "", "encoding"], [124, 2, 1, "", "from_dict"], [124, 2, 1, "", "from_json"], [124, 6, 1, "", "is_continuous"], [124, 6, 1, "", "is_discrete"], [124, 2, 1, "", "is_in_range"], [124, 3, 1, "", "is_numerical"], [124, 3, 1, "", "name"], [124, 2, 1, "", "summary"], [124, 2, 1, "", "to_dict"], [124, 2, 1, "", "to_json"], [124, 2, 1, "", "to_searchspace"], [124, 2, 1, "", "to_subspace"], [124, 2, 1, "", "transform"], [124, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[124, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[124, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[124, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[124, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[125, 2, 1, "", "__init__"], [125, 6, 1, "", "comp_rep_columns"], [125, 2, 1, "", "from_dict"], [125, 2, 1, "", "from_json"], [125, 6, 1, "", "is_continuous"], [125, 6, 1, "", "is_discrete"], [125, 2, 1, "", "is_in_range"], [125, 3, 1, "", "is_numerical"], [125, 3, 1, "", "name"], [125, 2, 1, "", "summary"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "to_json"], [125, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[125, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[125, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[125, 4, 1, "", "item"]], "baybe.parameters.categorical": [[127, 1, 1, "", "CategoricalParameter"], [128, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[127, 2, 1, "", "__init__"], [127, 6, 1, "", "comp_df"], [127, 6, 1, "", "comp_rep_columns"], [127, 3, 1, "", "encoding"], [127, 2, 1, "", "from_dict"], [127, 2, 1, "", "from_json"], [127, 6, 1, "", "is_continuous"], [127, 6, 1, "", "is_discrete"], [127, 2, 1, "", "is_in_range"], [127, 3, 1, "", "is_numerical"], [127, 3, 1, "", "name"], [127, 2, 1, "", "summary"], [127, 2, 1, "", "to_dict"], [127, 2, 1, "", "to_json"], [127, 2, 1, "", "to_searchspace"], [127, 2, 1, "", "to_subspace"], [127, 2, 1, "", "transform"], [127, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[127, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[127, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[127, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[127, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[128, 2, 1, "", "__init__"], [128, 3, 1, "", "active_values"], [128, 6, 1, "", "comp_df"], [128, 6, 1, "", "comp_rep_columns"], [128, 3, 1, "", "encoding"], [128, 2, 1, "", "from_dict"], [128, 2, 1, "", "from_json"], [128, 6, 1, "", "is_continuous"], [128, 6, 1, "", "is_discrete"], [128, 2, 1, "", "is_in_range"], [128, 3, 1, "", "is_numerical"], [128, 3, 1, "", "name"], [128, 2, 1, "", "summary"], [128, 2, 1, "", "to_dict"], [128, 2, 1, "", "to_json"], [128, 2, 1, "", "to_searchspace"], [128, 2, 1, "", "to_subspace"], [128, 2, 1, "", "transform"], [128, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[128, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[128, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[128, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[128, 4, 1, "", "series"]], "baybe.parameters.custom": [[130, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[130, 2, 1, "", "__init__"], [130, 6, 1, "", "comp_df"], [130, 6, 1, "", "comp_rep_columns"], [130, 3, 1, "", "data"], [130, 3, 1, "", "decorrelate"], [130, 3, 1, "", "encoding"], [130, 2, 1, "", "from_dict"], [130, 2, 1, "", "from_json"], [130, 6, 1, "", "is_continuous"], [130, 6, 1, "", "is_discrete"], [130, 2, 1, "", "is_in_range"], [130, 3, 1, "", "is_numerical"], [130, 3, 1, "", "name"], [130, 2, 1, "", "summary"], [130, 2, 1, "", "to_dict"], [130, 2, 1, "", "to_json"], [130, 2, 1, "", "to_searchspace"], [130, 2, 1, "", "to_subspace"], [130, 2, 1, "", "transform"], [130, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[130, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[130, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[130, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[130, 4, 1, "", "series"]], "baybe.parameters.enum": [[132, 1, 1, "", "CategoricalEncoding"], [133, 1, 1, "", "CustomEncoding"], [134, 1, 1, "", "ParameterEncoding"], [135, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[132, 3, 1, "", "INT"], [132, 3, 1, "", "OHE"], [132, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[133, 3, 1, "", "CUSTOM"], [133, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[135, 3, 1, "", "ATOMPAIR"], [135, 3, 1, "", "AUTOCORR"], [135, 3, 1, "", "AVALON"], [135, 3, 1, "", "BCUT2D"], [135, 3, 1, "", "E3FP"], [135, 3, 1, "", "ECFP"], [135, 3, 1, "", "ELECTROSHAPE"], [135, 3, 1, "", "ERG"], [135, 3, 1, "", "ESTATE"], [135, 3, 1, "", "FUNCTIONALGROUPS"], [135, 3, 1, "", "GETAWAY"], [135, 3, 1, "", "GHOSECRIPPEN"], [135, 3, 1, "", "KLEKOTAROTH"], [135, 3, 1, "", "LAGGNER"], [135, 3, 1, "", "LAYERED"], [135, 3, 1, "", "LINGO"], [135, 3, 1, "", "MACCS"], [135, 3, 1, "", "MAP"], [135, 3, 1, "", "MHFP"], [135, 3, 1, "", "MORDRED"], [135, 3, 1, "", "MORGAN_FP"], [135, 3, 1, "", "MORSE"], [135, 3, 1, "", "MQNS"], [135, 3, 1, "", "PATTERN"], [135, 3, 1, "", "PHARMACOPHORE"], [135, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [135, 3, 1, "", "PUBCHEM"], [135, 3, 1, "", "RDF"], [135, 3, 1, "", "RDKIT"], [135, 3, 1, "", "RDKIT2DDESCRIPTORS"], [135, 3, 1, "", "RDKITFINGERPRINT"], [135, 3, 1, "", "SECFP"], [135, 3, 1, "", "TOPOLOGICALTORSION"], [135, 3, 1, "", "USR"], [135, 3, 1, "", "USRCAT"], [135, 3, 1, "", "VSA"], [135, 3, 1, "", "WHIM"], [135, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[137, 1, 1, "", "NumericalContinuousParameter"], [138, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[137, 2, 1, "", "__init__"], [137, 3, 1, "", "bounds"], [137, 6, 1, "", "comp_rep_columns"], [137, 2, 1, "", "from_dict"], [137, 2, 1, "", "from_json"], [137, 6, 1, "", "is_continuous"], [137, 6, 1, "", "is_discrete"], [137, 2, 1, "", "is_in_range"], [137, 3, 1, "", "is_numerical"], [137, 3, 1, "", "name"], [137, 2, 1, "", "summary"], [137, 2, 1, "", "to_dict"], [137, 2, 1, "", "to_json"], [137, 2, 1, "", "to_searchspace"], [137, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[137, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[137, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[137, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[138, 2, 1, "", "__init__"], [138, 6, 1, "", "comp_df"], [138, 6, 1, "", "comp_rep_columns"], [138, 3, 1, "", "encoding"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 6, 1, "", "is_continuous"], [138, 6, 1, "", "is_discrete"], [138, 2, 1, "", "is_in_range"], [138, 3, 1, "", "is_numerical"], [138, 3, 1, "", "name"], [138, 2, 1, "", "summary"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_json"], [138, 2, 1, "", "to_searchspace"], [138, 2, 1, "", "to_subspace"], [138, 3, 1, "", "tolerance"], [138, 2, 1, "", "transform"], [138, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[138, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[138, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[138, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[138, 4, 1, "", "series"]], "baybe.parameters.substance": [[140, 3, 1, "", "Smiles"], [141, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[141, 2, 1, "", "__init__"], [141, 6, 1, "", "comp_df"], [141, 6, 1, "", "comp_rep_columns"], [141, 3, 1, "", "data"], [141, 3, 1, "", "decorrelate"], [141, 3, 1, "", "encoding"], [141, 2, 1, "", "from_dict"], [141, 2, 1, "", "from_json"], [141, 6, 1, "", "is_continuous"], [141, 6, 1, "", "is_discrete"], [141, 2, 1, "", "is_in_range"], [141, 3, 1, "", "is_numerical"], [141, 3, 1, "", "kwargs_conformer"], [141, 3, 1, "", "kwargs_fingerprint"], [141, 3, 1, "", "name"], [141, 2, 1, "", "summary"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "to_json"], [141, 2, 1, "", "to_searchspace"], [141, 2, 1, "", "to_subspace"], [141, 2, 1, "", "transform"], [141, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[141, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[141, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[141, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[141, 4, 1, "", "series"]], "baybe.parameters.utils": [[143, 5, 1, "", "get_parameters_from_dataframe"], [144, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[143, 4, 1, "", "df"], [143, 4, 1, "", "factory"], [143, 4, 1, "", "parameters"]], "baybe.parameters.validation": [[146, 5, 1, "", "validate_decorrelation"], [147, 5, 1, "", "validate_is_finite"], [148, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[150, 0, 0, "-", "base"], [152, 0, 0, "-", "basic"]], "baybe.priors.base": [[151, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "from_dict"], [151, 2, 1, "", "from_json"], [151, 2, 1, "", "to_dict"], [151, 2, 1, "", "to_gpytorch"], [151, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[151, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[151, 4, 1, "", "string"]], "baybe.priors.basic": [[153, 1, 1, "", "BetaPrior"], [154, 1, 1, "", "GammaPrior"], [155, 1, 1, "", "HalfCauchyPrior"], [156, 1, 1, "", "HalfNormalPrior"], [157, 1, 1, "", "LogNormalPrior"], [158, 1, 1, "", "NormalPrior"], [159, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[153, 2, 1, "", "__init__"], [153, 3, 1, "", "alpha"], [153, 3, 1, "", "beta"], [153, 2, 1, "", "from_dict"], [153, 2, 1, "", "from_json"], [153, 2, 1, "", "to_dict"], [153, 2, 1, "", "to_gpytorch"], [153, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[153, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[153, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[154, 2, 1, "", "__init__"], [154, 3, 1, "", "concentration"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 3, 1, "", "rate"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_gpytorch"], [154, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[154, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[154, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 3, 1, "", "scale"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_gpytorch"], [155, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[155, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_json"], [156, 3, 1, "", "scale"], [156, 2, 1, "", "to_dict"], [156, 2, 1, "", "to_gpytorch"], [156, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[156, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[156, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "from_dict"], [157, 2, 1, "", "from_json"], [157, 3, 1, "", "loc"], [157, 3, 1, "", "scale"], [157, 2, 1, "", "to_dict"], [157, 2, 1, "", "to_gpytorch"], [157, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[157, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[157, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "from_dict"], [158, 2, 1, "", "from_json"], [158, 3, 1, "", "loc"], [158, 3, 1, "", "scale"], [158, 2, 1, "", "to_dict"], [158, 2, 1, "", "to_gpytorch"], [158, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[158, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[158, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[159, 2, 1, "", "__init__"], [159, 3, 1, "", "a"], [159, 3, 1, "", "b"], [159, 2, 1, "", "from_dict"], [159, 2, 1, "", "from_json"], [159, 3, 1, "", "sigma"], [159, 2, 1, "", "to_dict"], [159, 2, 1, "", "to_gpytorch"], [159, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[159, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[159, 4, 1, "", "string"]], "baybe.recommenders": [[161, 0, 0, "-", "base"], [163, 0, 0, "-", "meta"], [171, 0, 0, "-", "naive"], [173, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[162, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[162, 4, 1, "", "batch_size"], [162, 4, 1, "", "measurements"], [162, 4, 1, "", "objective"], [162, 4, 1, "", "pending_experiments"], [162, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[164, 0, 0, "-", "base"], [166, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[165, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "from_dict"], [165, 2, 1, "", "from_json"], [165, 2, 1, "", "get_current_recommender"], [165, 2, 1, "", "get_next_recommender"], [165, 2, 1, "", "get_non_meta_recommender"], [165, 6, 1, "", "is_stateful"], [165, 2, 1, "", "recommend"], [165, 2, 1, "", "select_recommender"], [165, 2, 1, "", "to_dict"], [165, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[165, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[165, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[167, 1, 1, "", "BaseSequentialMetaRecommender"], [168, 1, 1, "", "SequentialMetaRecommender"], [169, 1, 1, "", "StreamingSequentialMetaRecommender"], [170, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "from_dict"], [167, 2, 1, "", "from_json"], [167, 2, 1, "", "get_current_recommender"], [167, 2, 1, "", "get_next_recommender"], [167, 2, 1, "", "get_non_meta_recommender"], [167, 6, 1, "", "is_stateful"], [167, 2, 1, "", "recommend"], [167, 2, 1, "", "select_recommender"], [167, 2, 1, "", "to_dict"], [167, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[167, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[167, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "from_dict"], [168, 2, 1, "", "from_json"], [168, 2, 1, "", "get_current_recommender"], [168, 2, 1, "", "get_next_recommender"], [168, 2, 1, "", "get_non_meta_recommender"], [168, 6, 1, "", "is_stateful"], [168, 3, 1, "", "mode"], [168, 2, 1, "", "recommend"], [168, 3, 1, "", "recommenders"], [168, 2, 1, "", "select_recommender"], [168, 2, 1, "", "to_dict"], [168, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[168, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[168, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "from_dict"], [169, 2, 1, "", "from_json"], [169, 2, 1, "", "get_current_recommender"], [169, 2, 1, "", "get_next_recommender"], [169, 2, 1, "", "get_non_meta_recommender"], [169, 6, 1, "", "is_stateful"], [169, 2, 1, "", "recommend"], [169, 3, 1, "", "recommenders"], [169, 2, 1, "", "select_recommender"], [169, 2, 1, "", "to_dict"], [169, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[169, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[169, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 2, 1, "", "get_current_recommender"], [170, 2, 1, "", "get_next_recommender"], [170, 2, 1, "", "get_non_meta_recommender"], [170, 3, 1, "", "initial_recommender"], [170, 6, 1, "", "is_stateful"], [170, 2, 1, "", "recommend"], [170, 3, 1, "", "recommender"], [170, 3, 1, "", "remain_switched"], [170, 2, 1, "", "select_recommender"], [170, 3, 1, "", "switch_after"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[170, 4, 1, "", "string"]], "baybe.recommenders.naive": [[172, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[172, 2, 1, "", "__init__"], [172, 6, 1, "", "allow_recommending_already_measured"], [172, 6, 1, "", "allow_recommending_pending_experiments"], [172, 6, 1, "", "allow_repeated_recommendations"], [172, 3, 1, "", "compatibility"], [172, 3, 1, "", "cont_recommender"], [172, 3, 1, "", "disc_recommender"], [172, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[172, 4, 1, "", "batch_size"], [172, 4, 1, "", "measurements"], [172, 4, 1, "", "objective"], [172, 4, 1, "", "pending_experiments"], [172, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[174, 0, 0, "-", "base"], [176, 0, 0, "-", "bayesian"], [183, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[175, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[175, 2, 1, "", "__init__"], [175, 6, 1, "", "allow_recommending_already_measured"], [175, 6, 1, "", "allow_recommending_pending_experiments"], [175, 6, 1, "", "allow_repeated_recommendations"], [175, 3, 1, "", "compatibility"], [175, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[175, 4, 1, "", "batch_size"], [175, 4, 1, "", "measurements"], [175, 4, 1, "", "objective"], [175, 4, 1, "", "pending_experiments"], [175, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[177, 0, 0, "-", "base"], [179, 0, 0, "-", "botorch"], [181, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[178, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[178, 2, 1, "", "__init__"], [178, 3, 1, "", "acquisition_function"], [178, 3, 1, "", "acquisition_function_cls"], [178, 6, 1, "", "allow_recommending_already_measured"], [178, 6, 1, "", "allow_recommending_pending_experiments"], [178, 6, 1, "", "allow_repeated_recommendations"], [178, 3, 1, "", "compatibility"], [178, 2, 1, "", "get_surrogate"], [178, 2, 1, "", "recommend"], [178, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[178, 4, 1, "", "batch_size"], [178, 4, 1, "", "measurements"], [178, 4, 1, "", "objective"], [178, 4, 1, "", "pending_experiments"], [178, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[180, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[180, 2, 1, "", "__init__"], [180, 3, 1, "", "acquisition_function"], [180, 3, 1, "", "acquisition_function_cls"], [180, 6, 1, "", "allow_recommending_already_measured"], [180, 6, 1, "", "allow_recommending_pending_experiments"], [180, 6, 1, "", "allow_repeated_recommendations"], [180, 3, 1, "", "compatibility"], [180, 2, 1, "", "get_surrogate"], [180, 3, 1, "", "hybrid_sampler"], [180, 3, 1, "", "n_raw_samples"], [180, 3, 1, "", "n_restarts"], [180, 2, 1, "", "recommend"], [180, 3, 1, "", "sampling_percentage"], [180, 3, 1, "", "sequential_continuous"], [180, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[180, 4, 1, "", "batch_size"], [180, 4, 1, "", "measurements"], [180, 4, 1, "", "objective"], [180, 4, 1, "", "pending_experiments"], [180, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[182, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[184, 0, 0, "-", "base"], [186, 0, 0, "-", "clustering"], [191, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[185, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[185, 2, 1, "", "__init__"], [185, 6, 1, "", "allow_recommending_already_measured"], [185, 6, 1, "", "allow_recommending_pending_experiments"], [185, 6, 1, "", "allow_repeated_recommendations"], [185, 3, 1, "", "compatibility"], [185, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[185, 4, 1, "", "batch_size"], [185, 4, 1, "", "measurements"], [185, 4, 1, "", "objective"], [185, 4, 1, "", "pending_experiments"], [185, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[187, 1, 1, "", "GaussianMixtureClusteringRecommender"], [188, 1, 1, "", "KMeansClusteringRecommender"], [189, 1, 1, "", "PAMClusteringRecommender"], [190, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[187, 2, 1, "", "__init__"], [187, 6, 1, "", "allow_recommending_already_measured"], [187, 6, 1, "", "allow_recommending_pending_experiments"], [187, 6, 1, "", "allow_repeated_recommendations"], [187, 3, 1, "", "compatibility"], [187, 3, 1, "", "model_cluster_num_parameter_name"], [187, 3, 1, "", "model_params"], [187, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[187, 4, 1, "", "batch_size"], [187, 4, 1, "", "measurements"], [187, 4, 1, "", "objective"], [187, 4, 1, "", "pending_experiments"], [187, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[188, 2, 1, "", "__init__"], [188, 6, 1, "", "allow_recommending_already_measured"], [188, 6, 1, "", "allow_recommending_pending_experiments"], [188, 6, 1, "", "allow_repeated_recommendations"], [188, 3, 1, "", "compatibility"], [188, 3, 1, "", "model_cluster_num_parameter_name"], [188, 3, 1, "", "model_params"], [188, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[188, 4, 1, "", "batch_size"], [188, 4, 1, "", "measurements"], [188, 4, 1, "", "objective"], [188, 4, 1, "", "pending_experiments"], [188, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[189, 2, 1, "", "__init__"], [189, 6, 1, "", "allow_recommending_already_measured"], [189, 6, 1, "", "allow_recommending_pending_experiments"], [189, 6, 1, "", "allow_repeated_recommendations"], [189, 3, 1, "", "compatibility"], [189, 3, 1, "", "model_cluster_num_parameter_name"], [189, 3, 1, "", "model_params"], [189, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[189, 4, 1, "", "batch_size"], [189, 4, 1, "", "measurements"], [189, 4, 1, "", "objective"], [189, 4, 1, "", "pending_experiments"], [189, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[190, 2, 1, "", "__init__"], [190, 6, 1, "", "allow_recommending_already_measured"], [190, 6, 1, "", "allow_recommending_pending_experiments"], [190, 6, 1, "", "allow_repeated_recommendations"], [190, 3, 1, "", "compatibility"], [190, 3, 1, "", "model_cluster_num_parameter_name"], [190, 3, 1, "", "model_params"], [190, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[190, 4, 1, "", "batch_size"], [190, 4, 1, "", "measurements"], [190, 4, 1, "", "objective"], [190, 4, 1, "", "pending_experiments"], [190, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[192, 1, 1, "", "FPSRecommender"], [193, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[192, 2, 1, "", "__init__"], [192, 6, 1, "", "allow_recommending_already_measured"], [192, 6, 1, "", "allow_recommending_pending_experiments"], [192, 6, 1, "", "allow_repeated_recommendations"], [192, 3, 1, "", "compatibility"], [192, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[192, 4, 1, "", "batch_size"], [192, 4, 1, "", "measurements"], [192, 4, 1, "", "objective"], [192, 4, 1, "", "pending_experiments"], [192, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[193, 2, 1, "", "__init__"], [193, 6, 1, "", "allow_recommending_already_measured"], [193, 6, 1, "", "allow_recommending_pending_experiments"], [193, 6, 1, "", "allow_repeated_recommendations"], [193, 3, 1, "", "compatibility"], [193, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[193, 4, 1, "", "batch_size"], [193, 4, 1, "", "measurements"], [193, 4, 1, "", "objective"], [193, 4, 1, "", "pending_experiments"], [193, 4, 1, "", "searchspace"]], "baybe.searchspace": [[195, 0, 0, "-", "continuous"], [197, 0, 0, "-", "core"], [202, 0, 0, "-", "discrete"], [208, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[196, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[196, 2, 1, "", "__init__"], [196, 6, 1, "", "comp_rep_bounds"], [196, 6, 1, "", "comp_rep_columns"], [196, 6, 1, "", "constraints_cardinality"], [196, 3, 1, "", "constraints_lin_eq"], [196, 3, 1, "", "constraints_lin_ineq"], [196, 3, 1, "", "constraints_nonlin"], [196, 2, 1, "", "empty"], [196, 2, 1, "", "from_bounds"], [196, 2, 1, "", "from_dataframe"], [196, 2, 1, "", "from_dict"], [196, 2, 1, "", "from_json"], [196, 2, 1, "", "from_parameter"], [196, 2, 1, "", "from_product"], [196, 6, 1, "", "full_factorial"], [196, 2, 1, "", "get_parameters_by_name"], [196, 6, 1, "", "is_empty"], [196, 6, 1, "", "parameter_names"], [196, 3, 1, "", "parameters"], [196, 2, 1, "", "sample_from_full_factorial"], [196, 2, 1, "", "sample_uniform"], [196, 2, 1, "", "samples_full_factorial"], [196, 2, 1, "", "samples_random"], [196, 2, 1, "", "to_dict"], [196, 2, 1, "", "to_json"], [196, 2, 1, "", "to_searchspace"], [196, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[196, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[196, 4, 1, "", "df"], [196, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[196, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[196, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[196, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[196, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[196, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[196, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[198, 1, 1, "", "SearchSpace"], [199, 1, 1, "", "SearchSpaceType"], [200, 5, 1, "", "to_searchspace"], [201, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[198, 2, 1, "", "__init__"], [198, 6, 1, "", "comp_rep_bounds"], [198, 6, 1, "", "comp_rep_columns"], [198, 6, 1, "", "constraints"], [198, 6, 1, "", "constraints_augmentable"], [198, 3, 1, "", "continuous"], [198, 3, 1, "", "discrete"], [198, 2, 1, "", "estimate_product_space_size"], [198, 2, 1, "", "from_dataframe"], [198, 2, 1, "", "from_dict"], [198, 2, 1, "", "from_json"], [198, 2, 1, "", "from_parameter"], [198, 2, 1, "", "from_product"], [198, 2, 1, "", "get_comp_rep_parameter_indices"], [198, 2, 1, "", "get_parameters_by_name"], [198, 6, 1, "", "n_tasks"], [198, 6, 1, "", "parameter_names"], [198, 6, 1, "", "parameters"], [198, 6, 1, "", "task_idx"], [198, 2, 1, "", "to_dict"], [198, 2, 1, "", "to_json"], [198, 2, 1, "", "transform"], [198, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[198, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[198, 4, 1, "", "df"], [198, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[198, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[198, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[198, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[198, 4, 1, "", "constraints"], [198, 4, 1, "", "empty_encoding"], [198, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[198, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[198, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[198, 4, 1, "", "allow_extra"], [198, 4, 1, "", "allow_missing"], [198, 4, 1, "", "data"], [198, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[199, 3, 1, "", "CONTINUOUS"], [199, 3, 1, "", "DISCRETE"], [199, 3, 1, "", "EITHER"], [199, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[203, 1, 1, "", "MemorySize"], [204, 1, 1, "", "SubspaceDiscrete"], [205, 5, 1, "", "parameter_cartesian_prod_pandas"], [206, 5, 1, "", "parameter_cartesian_prod_polars"], [207, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[203, 2, 1, "", "__init__"], [203, 3, 1, "", "comp_rep_bytes"], [203, 6, 1, "", "comp_rep_human_readable"], [203, 3, 1, "", "comp_rep_shape"], [203, 3, 1, "", "exp_rep_bytes"], [203, 6, 1, "", "exp_rep_human_readable"], [203, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[204, 2, 1, "", "__init__"], [204, 3, 1, "", "comp_rep"], [204, 6, 1, "", "comp_rep_bounds"], [204, 6, 1, "", "comp_rep_columns"], [204, 3, 1, "", "constraints"], [204, 2, 1, "", "empty"], [204, 3, 1, "", "empty_encoding"], [204, 2, 1, "", "estimate_product_space_size"], [204, 3, 1, "", "exp_rep"], [204, 2, 1, "", "from_dataframe"], [204, 2, 1, "", "from_dict"], [204, 2, 1, "", "from_json"], [204, 2, 1, "", "from_parameter"], [204, 2, 1, "", "from_product"], [204, 2, 1, "", "from_simplex"], [204, 2, 1, "", "get_candidates"], [204, 2, 1, "", "get_parameters_by_name"], [204, 6, 1, "", "is_empty"], [204, 6, 1, "", "metadata"], [204, 6, 1, "", "parameter_names"], [204, 3, 1, "", "parameters"], [204, 2, 1, "", "to_dict"], [204, 2, 1, "", "to_json"], [204, 2, 1, "", "to_searchspace"], [204, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[204, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[204, 4, 1, "", "df"], [204, 4, 1, "", "empty_encoding"], [204, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[204, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[204, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[204, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[204, 4, 1, "", "boundary_only"], [204, 4, 1, "", "constraints"], [204, 4, 1, "", "max_nonzero"], [204, 4, 1, "", "max_sum"], [204, 4, 1, "", "min_nonzero"], [204, 4, 1, "", "product_parameters"], [204, 4, 1, "", "simplex_parameters"], [204, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[204, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[205, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[206, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[209, 5, 1, "", "get_transform_parameters"], [210, 5, 1, "", "validate_parameter_names"], [211, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[213, 0, 0, "-", "core"], [220, 0, 0, "-", "mixin"], [222, 0, 0, "-", "utils"]], "baybe.serialization.core": [[214, 5, 1, "", "block_deserialization_hook"], [215, 5, 1, "", "block_serialization_hook"], [216, 8, 1, "", "converter"], [217, 5, 1, "", "get_base_structure_hook"], [218, 5, 1, "", "select_constructor_hook"], [219, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[217, 4, 1, "", "base"], [217, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[219, 4, 1, "", "base"], [219, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[221, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[221, 2, 1, "", "from_dict"], [221, 2, 1, "", "from_json"], [221, 2, 1, "", "to_dict"], [221, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[221, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[221, 4, 1, "", "string"]], "baybe.serialization.utils": [[223, 5, 1, "", "deserialize_dataframe"], [224, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[226, 0, 0, "-", "core"], [228, 0, 0, "-", "lookup"], [230, 0, 0, "-", "scenarios"], [232, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[227, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[227, 4, 1, "", "batch_size"], [227, 4, 1, "", "campaign"], [227, 4, 1, "", "impute_mode"], [227, 4, 1, "", "initial_data"], [227, 4, 1, "", "lookup"], [227, 4, 1, "", "n_doe_iterations"], [227, 4, 1, "", "noise_percent"], [227, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[229, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[229, 4, 1, "", "impute_mode"], [229, 4, 1, "", "lookup"], [229, 4, 1, "", "queries"], [229, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[231, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[231, 4, 1, "", "batch_size"], [231, 4, 1, "", "groupby"], [231, 4, 1, "", "impute_mode"], [231, 4, 1, "", "initial_data"], [231, 4, 1, "", "lookup"], [231, 4, 1, "", "n_doe_iterations"], [231, 4, 1, "", "n_mc_iterations"], [231, 4, 1, "", "noise_percent"], [231, 4, 1, "", "random_seed"], [231, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[233, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[233, 4, 1, "", "batch_size"], [233, 4, 1, "", "campaign"], [233, 4, 1, "", "groupby"], [233, 4, 1, "", "lookup"], [233, 4, 1, "", "n_doe_iterations"], [233, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[235, 0, 0, "-", "bandit"], [237, 0, 0, "-", "base"], [241, 0, 0, "-", "custom"], [244, 0, 0, "-", "gaussian_process"], [259, 0, 0, "-", "linear"], [261, 0, 0, "-", "naive"], [263, 0, 0, "-", "ngboost"], [265, 0, 0, "-", "random_forest"], [267, 0, 0, "-", "utils"], [271, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[236, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[236, 2, 1, "", "__init__"], [236, 2, 1, "", "fit"], [236, 2, 1, "", "from_dict"], [236, 2, 1, "", "from_json"], [236, 2, 1, "", "posterior"], [236, 2, 1, "", "posterior_means"], [236, 2, 1, "", "posterior_modes"], [236, 3, 1, "", "prior"], [236, 3, 1, "", "supports_transfer_learning"], [236, 2, 1, "", "to_botorch"], [236, 2, 1, "", "to_dict"], [236, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[236, 4, 1, "", "measurements"], [236, 4, 1, "", "objective"], [236, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[236, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[236, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[236, 4, 1, "", "candidates"]], "baybe.surrogates.base": [[238, 1, 1, "", "IndependentGaussianSurrogate"], [239, 1, 1, "", "Surrogate"], [240, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[238, 2, 1, "", "__init__"], [238, 2, 1, "", "fit"], [238, 2, 1, "", "from_dict"], [238, 2, 1, "", "from_json"], [238, 2, 1, "", "posterior"], [238, 3, 1, "", "supports_transfer_learning"], [238, 2, 1, "", "to_botorch"], [238, 2, 1, "", "to_dict"], [238, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[238, 4, 1, "", "measurements"], [238, 4, 1, "", "objective"], [238, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[238, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[238, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[238, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate": [[239, 2, 1, "", "__init__"], [239, 2, 1, "", "fit"], [239, 2, 1, "", "from_dict"], [239, 2, 1, "", "from_json"], [239, 2, 1, "", "posterior"], [239, 3, 1, "", "supports_transfer_learning"], [239, 2, 1, "", "to_botorch"], [239, 2, 1, "", "to_dict"], [239, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[239, 4, 1, "", "measurements"], [239, 4, 1, "", "objective"], [239, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[239, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[239, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[239, 4, 1, "", "candidates"]], "baybe.surrogates.base.SurrogateProtocol": [[240, 2, 1, "", "__init__"], [240, 2, 1, "", "fit"], [240, 2, 1, "", "to_botorch"]], "baybe.surrogates.custom": [[242, 1, 1, "", "CustomONNXSurrogate"], [243, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[242, 2, 1, "", "__init__"], [242, 2, 1, "", "default_model"], [242, 2, 1, "", "fit"], [242, 2, 1, "", "from_dict"], [242, 2, 1, "", "from_json"], [242, 3, 1, "", "onnx_input_name"], [242, 3, 1, "", "onnx_str"], [242, 2, 1, "", "posterior"], [242, 3, 1, "", "supports_transfer_learning"], [242, 2, 1, "", "to_botorch"], [242, 2, 1, "", "to_dict"], [242, 2, 1, "", "to_json"], [242, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[242, 4, 1, "", "measurements"], [242, 4, 1, "", "objective"], [242, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[242, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[242, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[242, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[242, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[245, 0, 0, "-", "core"], [247, 0, 0, "-", "kernel_factory"], [251, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[246, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[246, 2, 1, "", "__init__"], [246, 2, 1, "", "fit"], [246, 2, 1, "", "from_dict"], [246, 2, 1, "", "from_json"], [246, 2, 1, "", "from_preset"], [246, 3, 1, "", "kernel_factory"], [246, 2, 1, "", "posterior"], [246, 3, 1, "", "supports_transfer_learning"], [246, 2, 1, "", "to_botorch"], [246, 2, 1, "", "to_dict"], [246, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[246, 4, 1, "", "measurements"], [246, 4, 1, "", "objective"], [246, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[246, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[246, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[246, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.kernel_factory": [[248, 1, 1, "", "KernelFactory"], [249, 1, 1, "", "PlainKernelFactory"], [250, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[248, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[249, 2, 1, "", "__init__"], [249, 2, 1, "", "from_dict"], [249, 2, 1, "", "from_json"], [249, 3, 1, "", "kernel"], [249, 2, 1, "", "to_dict"], [249, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[249, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[249, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[252, 0, 0, "-", "core"], [255, 0, 0, "-", "default"], [257, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[253, 1, 1, "", "GaussianProcessPreset"], [254, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[253, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[256, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[256, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[258, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[258, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[260, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[260, 2, 1, "", "__init__"], [260, 2, 1, "", "fit"], [260, 2, 1, "", "from_dict"], [260, 2, 1, "", "from_json"], [260, 3, 1, "", "model_params"], [260, 2, 1, "", "posterior"], [260, 3, 1, "", "supports_transfer_learning"], [260, 2, 1, "", "to_botorch"], [260, 2, 1, "", "to_dict"], [260, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[260, 4, 1, "", "measurements"], [260, 4, 1, "", "objective"], [260, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[260, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[260, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[260, 4, 1, "", "candidates"]], "baybe.surrogates.naive": [[262, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "fit"], [262, 2, 1, "", "from_dict"], [262, 2, 1, "", "from_json"], [262, 2, 1, "", "posterior"], [262, 3, 1, "", "supports_transfer_learning"], [262, 2, 1, "", "to_botorch"], [262, 2, 1, "", "to_dict"], [262, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[262, 4, 1, "", "measurements"], [262, 4, 1, "", "objective"], [262, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[262, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[262, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[262, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost": [[264, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "fit"], [264, 2, 1, "", "from_dict"], [264, 2, 1, "", "from_json"], [264, 3, 1, "", "model_params"], [264, 2, 1, "", "posterior"], [264, 3, 1, "", "supports_transfer_learning"], [264, 2, 1, "", "to_botorch"], [264, 2, 1, "", "to_dict"], [264, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[264, 4, 1, "", "measurements"], [264, 4, 1, "", "objective"], [264, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[264, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[264, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[264, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest": [[266, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[266, 2, 1, "", "__init__"], [266, 2, 1, "", "fit"], [266, 2, 1, "", "from_dict"], [266, 2, 1, "", "from_json"], [266, 3, 1, "", "model_params"], [266, 2, 1, "", "posterior"], [266, 3, 1, "", "supports_transfer_learning"], [266, 2, 1, "", "to_botorch"], [266, 2, 1, "", "to_dict"], [266, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[266, 4, 1, "", "measurements"], [266, 4, 1, "", "objective"], [266, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[266, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[266, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[266, 4, 1, "", "candidates"]], "baybe.surrogates.utils": [[268, 5, 1, "", "batchify_ensemble_predictor"], [269, 5, 1, "", "batchify_mean_var_prediction"], [270, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[268, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[270, 4, 1, "", "cls"], [270, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[272, 5, 1, "", "get_model_params_validator"], [273, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[272, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[273, 4, 1, "", "model_cls"]], "baybe.targets": [[275, 0, 0, "-", "base"], [277, 0, 0, "-", "binary"], [280, 0, 0, "-", "enum"], [283, 0, 0, "-", "numerical"], [285, 0, 0, "-", "transforms"]], "baybe.targets.base": [[276, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[276, 2, 1, "", "__init__"], [276, 2, 1, "", "from_dict"], [276, 2, 1, "", "from_json"], [276, 3, 1, "", "name"], [276, 2, 1, "", "summary"], [276, 2, 1, "", "to_dict"], [276, 2, 1, "", "to_json"], [276, 2, 1, "", "to_objective"], [276, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[276, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[276, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[276, 4, 1, "", "series"]], "baybe.targets.binary": [[278, 1, 1, "", "BinaryTarget"], [279, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[278, 2, 1, "", "__init__"], [278, 3, 1, "", "failure_value"], [278, 2, 1, "", "from_dict"], [278, 2, 1, "", "from_json"], [278, 3, 1, "", "name"], [278, 3, 1, "", "success_value"], [278, 2, 1, "", "summary"], [278, 2, 1, "", "to_dict"], [278, 2, 1, "", "to_json"], [278, 2, 1, "", "to_objective"], [278, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[278, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[278, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[278, 4, 1, "", "series"]], "baybe.targets.enum": [[281, 1, 1, "", "TargetMode"], [282, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[281, 3, 1, "", "MATCH"], [281, 3, 1, "", "MAX"], [281, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[282, 3, 1, "", "BELL"], [282, 3, 1, "", "LINEAR"], [282, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[284, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[284, 2, 1, "", "__init__"], [284, 3, 1, "", "bounds"], [284, 2, 1, "", "from_dict"], [284, 2, 1, "", "from_json"], [284, 3, 1, "", "mode"], [284, 3, 1, "", "name"], [284, 2, 1, "", "summary"], [284, 2, 1, "", "to_dict"], [284, 2, 1, "", "to_json"], [284, 2, 1, "", "to_objective"], [284, 2, 1, "", "transform"], [284, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[284, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[284, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[284, 4, 1, "", "series"]], "baybe.targets.transforms": [[286, 5, 1, "", "bell_transform"], [287, 5, 1, "", "linear_transform"], [288, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[286, 4, 1, "", "arr"], [286, 4, 1, "", "lower"], [286, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[287, 4, 1, "", "arr"], [287, 4, 1, "", "descending"], [287, 4, 1, "", "lower"], [287, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[288, 4, 1, "", "arr"], [288, 4, 1, "", "lower"], [288, 4, 1, "", "upper"]], "baybe.telemetry": [[290, 5, 1, "", "get_user_details"], [291, 5, 1, "", "is_enabled"], [292, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [293, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[292, 4, 1, "", "cached_recommendation"], [292, 4, 1, "", "measurements"], [292, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [292, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[293, 4, 1, "", "instrument_name"], [293, 4, 1, "", "value"]], "baybe.utils": [[295, 0, 0, "-", "augmentation"], [298, 0, 0, "-", "basic"], [313, 0, 0, "-", "boolean"], [317, 0, 0, "-", "chemistry"], [322, 0, 0, "-", "conversion"], [325, 0, 0, "-", "dataframe"], [338, 0, 0, "-", "interval"], [343, 0, 0, "-", "memory"], [345, 0, 0, "-", "numerical"], [352, 0, 0, "-", "plotting"], [356, 0, 0, "-", "random"], [359, 0, 0, "-", "sampling_algorithms"], [363, 0, 0, "-", "scaling"], [365, 0, 0, "-", "torch"], [368, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[296, 5, 1, "", "df_apply_dependency_augmentation"], [297, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[296, 4, 1, "", "affected"], [296, 4, 1, "", "causing"], [296, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[297, 4, 1, "", "column_groups"], [297, 4, 1, "", "df"]], "baybe.utils.basic": [[299, 1, 1, "", "Dummy"], [300, 8, 1, "", "UNSPECIFIED"], [301, 1, 1, "", "UnspecifiedType"], [302, 1, 1, "", "classproperty"], [303, 5, 1, "", "find_subclass"], [304, 5, 1, "", "get_baseclasses"], [305, 5, 1, "", "get_subclasses"], [306, 5, 1, "", "group_duplicate_values"], [307, 5, 1, "", "hilberts_factory"], [308, 5, 1, "", "is_all_instance"], [309, 5, 1, "", "match_attributes"], [310, 5, 1, "", "refers_to"], [311, 5, 1, "", "register_hooks"], [312, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[299, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[302, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[304, 4, 1, "", "abstract"], [304, 4, 1, "", "cls"], [304, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[305, 4, 1, "", "abstract"], [305, 4, 1, "", "cls"], [305, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[306, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[309, 4, 1, "", "callable_"], [309, 4, 1, "", "ignore"], [309, 4, 1, "", "object"], [309, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[311, 4, 1, "", "post_hooks"], [311, 4, 1, "", "pre_hooks"], [311, 4, 1, "", "target"]], "baybe.utils.boolean": [[314, 5, 1, "", "check_if_in"], [315, 5, 1, "", "is_abstract"], [316, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[314, 4, 1, "", "allowed"], [314, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[315, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[316, 4, 1, "", "val"]], "baybe.utils.chemistry": [[318, 5, 1, "", "get_canonical_smiles"], [319, 5, 1, "", "get_fingerprint_class"], [320, 5, 1, "", "name_to_smiles"], [321, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[319, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[320, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[321, 4, 1, "", "encoding"], [321, 4, 1, "", "kwargs_conformer"], [321, 4, 1, "", "kwargs_fingerprint"], [321, 4, 1, "", "prefix"], [321, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[323, 5, 1, "", "fraction_to_float"], [324, 5, 1, "", "nonstring_to_tuple"]], "baybe.utils.conversion.fraction_to_float.params": [[323, 4, 1, "", "value"]], "baybe.utils.dataframe": [[326, 5, 1, "", "add_fake_measurements"], [327, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [328, 5, 1, "", "add_parameter_noise"], [329, 5, 1, "", "arrays_to_dataframes"], [330, 5, 1, "", "df_drop_single_value_columns"], [331, 5, 1, "", "df_drop_string_columns"], [332, 5, 1, "", "df_uncorrelated_features"], [333, 5, 1, "", "filter_df"], [334, 5, 1, "", "fuzzy_row_match"], [335, 5, 1, "", "get_transform_objects"], [336, 5, 1, "", "pretty_print_df"], [337, 5, 1, "", "to_tensor"]], "baybe.utils.dataframe.add_fake_measurements.params": [[326, 4, 1, "", "bad_intervals"], [326, 4, 1, "", "data"], [326, 4, 1, "", "good_intervals"], [326, 4, 1, "", "good_reference_values"], [326, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[327, 4, 1, "", "df"], [327, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[328, 4, 1, "", "data"], [328, 4, 1, "", "noise_level"], [328, 4, 1, "", "noise_type"], [328, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[329, 4, 1, "", "input_labels"], [329, 4, 1, "", "output_labels"], [329, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[330, 4, 1, "", "df"], [330, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[331, 4, 1, "", "df"], [331, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[332, 4, 1, "", "df"], [332, 4, 1, "", "exclude_list"], [332, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[333, 4, 1, "", "complement"], [333, 4, 1, "", "df"], [333, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[334, 4, 1, "", "left_df"], [334, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [334, 4, 1, "", "parameters"], [334, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[335, 4, 1, "", "allow_extra"], [335, 4, 1, "", "allow_missing"], [335, 4, 1, "", "df"], [335, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[336, 4, 1, "", "df"], [336, 4, 1, "", "max_columns"], [336, 4, 1, "", "max_colwidth"], [336, 4, 1, "", "max_rows"], [336, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[337, 4, 1, "", "*x"]], "baybe.utils.interval": [[339, 7, 1, "", "InfiniteIntervalError"], [340, 1, 1, "", "Interval"], [341, 5, 1, "", "convert_bounds"], [342, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[339, 2, 1, "", "__init__"], [339, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[340, 2, 1, "", "__init__"], [340, 6, 1, "", "center"], [340, 2, 1, "", "contains"], [340, 2, 1, "", "create"], [340, 2, 1, "", "from_dict"], [340, 2, 1, "", "from_json"], [340, 6, 1, "", "is_bounded"], [340, 6, 1, "", "is_degenerate"], [340, 6, 1, "", "is_fully_unbounded"], [340, 6, 1, "", "is_half_bounded"], [340, 6, 1, "", "is_left_bounded"], [340, 6, 1, "", "is_right_bounded"], [340, 3, 1, "", "lower"], [340, 2, 1, "", "to_dict"], [340, 2, 1, "", "to_json"], [340, 2, 1, "", "to_ndarray"], [340, 2, 1, "", "to_tensor"], [340, 2, 1, "", "to_tuple"], [340, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[340, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[340, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[340, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[341, 4, 1, "", "bounds"]], "baybe.utils.memory": [[344, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[344, 4, 1, "", "num"]], "baybe.utils.numerical": [[346, 3, 1, "", "DTypeFloatNumpy"], [347, 3, 1, "", "DTypeFloatONNX"], [348, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [349, 5, 1, "", "closer_element"], [350, 5, 1, "", "closest_element"], [351, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[349, 4, 1, "", "target"], [349, 4, 1, "", "x"], [349, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[350, 4, 1, "", "array"], [350, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[351, 4, 1, "", "arr"], [351, 4, 1, "", "weights"]], "baybe.utils.plotting": [[353, 5, 1, "", "create_example_plots"], [354, 5, 1, "", "indent"], [355, 5, 1, "", "to_string"]], "baybe.utils.plotting.create_example_plots.params": [[353, 4, 1, "", "ax"], [353, 4, 1, "", "base_name"], [353, 4, 1, "", "path"]], "baybe.utils.plotting.to_string.params": [[355, 4, 1, "", "*fields"], [355, 4, 1, "", "header"], [355, 4, 1, "", "single_line"]], "baybe.utils.random": [[357, 5, 1, "", "set_random_seed"], [358, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[357, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[358, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[360, 1, 1, "", "DiscreteSamplingMethod"], [361, 5, 1, "", "farthest_point_sampling"], [362, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[360, 3, 1, "", "FPS"], [360, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[361, 4, 1, "", "initialization"], [361, 4, 1, "", "n_samples"], [361, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[362, 4, 1, "", "df"], [362, 4, 1, "", "method"], [362, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[364, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[364, 2, 1, "", "__init__"], [364, 2, 1, "", "fit"], [364, 3, 1, "", "mapping"], [364, 2, 1, "", "transform"]], "baybe.utils.torch": [[366, 8, 1, "", "DTypeFloatTorch"], [367, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[369, 5, 1, "", "finite_float"], [370, 5, 1, "", "non_inf_float"], [371, 5, 1, "", "non_nan_float"], [372, 5, 1, "", "validate_not_nan"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 180, 196, 198, 204, 221, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 307, 337, 340, 373, 376, 383, 387, 390, 391, 394, 395, 397, 398, 399, 400, 401, 407, 411, 412, 413, 416, 417, 418, 421, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437], "0": [8, 18, 30, 40, 41, 47, 95, 130, 138, 141, 159, 167, 168, 169, 180, 204, 227, 229, 286, 287, 288, 296, 297, 316, 327, 328, 332, 333, 347, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 390, 391, 392, 394, 395, 397, 398, 400, 402, 404, 405, 406, 408, 409, 410, 412, 413, 416, 421, 422, 425, 429, 430, 432, 433, 434, 436, 439], "00": [406, 432], "000": [387, 408], "001": [327, 425], "0013254749999873638": 390, "005": [375, 376, 377, 379, 380], "008471": 402, "01": [159, 382, 383, 388, 391, 405, 406, 413], "010091": 404, "010395": 404, "013371": 398, "02": 413, "021": [258, 332], "023033": 398, "03213": [258, 332], "033532": 406, "035159": 406, "041578": 402, "05": 413, "053246": 405, "057": [375, 376, 377, 379, 380, 390], "057731": 404, "059900": 398, "06": [204, 270], "077238": 402, "08": 413, "083898": 404, "084150": 398, "084562": 406, "091100": 379, "093681": 398, "09653736976391157": 400, "0f": 391, "1": [22, 27, 40, 95, 116, 130, 141, 170, 180, 196, 227, 229, 231, 233, 286, 287, 288, 293, 296, 297, 306, 316, 328, 333, 347, 351, 361, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 390, 391, 392, 394, 395, 397, 398, 400, 402, 404, 405, 406, 408, 409, 410, 412, 413, 416, 417, 421, 424, 425, 429, 430, 432, 433, 434, 436, 439], "10": [180, 229, 258, 332, 374, 376, 385, 386, 387, 388, 391, 394, 395, 397, 398, 400, 402, 404, 408, 409, 410, 412, 413, 416, 423, 430, 434, 439], "100": [385, 386, 387, 388, 391, 394, 395, 397, 398, 402, 408, 413, 428, 429, 430, 434, 436, 439], "1000": 434, "102": 405, "1024": [135, 418, 430], "103125": 398, "1038": [258, 332], "104": 406, "105": [375, 376, 377, 379, 380, 390, 402, 432], "106132": 398, "11": [302, 379, 397, 398, 417], "111": 408, "1147": 387, "1148": 387, "1149": 387, "1150": 387, "116": 406, "12": [397, 405, 406, 419, 432], "120": [375, 376, 377, 379, 380, 385, 387, 390, 430], "120000": 405, "122": 408, "124": 405, "124877": 402, "126": [385, 387, 388, 417], "126864": 398, "1268824": [375, 376, 377], "128": 10, "13": [397, 398, 412, 432], "131219": 398, "1337": [391, 392, 439], "135": 380, "14": [397, 398, 432], "142193": 406, "144": 406, "144389": 398, "14448993259018328": 400, "1454": 418, "146734": 398, "15": [229, 387, 397, 412, 413, 416, 424, 432], "150": [385, 388, 425], "1500": 430, "151": 387, "153": [375, 376, 377, 379, 380, 390], "159096": 398, "16": [336, 347, 397, 398], "160023": 402, "166622": 398, "167683": 404, "17": [397, 398], "175": 379, "177": 408, "177691": 404, "179": 402, "179738": 402, "18": [397, 424], "180": 385, "180496": 398, "188": 408, "189583": 402, "19": [397, 398], "192": 387, "195766": 404, "197": 402, "1e": [204, 270], "2": [8, 18, 95, 97, 116, 229, 296, 297, 306, 326, 333, 351, 361, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 391, 392, 394, 395, 397, 398, 400, 402, 404, 405, 406, 408, 409, 410, 412, 413, 416, 421, 424, 425, 429, 430, 432, 433, 434, 436], "20": [141, 229, 374, 375, 376, 377, 380, 391, 392, 394, 397, 398, 402, 418, 430, 437, 439], "200": [376, 385, 387, 394, 395, 400, 402, 408], "2004": 421, "2007": 437, "2021": 376, "2022": 416, "2025": 416, "21": [397, 398, 402, 406, 409], "211": 379, "214939": 398, "218216": 398, "22": [379, 397, 398, 402], "221": 418, "222": 408, "225": 402, "23": [397, 398, 406, 434], "232": 405, "235808": 404, "237": 402, "24": [386, 397, 398, 432], "241": 430, "243433": 398, "25": [391, 397, 398, 412, 432], "250": 422, "252734": 404, "257": 402, "258": 402, "26": [397, 432], "265": 402, "269": 402, "27": [397, 402, 432], "271955": 398, "277": 402, "278": 402, "279": 402, "28": [397, 398], "280": 402, "284894": 402, "29": [397, 398, 416], "290188": 398, "298225": 398, "298661": 398, "3": [229, 296, 297, 302, 306, 333, 336, 354, 375, 376, 377, 380, 383, 385, 386, 387, 388, 390, 392, 395, 397, 398, 400, 402, 404, 405, 406, 408, 409, 412, 413, 416, 417, 419, 421, 424, 425, 428, 430, 432, 433, 434, 436, 437], "30": [374, 388, 392, 397, 402, 430], "303249": 398, "307439": 380, "3078f3": 418, "31": [380, 397, 398, 409], "311378": 404, "312280": 404, "315837": 398, "32": [386, 397, 398, 430], "33": [386, 397, 402], "335401": 402, "336": 380, "34": 386, "343779": 398, "35": [386, 397, 398], "36": 398, "362": 380, "365254": 398, "365341": 406, "366075": 398, "371492": 398, "373757": 398, "374650": 398, "376050": 405, "377175": 404, "38": 398, "381257": 398, "385208": 402, "39": [402, 430], "392276": 406, "395965": 398, "399525": 404, "3d": 392, "4": [135, 296, 297, 336, 382, 383, 385, 386, 387, 388, 392, 397, 398, 400, 402, 404, 405, 406, 416, 421, 424, 425, 430, 432], "40": [397, 398, 429, 430], "402110": 398, "404615": 406, "406999": 398, "41": 398, "417741": 404, "418691": 398, "42": 400, "420483": 398, "422241": 398, "437083": 406, "439127": 398, "44": [398, 402], "441531": 402, "447": 385, "448": 385, "449": 385, "45": [397, 402, 436], "450": 385, "463695": 398, "468": 418, "47": [398, 402], "470158": 398, "472207": 398, "48": 398, "485004": 398, "486728": 398, "498121": 402, "498375": 398, "498847": 402, "5": [95, 141, 296, 297, 375, 377, 382, 385, 386, 387, 388, 391, 394, 395, 397, 398, 402, 404, 405, 406, 408, 409, 410, 412, 413, 416, 421, 422, 423, 424, 425, 430, 432, 434, 437, 439], "50": [388, 395, 397, 400, 412, 413, 421, 422, 430, 432, 436], "500": [392, 430], "5066666666666667": 400, "51": 402, "513856": 402, "518954": 402, "52": 402, "521881": 404, "5313": 312, "533256": 398, "533355": 402, "535481": 406, "535652": 404, "54": [402, 416], "544098": 398, "546499": 398, "55": [402, 436], "553966": 398, "556008": 406, "56": [402, 434], "561424": 402, "58": 402, "586375": 398, "59": [398, 408, 416], "590": 376, "592292": 402, "594697": 398, "594729": 398, "595769": 380, "6": [296, 297, 336, 375, 376, 377, 385, 386, 387, 388, 397, 398, 400, 402, 404, 406, 408, 421, 425, 432], "60": [402, 429], "607256": 404, "609529": 398, "609681": 404, "610650": 402, "611964": 398, "614607": 398, "62": [400, 402], "623580": 402, "627917": 404, "63": [398, 402], "634437": 402, "634456": 404, "639782": 404, "64": 180, "640495": 404, "648787": 402, "65": 400, "657747": 402, "66": 402, "66368270ffd51418ec58bd793f2d9b1b": 437, "664452": 406, "668365": 398, "675317": 398, "678195": 402, "683423": 404, "685608": 398, "69": [375, 376, 377], "697918": 402, "7": [141, 296, 297, 332, 386, 388, 392, 397, 398, 402, 404, 405, 412, 421, 430, 432], "70": 397, "701009": 404, "703638": 402, "706667": 405, "71": 430, "717732": 398, "718429": 398, "72": 402, "720117": 404, "725440": 404, "727111": 402, "735172": 402, "743179": 398, "743695": 404, "745": 439, "746887": 404, "748177": 398, "748801": 402, "75": [397, 432], "758406": 402, "762656": 404, "77": 402, "773464": 406, "777911": 402, "778": 408, "782128": 398, "789953": 398, "79": [402, 416], "793734": 398, "7gz": 430, "7hf": 430, "8": [297, 375, 377, 380, 385, 387, 388, 397, 398, 400, 402, 404, 416, 421, 425], "80": [398, 425], "806893": 380, "811067": 404, "829765": 404, "832742": 402, "833833": 402, "836434": 398, "8389": 312, "8417": 312, "848074": 398, "85": 402, "857": 387, "857426": 404, "861": 388, "862": 388, "862696": 404, "863": 388, "864": 388, "864536": 398, "866278": 398, "87": 408, "871039": 402, "878642": 398, "878773": 379, "88": 408, "881969": 398, "885601": 398, "8859": 394, "889": 408, "89": [376, 405, 408], "891782": 402, "892954": 398, "893278": 398, "895656": 398, "898198": 398, "899529": 398, "8jq": 430, "9": [388, 392, 397, 398, 402, 404, 421, 424, 432, 433], "90": [375, 376, 377, 379, 380, 390, 408, 432], "911591": 398, "911925": 398, "925500": 404, "927465": 402, "947897": 404, "95": 402, "952414": 404, "953236": 404, "956614": 404, "96": 376, "967829": 404, "970957": 404, "987161": 398, "987412": 398, "993221": 398, "999": 425, "A": [0, 8, 18, 22, 27, 34, 36, 37, 38, 40, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 66, 68, 69, 70, 71, 74, 76, 78, 83, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 113, 115, 116, 120, 124, 127, 128, 130, 138, 141, 143, 152, 153, 154, 155, 156, 157, 158, 159, 162, 168, 169, 170, 172, 175, 178, 180, 182, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 205, 206, 221, 222, 227, 229, 231, 233, 236, 238, 239, 242, 246, 248, 249, 256, 258, 260, 262, 264, 266, 272, 276, 278, 284, 286, 287, 288, 296, 302, 304, 305, 306, 309, 319, 326, 332, 333, 335, 344, 351, 359, 361, 364, 374, 386, 395, 397, 398, 400, 402, 409, 410, 415, 417, 418, 419, 421, 425, 427, 428, 430, 431, 432, 433, 436, 437], "AND": [50, 387, 421, 425], "AS": [416, 421], "And": 394, "As": [375, 376, 377, 392, 400, 402, 412, 413, 416, 417, 418, 425, 428, 431, 432, 434], "At": 436, "But": 436, "By": [83, 115, 128, 143, 204, 315, 333, 398, 419, 423, 426, 427, 431, 432], "FOR": 421, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 149, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 203, 204, 227, 233, 236, 238, 239, 240, 242, 246, 249, 256, 258, 260, 262, 264, 266, 276, 278, 284, 289, 311, 334, 340, 353, 364, 375, 376, 377, 379, 380, 386, 390, 391, 392, 397, 398, 400, 402, 406, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439], "If": [6, 13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 83, 87, 110, 115, 116, 120, 143, 147, 148, 168, 169, 172, 196, 198, 204, 210, 211, 227, 229, 231, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 287, 292, 297, 304, 305, 309, 311, 314, 316, 319, 323, 326, 327, 328, 332, 333, 334, 335, 353, 355, 361, 362, 380, 382, 391, 397, 405, 406, 409, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 437, 439], "In": [27, 41, 53, 180, 198, 225, 227, 309, 336, 375, 376, 377, 379, 391, 392, 394, 397, 398, 400, 402, 405, 406, 409, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439], "It": [22, 162, 169, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 225, 241, 262, 326, 375, 379, 380, 386, 395, 397, 400, 402, 406, 408, 409, 410, 412, 416, 423, 424, 425, 426, 427, 430, 431, 432, 434, 439], "Its": [229, 394], "No": [404, 415, 418], "Not": [421, 425], "OF": [416, 421], "OR": [416, 421], "Of": [380, 389, 414, 433], "On": [394, 400], "One": [132, 375, 377, 416], "Or": 426, "Such": [380, 425, 428, 434], "That": [198, 229, 236, 238, 239, 242, 246, 260, 262, 264, 266, 287, 380, 385, 397, 419, 432, 434, 437], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 83, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 116, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 143, 149, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 203, 204, 216, 217, 219, 221, 225, 227, 229, 231, 236, 238, 239, 240, 242, 246, 249, 260, 262, 264, 266, 268, 270, 272, 273, 276, 278, 281, 284, 286, 287, 288, 290, 292, 293, 296, 297, 302, 304, 305, 306, 309, 311, 314, 315, 316, 319, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 344, 349, 350, 351, 353, 355, 357, 358, 361, 362, 375, 376, 377, 380, 385, 386, 387, 388, 390, 391, 392, 394, 395, 397, 402, 405, 406, 410, 412, 413, 415, 417, 418, 419, 421, 424, 425, 426, 428, 429, 430, 431, 432, 435, 436, 438, 439], "Then": 392, "There": [73, 270, 347, 397, 404, 416, 417, 419, 423, 427, 432], "These": [290, 373, 376, 377, 378, 381, 384, 389, 393, 396, 399, 401, 403, 407, 411, 419, 423, 425, 426, 430, 432], "To": [375, 380, 391, 392, 398, 400, 408, 412, 413, 416, 417, 419, 423, 424, 426, 427, 430, 434], "Will": 422, "With": [326, 391, 392, 397, 400, 412, 413, 416, 423, 425, 430, 433], "_": [147, 148, 201, 207, 214, 353, 382, 391, 413], "__class__": [390, 400], "__excepthook__": 417, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 203, 204, 236, 238, 239, 240, 242, 246, 248, 249, 256, 258, 260, 262, 264, 266, 276, 278, 284, 299, 302, 339, 340, 364, 432, 433], "__name__": [390, 400], "__new__": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 132, 133, 135, 339], "__str__": 418, "__version__": 418, "_amount": 397, "_arraylik": 329, "_c": 305, "_cumbest": 227, "_default_my_attribut": 419, "_fit": 273, "_has_switch": 170, "_iterbest": 227, "_label": 397, "_measur": 227, "_n_last_measur": [167, 168, 169], "_nbase": 321, "_nestedsequ": [116, 286, 287, 288, 350], "_no_tl": 412, "_option": 418, "_posterior": 273, "_step": [167, 168, 169], "_supportsarrai": [116, 286, 287, 288, 350], "_surrogate_model": [391, 392], "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 196, 198, 204, 209, 217, 218, 221, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 306, 307, 308, 324, 335, 340], "_target": 418, "_tparamet": 143, "_tsurrog": 269, "_u": 306, "_validate_my_attribut": 419, "_was_us": [167, 168, 169], "a1": 297, "a2": 297, "ab": [388, 397], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 303, 310, 418, 438], "abc": [20, 30, 31, 32, 33, 34, 36, 90, 91, 92, 110, 124, 125, 151, 165, 175, 178, 185, 190, 238, 239, 276, 315], "abil": [422, 427, 437], "abl": [392, 417, 423, 425, 430, 433, 439], "about": [22, 27, 125, 141, 276, 293, 375, 376, 377, 397, 405, 406, 416, 418, 419, 428, 430, 432], "abov": [270, 288, 315, 332, 374, 380, 387, 388, 390, 391, 398, 404, 416, 419, 421, 422, 423, 424, 425, 426, 427, 430, 433, 434, 437], "absenc": 429, "absolut": [138, 328, 416], "abstract": [20, 30, 31, 32, 33, 34, 36, 90, 91, 92, 110, 123, 124, 125, 151, 165, 175, 178, 185, 239, 276, 304, 305, 315, 418, 425, 437], "abstractli": 400, "acceler": [416, 418, 420, 437], "accept": [27, 168, 246, 329, 334, 391, 392, 418, 421, 426, 429, 430, 434, 436], "access": [196, 204, 236, 238, 239, 242, 246, 260, 262, 264, 266, 375, 376, 377, 385, 390, 413, 418, 425, 433], "accord": [40, 163, 398, 422, 425, 426, 431, 439], "accordingli": [180, 424, 427, 433], "account": 423, "accumul": [153, 400, 437], "accur": 424, "acet": [375, 376, 377, 379, 380], "aceton": 397, "achiev": [17, 204, 392, 397, 400, 416, 419, 422, 424, 425, 427], "ack": 416, "acq_funct": 380, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 391, 392, 400], "acqf1": 433, "acqf2": 433, "acqf_valu": 391, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 63, 70, 178, 180, 385, 386, 387, 388, 391, 392, 400, 402, 408, 416, 418, 422, 431, 433, 435], "acquisition_funct": [178, 180, 380, 400, 409, 410, 418], "acquisition_function_cl": [178, 180, 418], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22, 24, 25, 178, 180, 400, 433], "across": [397, 400, 412, 423, 431, 437], "act": [397, 418, 421, 425, 434], "action": [17, 390, 400, 415, 418, 438], "activ": [13, 30, 128, 170, 391, 392, 400, 416, 417, 418, 419, 425, 426, 427, 428, 429, 431, 437, 438, 439], "active_dim": [90, 91, 92, 95, 97, 99, 100, 101], "active_valu": [128, 412, 413, 427, 437], "actual": [168, 198, 225, 405, 418, 428, 432, 434, 437, 439], "ad": [27, 204, 292, 296, 326, 361, 397, 398, 415, 419, 422, 426, 427, 429, 430, 435, 436, 438], "adapt": [169, 258, 316, 332], "add": [27, 219, 229, 326, 327, 380, 394, 395, 397, 402, 412, 416, 421, 423, 424, 425, 428, 432, 437, 439], "add_collection3d": 392, "add_fake_measur": [379, 380, 385, 386, 387, 388, 394, 395, 402, 418, 423, 434, 439], "add_fake_result": 418, "add_measur": [27, 379, 380, 382, 383, 385, 386, 387, 388, 392, 394, 395, 400, 402, 405, 406, 416, 418, 423, 424, 426, 427], "add_noise_to_perturb_degenerate_row": 418, "add_parameter_nois": [418, 439], "add_subplot": 392, "addendum": 421, "addit": [27, 83, 110, 115, 120, 168, 180, 198, 219, 227, 229, 231, 328, 375, 376, 377, 398, 405, 413, 416, 418, 420, 421, 424, 425, 426, 428, 429, 430, 432, 433, 434, 437, 439], "addition": [390, 398, 416, 428], "additiveexplain": [81, 84], "additivekernel": 418, "address": 434, "adher": [418, 419], "adjust": [169, 376, 380, 405, 418, 427], "adopt": 380, "adrian": [416, 420], "advanc": [169, 400, 417, 418, 426, 433, 437, 438], "advantag": [397, 419], "advic": 419, "advis": [421, 434], "affect": [27, 49, 180, 296, 390, 408, 415, 417, 425], "affected_paramet": [49, 385, 386, 387, 388, 397, 425], "affili": [416, 426], "afford": 424, "aforement": [198, 426], "after": [170, 311, 379, 380, 385, 386, 387, 388, 392, 402, 408, 416, 424, 428, 433], "afterward": 433, "again": [391, 423, 424, 425, 437], "against": [77, 292, 309, 397, 421, 427, 437], "agent": 398, "agraw": 420, "agre": [416, 421, 428], "agreement": 421, "ai": [88, 149, 347], "aim": [424, 428], "akin": 423, "al": [376, 416, 430], "aldrich": 420, "alex": 420, "alexand": [416, 420], "algorithm": [173, 180, 326, 359, 361, 374, 397, 402, 416, 418, 423, 428, 431], "alia": [140, 182, 430], "alias": 418, "align": [83, 196, 311, 391, 432, 437], "all": [19, 20, 29, 31, 36, 49, 51, 89, 90, 91, 92, 109, 110, 115, 122, 125, 128, 130, 134, 141, 150, 151, 161, 164, 165, 168, 174, 175, 177, 180, 184, 185, 198, 205, 206, 229, 236, 237, 239, 275, 276, 296, 308, 309, 326, 375, 376, 377, 380, 382, 383, 385, 386, 390, 391, 392, 397, 398, 400, 402, 404, 405, 412, 413, 416, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439], "allclos": [382, 383, 398], "alleg": 421, "allow": [17, 27, 30, 40, 47, 51, 110, 115, 120, 138, 143, 169, 198, 204, 231, 293, 314, 334, 335, 375, 376, 377, 380, 397, 398, 412, 413, 416, 418, 422, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 439], "allow_": [418, 427], "allow_extra": [110, 115, 120, 196, 198, 204, 209, 335, 402, 418], "allow_miss": [110, 115, 120, 196, 198, 204, 209, 335, 418], "allow_recommending_already_measur": [27, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 400, 409, 410, 415, 418, 424], "allow_recommending_already_recommend": [27, 400, 409, 410, 415, 418, 424], "allow_recommending_pending_experi": [27, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 418, 424], "allow_repeated_recommend": [172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 418], "almost": 376, "alon": [418, 421], "along": [351, 421, 430, 437], "alongsid": 421, "alpha": [153, 392], "alphabet": [144, 418], "alreadi": [27, 204, 397, 406, 416, 418, 422, 423, 424, 427, 432, 434, 435, 437, 439], "also": [53, 83, 143, 236, 238, 239, 242, 246, 260, 262, 264, 266, 293, 309, 311, 326, 327, 328, 375, 382, 383, 391, 392, 394, 395, 397, 402, 405, 406, 408, 412, 413, 416, 418, 419, 422, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439], "alter": [397, 418, 424, 427], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 270, 351, 390, 397, 398, 404, 416, 418, 427, 438, 439], "although": [397, 406, 409, 432, 434], "alwai": [13, 27, 36, 214, 215, 394, 397, 398, 416, 422, 424, 425, 434, 435, 437, 439], "ambigu": [138, 300, 301, 432], "amend": 425, "among": [30, 397, 416, 437], "amount": [297, 354, 362, 398, 412, 413, 423, 428, 430, 439], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 63, 64, 65, 67, 70, 75, 77, 78, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 111, 113, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 143, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 217, 219, 221, 225, 227, 229, 231, 236, 238, 239, 242, 243, 246, 249, 260, 262, 264, 266, 268, 269, 276, 278, 284, 296, 300, 301, 307, 309, 311, 314, 320, 324, 332, 333, 334, 336, 339, 340, 341, 350, 353, 355, 361, 362, 375, 377, 378, 380, 387, 388, 390, 391, 394, 395, 398, 402, 404, 408, 409, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "analog": [198, 326, 432, 433], "analogi": [163, 431], "analysi": [416, 428, 435], "analyt": [3, 4, 7, 8, 70, 434, 437], "analyz": [416, 419, 428], "angl": 392, "ani": [57, 58, 83, 116, 123, 124, 125, 127, 128, 130, 141, 143, 146, 147, 148, 214, 215, 219, 223, 224, 231, 260, 264, 266, 286, 287, 288, 293, 296, 308, 309, 311, 312, 314, 315, 334, 340, 342, 350, 355, 369, 370, 371, 372, 390, 397, 412, 413, 415, 416, 417, 418, 419, 421, 424, 426, 427, 430, 433, 434, 437], "annot": [311, 390, 421], "anonym": [416, 426], "anoth": [49, 341, 376, 386, 387, 394, 395, 397, 406, 419, 425, 437], "ansatz": 418, "answer": 424, "anti": 333, "anymor": [418, 437], "anyth": 316, "anywai": 435, "anywher": 382, "apach": [416, 421], "apart": [419, 424], "api": [416, 417, 433], "aplei": 428, "appar": 433, "appdata": 417, "appear": [309, 417, 418, 421, 433], "append": [392, 413], "appendix": 421, "appli": [27, 36, 37, 38, 53, 180, 198, 225, 227, 309, 320, 328, 364, 380, 381, 384, 385, 387, 388, 390, 391, 397, 412, 417, 418, 421, 425, 428, 429, 431, 432, 433, 434, 435, 436, 437], "applic": [355, 416, 419, 421, 430, 431, 434], "approach": [204, 391, 400, 416, 419, 422, 424, 427, 431, 433, 437], "appropri": [43, 44, 107, 204, 400, 419, 421, 427, 432], "approxim": [10, 17, 428], "ar": [6, 12, 14, 27, 30, 34, 36, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 62, 71, 72, 73, 83, 110, 115, 116, 120, 128, 141, 143, 148, 162, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 227, 229, 231, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 288, 290, 292, 293, 296, 297, 304, 305, 306, 308, 309, 311, 315, 316, 326, 327, 329, 330, 334, 335, 353, 361, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 390, 391, 392, 395, 397, 398, 400, 402, 404, 405, 408, 409, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439], "arang": [382, 392, 430], "arbitrari": [169, 198, 342, 418, 425, 430, 431, 434, 437, 439], "arbitrarili": [429, 433], "architectur": [273, 418, 435, 437], "ard_num_dim": [90, 91, 92, 95, 97, 99, 100, 101], "area": 392, "arg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 94, 96, 98, 103, 104, 105, 151, 153, 154, 155, 156, 157, 158, 159, 162, 182, 240, 243, 248, 339, 419], "argu": 397, "argument": [64, 78, 83, 88, 141, 143, 149, 165, 167, 168, 169, 170, 196, 204, 240, 311, 333, 380, 395, 402, 418, 425, 428, 430, 431, 432, 433, 434, 437], "aris": [52, 397, 418, 421, 425, 433, 439], "arithmet": [118, 429], "arizona": 420, "arm": [235, 236, 414, 420], "arm_index": 400, "around": [189, 231, 233, 402, 418, 431, 433, 439], "arr": [286, 287, 288, 351], "arrai": [116, 286, 287, 288, 299, 329, 337, 346, 350, 351, 361, 392, 418, 431, 435], "arrays_to_datafram": [382, 383, 392, 405, 406, 412, 413, 418, 434], "arriv": [416, 427], "artifici": 439, "aryl": [375, 376, 377, 379, 416, 430], "ascend": 402, "ask": [397, 416, 418, 419, 424, 427], "aspect": [378, 382, 383, 406, 423, 426], "assembl": [397, 433], "assembli": 438, "assert": [58, 385, 386, 387, 388, 394, 395, 397, 398, 404, 408, 418, 421, 424, 425, 433], "assess": 434, "assign": [326, 391, 398, 404, 430], "associ": [198, 400, 421, 424, 426, 429, 437], "assum": [22, 41, 241, 311, 335, 375, 376, 377, 380, 382, 383, 385, 386, 387, 388, 394, 395, 397, 400, 402, 405, 406, 408, 416, 421, 425, 427, 430, 433, 435, 436, 439], "assumpt": 434, "assur": 425, "asynchron": [416, 424, 438], "atol": [382, 383], "atompair": 135, "atompairfingerprint": 135, "attach": [22, 311, 390, 391, 392, 421], "attempt": [69, 75, 241, 353, 400, 417, 418, 423, 425, 428, 431], "attent": 170, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 203, 204, 236, 238, 239, 242, 246, 249, 256, 258, 260, 262, 264, 266, 276, 278, 284, 309, 312, 340, 364, 372, 418], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77, 80, 83, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 118, 120, 123, 124, 125, 127, 128, 130, 132, 133, 135, 137, 138, 139, 141, 143, 146, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 199, 203, 204, 213, 217, 219, 236, 238, 239, 242, 246, 249, 253, 256, 258, 260, 262, 264, 266, 273, 276, 277, 278, 281, 282, 284, 298, 301, 309, 324, 335, 340, 345, 360, 364, 365, 368, 369, 370, 371, 372, 404, 418, 419, 421, 431, 433, 435, 436], "audit": [416, 418, 419], "augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 198, 268, 269, 270, 418, 424], "author": 421, "authorship": 421, "auto": [12, 14, 418, 420], "auto_tutori": 347, "autocorr": 135, "autocorrfingerprint": 135, "autodoc": 418, "automat": [27, 113, 180, 246, 334, 374, 392, 405, 417, 418, 419, 428, 429, 431, 432, 437, 438], "avail": [2, 118, 130, 132, 133, 135, 141, 168, 169, 227, 229, 253, 281, 282, 293, 360, 361, 362, 377, 379, 382, 383, 397, 402, 405, 406, 416, 417, 418, 419, 421, 423, 424, 426, 427, 428, 430, 431, 432, 433, 434, 437, 438], "available_acq_funct": 380, "avalon": 135, "avalonfingerprint": 135, "averag": [262, 391, 392, 413, 430, 434], "avoid": [198, 312, 351, 418, 419, 423, 424, 430, 432], "awai": 436, "awar": [397, 412, 413, 418, 422, 427, 433], "ax": [83, 353, 374, 376, 391, 392, 412, 413], "axes3d": [353, 392], "axi": [196, 227, 351, 374, 382, 383, 388, 391, 392, 397, 398, 400, 402, 405, 406, 412, 413, 432], "azim": 392, "azur": 418, "b": [52, 159, 258, 296, 306, 332, 333, 376, 386, 395, 400, 409, 410, 415, 416, 419, 421, 424, 427, 430, 433], "b1": 297, "b2": 297, "back": [0, 408, 415, 418, 419, 427], "backend": 293, "background": [83, 87, 428], "background_data": 83, "backport": 417, "backtest": [225, 226, 232, 375, 376, 377, 391, 411, 414, 416, 418, 431, 434], "backtick": 419, "backward": [106, 112, 181, 182, 198, 418], "bad": [402, 424, 426, 436], "bad_interv": 326, "badg": 418, "bai": 416, "baird": 420, "balanc": [115, 400, 416], "banana": 419, "bandit": [236, 380, 414, 416, 418, 420], "banner": 418, "bar": [83, 85, 394, 395, 397, 408, 409, 410, 416, 418, 428, 435], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 118, 120, 123, 124, 125, 127, 128, 130, 132, 133, 134, 135, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 166, 167, 168, 169, 170, 172, 175, 178, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 199, 203, 204, 217, 219, 221, 236, 238, 239, 240, 241, 242, 246, 248, 249, 253, 256, 258, 260, 262, 264, 266, 270, 272, 276, 278, 281, 282, 284, 299, 301, 302, 303, 304, 305, 329, 333, 340, 353, 360, 361, 364, 374, 379, 380, 391, 392, 394, 396, 400, 414, 416, 418, 421, 422, 424, 425, 426, 428, 430, 431, 432, 433, 435], "base1": 398, "base2": 398, "base_data": 391, "base_kernel": [103, 104, 105], "base_nam": [353, 374, 376, 391, 392, 412, 413], "base_predictor": 268, "base_smil": 391, "basefingerprinttransform": 319, "baselin": [374, 376, 412, 416, 430], "basesequentialmetarecommend": [168, 169], "bashrc": 426, "basi": [99, 416, 421, 428], "basic": [90, 94, 95, 96, 97, 98, 99, 100, 101, 153, 154, 155, 156, 157, 158, 159, 227, 299, 301, 302, 375, 376, 377, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 402, 405, 406, 407, 408, 411, 414, 418, 419, 427, 429, 430, 434, 438], "basic_transfer_learn": 413, "basickernel": [94, 95, 96, 97, 98, 99, 100, 101, 418], "batch": [27, 162, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 230, 268, 269, 380, 385, 386, 387, 388, 392, 402, 405, 406, 408, 412, 413, 418, 423, 427, 431, 434], "batch_quant": 418, "batch_shap": [90, 91, 92, 95, 97, 99, 100, 101], "batch_siz": [27, 40, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 227, 231, 233, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 390, 391, 392, 394, 395, 398, 400, 402, 405, 406, 408, 409, 412, 413, 416, 418, 423, 424, 426, 427, 434], "batchnr": 402, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 118, 120, 123, 124, 125, 127, 128, 130, 132, 133, 134, 135, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 199, 203, 204, 221, 236, 238, 239, 240, 242, 246, 248, 249, 253, 256, 258, 260, 262, 264, 266, 276, 278, 281, 282, 284, 299, 301, 302, 340, 360, 364, 373, 374, 375, 376, 377, 378, 380, 382, 383, 385, 386, 387, 388, 390, 391, 392, 394, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439], "baybe_cach": 426, "baybe_cache_dir": [418, 426], "baybe_deactivate_polar": [418, 426], "baybe_debug_fake_hosthash": 418, "baybe_debug_fake_userhash": 418, "baybe_numpy_use_single_precis": [348, 418, 426], "baybe_telemetry_en": [416, 426], "baybe_telemetry_endpoint": [418, 426], "baybe_telemetry_host": 418, "baybe_telemetry_hostnam": [418, 426], "baybe_telemetry_usernam": [418, 426], "baybe_telemetry_vpn_check": [418, 426], "baybe_telemetry_vpn_check_timeout": [418, 426], "baybe_torch_use_single_precis": [367, 418, 426], "bayesian": [0, 172, 178, 180, 225, 227, 231, 233, 241, 260, 400, 418, 422, 424, 428, 435, 438], "bayesian_recommend": 392, "bayesianlinearmodel": 395, "bayesianlinearsurrog": [380, 435], "bayesianrecommend": [172, 180, 241, 418, 431], "bayesianridg": 394, "bcut2d": [135, 418], "bcut2dfingerprint": 135, "bcw07": 437, "becaus": [73, 138, 198, 204, 233, 315, 390, 391, 397, 413, 419, 422, 424, 425, 426, 427, 428, 429, 430, 433, 434, 437], "becom": [198, 397, 418, 422, 424, 425, 433, 436, 439], "been": [22, 69, 70, 168, 236, 238, 239, 242, 246, 260, 262, 264, 266, 334, 375, 376, 416, 417, 418, 421, 423, 424, 431, 437], "beeswarm": [83, 85, 428], "befor": [69, 170, 227, 236, 238, 239, 242, 246, 260, 262, 264, 266, 311, 374, 377, 380, 386, 391, 416, 418, 419, 426, 427, 430, 432], "begin": [168, 385, 387, 404, 408, 431], "behalf": 421, "behav": [392, 408, 433], "behavior": [180, 416, 418, 426, 429, 431, 432, 437], "behind": [429, 433, 434, 436], "being": [105, 326, 353, 400, 417, 418, 425, 426, 430, 432], "bell": [282, 286, 402, 436], "belong": [390, 433], "below": [170, 270, 288, 387, 390, 391, 397, 419, 421, 422, 424, 425, 429, 433, 435, 436, 437], "benchmark": [416, 418, 420], "benefici": [421, 422, 426], "benefit": [425, 437], "benzo": 437, "bernoulli": [236, 399, 414, 420], "besid": [416, 429, 436], "best": [12, 14, 227, 229, 231, 377, 400, 416, 426, 431], "bet": 424, "beta": [8, 18, 153, 236, 380, 418, 422], "betabernoullimultiarmedbanditsurrog": [380, 400, 418], "betaprior": [236, 418], "better": [10, 326, 376, 418, 424, 425, 427, 430], "between": [30, 49, 138, 169, 196, 204, 256, 333, 390, 392, 397, 400, 402, 406, 412, 413, 416, 418, 419, 423, 424, 425, 426, 430, 431, 432, 433, 436, 437], "beyond": [416, 428], "bias": 430, "bin": 397, "binar": 418, "binari": [278, 408, 417, 418, 433], "binarytarget": [279, 400, 418], "bind": [390, 392, 421], "bit": [418, 430], "black": [225, 434, 437], "blackbox": [373, 374, 414], "blank": 419, "blob": 258, "block": [391, 397, 416, 417, 418, 426, 433], "bodi": 390, "bonilla": 437, "bool": [6, 12, 14, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 86, 87, 110, 115, 116, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 209, 236, 238, 239, 242, 246, 260, 262, 264, 266, 278, 279, 286, 287, 288, 291, 292, 304, 305, 309, 310, 315, 316, 329, 333, 334, 335, 340, 350, 355, 400], "boolean": [30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 87, 123, 124, 125, 127, 128, 130, 137, 138, 141, 165, 167, 168, 169, 170, 335, 424, 426], "boost": [264, 413], "both": [10, 143, 198, 204, 233, 288, 311, 374, 386, 391, 394, 397, 398, 400, 402, 412, 413, 416, 419, 422, 425, 428, 430, 432, 433, 436, 439], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 172, 180, 182, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 382, 383, 392, 406, 412, 413, 418, 426, 431], "botorch_acqf": [22, 391, 392], "botorch_function_wrapp": 418, "botorchrecommend": [172, 182, 380, 385, 386, 387, 388, 391, 392, 394, 395, 400, 402, 406, 408, 409, 410, 416, 418, 423, 424, 427, 431], "bottom": 424, "bound": [8, 18, 30, 137, 143, 159, 196, 198, 204, 209, 269, 284, 285, 305, 311, 335, 340, 341, 374, 380, 382, 383, 392, 398, 402, 404, 405, 406, 412, 413, 418, 430, 433, 436, 438, 439], "boundari": [204, 286, 287, 402], "boundary_onli": [204, 397], "bounded": 418, "bounds_transform_func": 418, "box": [159, 225, 434, 437], "brain": [434, 437], "branch": [416, 419], "break": [241, 433], "brettpho": [375, 376, 377, 379, 380], "briefli": [434, 437], "bring": [416, 418], "bro": 258, "broad": 433, "brute": [180, 431], "bu": [375, 376, 377, 379, 380], "bucket": 397, "budget": 424, "bug": [418, 419], "build": [196, 204, 241, 391, 397, 417, 418, 419, 425, 428, 433, 437, 438, 439], "built": [204, 394, 416, 419, 424, 431], "builtin": 302, "bump": 418, "button": 418, "butyl": [375, 376, 377, 379, 380], "butylphenylphosphin": [375, 376, 377, 379, 380], "butyornitril": [375, 376, 377, 379, 380], "bypass": [143, 391], "byte": [116, 203, 242, 286, 287, 288, 344, 350, 418, 439], "c": [52, 296, 306, 375, 376, 377, 379, 380, 385, 386, 387, 388, 395, 397, 409, 410, 416, 417, 421, 424, 427, 430, 432, 433], "c1": [375, 376, 377, 379, 380, 385, 386, 387, 388, 430], "c1c2": [375, 376, 377, 379, 380], "c1ccccc1": [375, 376, 377, 385, 387], "c1ccoc1": 425, "c2": [375, 376, 377, 379, 380, 385, 387, 388], "c2ccccc2": [375, 376, 377], "c2oc": [375, 376, 377, 379, 380], "c2p": [375, 376, 377, 379, 380], "c3": [375, 376, 377, 379, 380, 385, 387], "c3c": [375, 376, 377], "c3ccccc3": [375, 376, 377, 379, 380], "c4": [375, 376, 377, 385, 387], "c4ccccc4": [375, 376, 377, 379, 380], "c5": [385, 387], "c6": [385, 387], "c_g2_min": 398, "c_g3_max": 398, "c_i": 425, "c_total_sum": 398, "cach": [292, 418, 433, 438], "cached_recommend": 292, "calcul": [292, 351, 382, 392, 412, 426, 430, 432], "calibr": 437, "call": [41, 78, 165, 167, 168, 169, 170, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 292, 293, 311, 329, 375, 376, 377, 390, 395, 397, 398, 409, 410, 416, 417, 418, 422, 424, 425, 426, 430, 433, 434, 437, 438], "callabl": [48, 64, 77, 143, 217, 225, 227, 229, 231, 233, 268, 269, 272, 273, 302, 307, 309, 311, 329, 374, 390, 418, 438], "callable_": 309, "campaign": [83, 227, 230, 231, 233, 326, 328, 378, 379, 387, 389, 392, 400, 410, 412, 413, 414, 415, 416, 418, 422, 423, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439], "campaign1": 434, "campaign2": 434, "campaign_json": 424, "campaign_oh": 376, "campaign_rand": [375, 376, 377], "campaign_recr": 408, "campaign_stop": 391, "campaign_with_hook": 391, "campaignstoppedexcept": 391, "can": [13, 17, 22, 27, 30, 36, 37, 38, 52, 83, 124, 130, 138, 141, 162, 169, 172, 173, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 225, 229, 236, 238, 239, 240, 241, 242, 246, 260, 262, 264, 266, 270, 279, 291, 293, 309, 311, 315, 326, 328, 329, 334, 347, 374, 375, 376, 377, 380, 381, 384, 385, 386, 387, 390, 391, 392, 394, 395, 397, 398, 400, 402, 404, 405, 406, 409, 412, 413, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439], "canada": 420, "candid": [12, 14, 27, 190, 192, 196, 204, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 391, 413, 418, 422, 431, 432, 438], "candidates_comp_rep": 391, "cannot": [13, 76, 77, 83, 241, 242, 270, 316, 353, 400, 418, 421, 423, 425, 426, 430, 431, 433, 435, 437], "canon": [318, 433], "capabl": [373, 399, 401, 407, 411, 413, 418, 420, 424, 437], "captur": 430, "cardin": [30, 40, 47, 57, 58, 196, 418, 420], "cardinalityconstraint": [40, 47, 418], "care": [45, 397, 419, 425, 428, 429], "carefulli": 426, "carlo": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 70, 231, 374, 376, 377, 391, 400, 412, 413, 418, 423, 434], "carri": [311, 390, 421], "cartesian": [198, 204, 205, 206, 416, 418, 427, 432], "case": [169, 233, 270, 311, 326, 336, 391, 396, 397, 405, 406, 409, 416, 417, 419, 422, 423, 424, 425, 426, 427, 430, 433, 434, 436, 437, 439], "cast": [41, 418], "cat": 333, "cat_1": 402, "cat_1_22": 402, "cat_1_33": 402, "cat_2": 402, "catch_constant_target": 418, "categor": [27, 127, 128, 132, 204, 211, 334, 416, 418, 427, 430, 432, 436], "categori": [376, 391, 416, 418, 433, 436], "categorical_1": [402, 424], "categorical_2": [402, 424], "categorical_paramet": 433, "categorical_parameter_json": 433, "categorical_parameter_reconstruct": 433, "categoricalencod": [127, 128, 385, 386, 387, 388, 402, 408], "categoricalparamet": [128, 204, 376, 385, 386, 387, 388, 395, 400, 402, 408, 409, 410, 416, 418, 427, 428, 432, 433, 438], "cattr": [216, 217, 219, 410, 417, 418, 419], "cauchi": 155, "caus": [138, 296, 302, 418, 421], "caution": 437, "cc": [375, 376, 377, 379, 380, 385, 387, 388, 397, 430, 437], "cc1": [375, 376, 377, 379, 380, 430], "ccc": [385, 387, 395, 416], "cccc": [375, 376, 377, 379, 380, 385, 387], "ccccc": [385, 387, 409, 410], "cccccc": [385, 387], "cccccccco": [425, 430], "ccccoc": [375, 376, 377, 379, 380], "cco": 397, "ccoccoccn": [409, 410], "cdot": [425, 429], "ceil": 391, "cell": [394, 430, 434, 437], "cell_lin": 437, "center": [286, 288, 340, 402, 424], "central": [418, 424], "certain": [27, 49, 77, 170, 217, 219, 225, 293, 308, 326, 354, 386, 391, 400, 416, 419, 425, 427, 428, 431, 433, 437, 439], "cesium": [375, 376, 377, 379, 380], "ch": 354, "chai": 437, "chain": [34, 165, 167, 168, 169, 170, 302, 425], "challeng": [419, 433], "chanc": 417, "chang": [49, 168, 326, 327, 328, 380, 397, 405, 416, 417, 419, 421, 424, 426, 428, 430, 432, 437], "charact": 421, "characterist": 302, "charg": 421, "check": [27, 123, 124, 125, 127, 128, 130, 137, 138, 141, 292, 308, 310, 313, 314, 315, 316, 334, 340, 349, 405, 406, 408, 416, 418, 419, 426, 428, 432, 433], "checker": 418, "checkout": 419, "chem": [416, 418, 430], "chemic": [320, 376, 379, 397, 418, 420, 425, 428, 430, 437], "cheminformat": [141, 416, 418], "chemistri": [130, 385, 387, 388], "child": [187, 188, 189, 190, 419], "chocol": 419, "choic": [227, 229, 361, 390, 397, 400, 406, 418, 425, 427, 429, 430, 431, 432, 433, 436], "choos": [163, 397, 398, 400, 402, 404, 405, 406, 415, 416, 421, 422, 424, 431, 435, 436], "chose": [405, 433], "chosen": [67, 172, 227, 229, 233, 357, 358, 380, 400, 418, 422, 425, 430, 432], "christoph": 437, "ci": [383, 412, 413, 418, 419], "circular": 430, "circumv": [417, 433], "cl": [45, 113, 214, 218, 270, 304, 305, 310, 315, 342], "claim": 421, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 76, 80, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 217, 219, 220, 221, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 284, 298, 299, 301, 302, 303, 304, 305, 310, 315, 319, 338, 340, 355, 359, 360, 363, 364, 380, 390, 391, 394, 400, 409, 418, 424, 425, 428, 429, 430, 431, 432, 433, 435], "classic": [400, 429], "classifi": 430, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 196, 198, 204, 221, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 302, 340, 418], "classvalidationerror": [410, 417], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 123, 124, 125, 127, 128, 130, 137, 138, 141, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 236, 238, 239, 242, 246, 260, 262, 264, 266], "clean": [330, 331, 332, 417, 418, 419], "clear": [347, 437], "click": [400, 430], "clone": 419, "close": [227, 233, 281, 374, 391, 412, 413, 434], "closer": [349, 430], "closest": [292, 334, 350], "closest_el": 418, "closur": [225, 434], "cluster": [187, 188, 189, 190, 380, 418, 420, 438], "clustering_x": 418, "cmap": 392, "cn": [375, 376, 377, 379, 380], "co": 397, "co1": [375, 376, 377], "co2": [375, 376, 377], "co3": [375, 376, 377], "coars": [395, 408, 409, 410, 416], "coc": [395, 409, 410, 416], "cococ": [409, 410], "code": [241, 376, 395, 400, 405, 409, 410, 416, 417, 418, 421, 425, 426, 430, 434, 437, 439], "coeffici": [41, 43, 44, 382, 383, 398, 425], "coerc": 418, "collect": [27, 57, 58, 93, 103, 104, 143, 144, 152, 168, 170, 196, 204, 210, 211, 222, 229, 294, 296, 298, 308, 309, 326, 335, 359, 361, 374, 380, 392, 397, 400, 412, 413, 416, 418, 424, 426], "color": 392, "column": [36, 37, 38, 83, 110, 115, 116, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 143, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 227, 229, 231, 233, 296, 297, 327, 329, 330, 331, 332, 333, 335, 336, 364, 376, 379, 385, 386, 387, 388, 391, 397, 402, 408, 412, 413, 418, 424, 432, 433, 434], "column_group": 297, "com": [258, 312, 332, 416, 418], "comb": 397, "combin": [50, 143, 198, 204, 205, 206, 302, 320, 375, 376, 377, 385, 387, 390, 391, 397, 402, 416, 417, 421, 425, 427, 428, 429, 431, 432, 434, 437, 439], "combinatori": 439, "combine_func": 107, "come": [400, 416, 424, 428, 433, 437, 439], "command": 417, "comment": 418, "commerci": 421, "commit": [416, 418, 419], "common": [152, 394, 398, 418, 419, 421, 424, 425, 430, 433], "commonli": 429, "commun": [421, 429, 437], "comp_df": [124, 127, 128, 130, 138, 141, 418], "comp_rep": [204, 392, 394, 418, 432], "comp_rep_bound": [196, 198, 204, 418], "comp_rep_byt": [203, 439], "comp_rep_column": [123, 124, 125, 127, 128, 130, 137, 138, 141, 196, 198, 204, 418], "comp_rep_human_read": [203, 439], "comp_rep_shap": [203, 439], "comp_rep_tensor": [391, 392], "compar": [143, 168, 374, 397, 398, 400, 412, 416, 418, 419, 427, 430, 436], "comparison": [391, 412, 413, 431, 433], "compat": [106, 112, 143, 172, 175, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 198, 199, 229, 242, 311, 335, 372, 380, 385, 386, 387, 388, 390, 392, 402, 408, 418, 431], "compens": 418, "compil": [417, 421], "complain": 419, "complaint": 419, "complement": [27, 333, 427], "complet": [392, 397, 423, 425, 427, 429, 433], "complex": [116, 286, 287, 288, 350, 397, 408, 412, 413, 419, 422, 423, 425, 427, 434, 437], "compli": 421, "complianc": 416, "complic": [397, 437], "compon": [62, 397, 398, 419, 422, 424, 425, 426, 427, 433, 437], "compos": [102, 418, 433], "composit": [91, 103, 104, 105], "compositekernel": [103, 104, 105, 418], "compound": 320, "comprehens": [416, 435], "compress": 433, "comput": [22, 27, 74, 83, 87, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 196, 198, 203, 204, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 270, 276, 278, 284, 321, 351, 385, 386, 387, 388, 390, 397, 398, 402, 408, 418, 421, 422, 424, 426, 430, 432, 433, 434, 438, 439], "computation": 180, "concat": [382, 383, 391, 392, 402, 405, 406, 412, 413], "concentr": [153, 154, 375, 376, 377, 379, 380, 385, 390, 391, 425], "concentrati": 385, "concentration_valu": 391, "concept": [296, 397, 429, 430, 433], "concis": 418, "concret": [418, 433], "conda": 418, "condit": [30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 326, 333, 376, 382, 386, 387, 388, 397, 416, 418, 421, 437, 438], "conduct": [27, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 231, 236, 238, 239, 242, 246, 260, 262, 264, 266, 375, 376, 377, 416, 419, 424, 437], "confid": [8, 18, 380], "config": [394, 395, 407, 414, 418, 438], "config_json": 27, "configur": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 72, 73, 162, 169, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 225, 227, 233, 236, 238, 239, 240, 242, 246, 252, 260, 262, 264, 266, 326, 353, 361, 378, 379, 397, 403, 406, 410, 416, 417, 418, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 434, 436, 437, 438, 439], "confirm": 392, "conflict": [416, 419, 429], "conform": [141, 321, 430], "confront": [400, 416, 427], "conjunct": 435, "connect": [53, 326, 418, 426, 430, 436], "consequ": [377, 417, 425, 426, 431, 432, 434], "consequenti": 421, "consid": [8, 18, 27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 115, 128, 168, 198, 231, 292, 326, 334, 335, 374, 397, 400, 402, 412, 413, 416, 418, 419, 423, 425, 427, 428, 429, 430, 433, 439], "consider": [198, 423], "consist": [163, 203, 392, 419, 421, 428], "consol": 417, "consolid": [418, 431], "consortium": 420, "conspicu": 421, "constant": [262, 270, 287, 402, 418, 419, 430, 432], "constitut": 421, "constrain": [418, 425, 436, 437], "constraint": [27, 30, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 125, 196, 198, 204, 299, 394, 395, 402, 408, 409, 410, 414, 416, 418, 420, 426, 430, 438], "constraint_1": 387, "constraint_2": 387, "constraint_3": 387, "constraints_augment": 198, "constraints_cardin": 196, "constraints_lin_eq": 196, "constraints_lin_ineq": 196, "constraints_nonlin": 196, "constru": 421, "construct": [27, 196, 198, 204, 242, 272, 374, 404, 412, 413, 416, 418, 422, 428, 433, 438], "constructor": [187, 188, 189, 190, 198, 218, 260, 264, 266, 397, 404, 409, 410, 418, 422, 424, 427, 429, 430, 438, 439], "consult": 416, "consum": [168, 390], "consumpt": 426, "cont_ind": 406, "cont_indic": [405, 406], "cont_paramet": 406, "cont_recommend": [172, 406], "contact": [416, 420], "contain": [27, 30, 36, 37, 38, 58, 61, 66, 83, 110, 115, 116, 120, 124, 127, 128, 130, 138, 141, 143, 147, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 203, 205, 206, 210, 225, 227, 229, 231, 236, 238, 239, 242, 246, 260, 262, 264, 266, 276, 278, 284, 286, 287, 288, 296, 297, 311, 321, 326, 328, 333, 340, 351, 353, 355, 361, 376, 377, 391, 392, 398, 400, 406, 412, 413, 417, 418, 419, 421, 424, 425, 427, 428, 431, 432, 433, 434, 439], "content": [143, 168, 198, 229, 327, 362, 418, 421, 433], "context": [165, 167, 168, 169, 170, 225, 240, 358, 390, 400, 404, 412, 413, 418, 424, 427, 428, 430, 433, 434, 437, 439], "contextu": 437, "continu": [10, 13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 66, 123, 124, 125, 127, 128, 130, 137, 138, 141, 172, 180, 196, 198, 199, 204, 205, 206, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 380, 382, 385, 386, 387, 388, 398, 402, 403, 406, 408, 414, 416, 418, 424, 426, 427, 431, 433, 434, 438], "continuous_subspac": 432, "continuouscardinalityconstraint": [57, 196, 418], "continuousconstraint": [33, 41, 196, 418, 425, 427], "continuouslinearconstraint": [196, 382, 383, 398, 418, 438], "continuouslinearequalityconstraint": 418, "continuouslinearinequalityconstraint": 418, "continuousnonlinearconstraint": [40, 196, 418], "continuousparamet": [137, 196, 418], "contract": 421, "contrast": [204, 315, 398, 400, 423, 427], "contribut": [416, 418, 421, 439], "contributor": [416, 421], "contributori": 421, "control": [13, 17, 143, 153, 180, 196, 204, 335, 402, 405, 416, 418, 421, 422, 426, 429, 430, 431, 436, 438], "convei": 433, "conveni": [418, 432, 433], "convent": 198, "converg": 428, "convers": [27, 169, 394, 404, 418, 421, 428, 438], "convert": [24, 111, 200, 213, 312, 316, 320, 323, 324, 336, 337, 341, 344, 347, 395, 409, 410, 418, 424, 426, 433, 434], "convert_sklearn": 394, "convert_sklearn_bayesian_ridg": 394, "cooki": 419, "coordin": 361, "copi": [391, 416, 418, 421, 439], "copyright": [416, 421], "core": [27, 196, 198, 199, 204, 231, 233, 236, 238, 239, 240, 242, 246, 253, 260, 262, 264, 266, 380, 416, 418, 427, 436], "coregion": 437, "coretest": [418, 419], "corpu": 430, "correct": [27, 273, 392, 416, 418, 419, 433], "correctli": [397, 406, 418], "correl": [130, 141, 332, 430, 437], "correspond": [22, 27, 40, 110, 115, 120, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 217, 225, 227, 229, 236, 238, 239, 242, 246, 260, 262, 264, 266, 286, 292, 311, 314, 316, 319, 320, 326, 329, 335, 336, 374, 379, 380, 397, 400, 406, 412, 413, 416, 418, 419, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "correspondingli": 27, "corrupt": 328, "cost": [376, 400], "costli": [198, 201, 207, 424], "could": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 138, 323, 380, 390, 391, 397, 398, 413, 418, 423, 425, 430, 434, 436, 437], "count": [293, 391, 397, 425], "counterclaim": 421, "counterpart": [311, 432], "coupl": 392, "cours": [412, 413, 419, 433, 437], "cov": [418, 419], "cover": [315, 326, 427], "coverag": [418, 419], "cp": [375, 376, 377], "craft": 434, "crash": [417, 418], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 83, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 143, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 196, 198, 204, 205, 206, 221, 229, 236, 238, 239, 240, 242, 246, 249, 254, 260, 262, 264, 266, 276, 278, 284, 326, 329, 340, 353, 355, 361, 379, 390, 391, 392, 397, 398, 406, 407, 414, 415, 416, 417, 418, 419, 425, 426, 427, 428, 433, 434, 435, 436, 438, 439], "create_example_plot": [374, 376, 391, 392, 412, 413], "create_from_config": [394, 395], "create_pi_plot": 392, "creation": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 143, 201, 204, 207, 386, 388, 394, 395, 432, 433, 438], "criteria": 392, "criterion": [391, 422], "critic": 418, "cross": [412, 421], "crucial": [416, 436], "cube": 425, "cuda": 417, "cultur": [430, 437], "curran": 437, "current": [10, 27, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 231, 233, 241, 291, 347, 391, 392, 397, 422, 424, 425, 426, 427, 430, 434, 436, 437, 439], "curv": [286, 392, 402, 425, 436], "custom": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 123, 124, 125, 127, 128, 130, 133, 137, 138, 141, 143, 242, 273, 276, 278, 284, 311, 336, 373, 380, 384, 391, 400, 406, 414, 416, 418, 425, 430, 431, 434, 437, 438, 439], "custom_blackbox": 374, "custom_conversion_funct": 394, "custom_filt": 425, "custom_funct": 385, "customari": 421, "customconstraint": 385, "customdiscreteparamet": [418, 428, 438], "customencod": 130, "customonnxsurrog": [380, 394, 418], "cycl": [168, 416, 418, 427], "cyclic": 168, "d": [22, 52, 116, 296, 306, 351, 361, 392, 395, 409, 410, 412, 413, 416, 421, 432, 437], "d401": 385, "damag": 421, "daniel": 420, "darmstadt": [416, 420, 426], "dashboard": 418, "data": [13, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 83, 87, 115, 120, 130, 138, 141, 162, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 227, 231, 233, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 278, 284, 293, 295, 299, 326, 328, 334, 346, 347, 362, 366, 373, 374, 379, 380, 382, 383, 385, 386, 387, 388, 391, 395, 397, 402, 405, 408, 409, 410, 412, 413, 414, 415, 416, 418, 422, 423, 424, 425, 426, 428, 430, 431, 433, 434, 435, 438, 439], "data_typ": 394, "databas": [27, 402, 416, 433], "dataclass": [390, 400], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 87, 110, 115, 120, 124, 127, 128, 130, 138, 141, 143, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 203, 204, 205, 206, 209, 223, 224, 227, 229, 231, 233, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 278, 284, 292, 296, 297, 320, 321, 362, 374, 375, 379, 380, 385, 386, 387, 388, 391, 392, 394, 395, 397, 398, 402, 405, 408, 412, 413, 418, 423, 424, 425, 427, 430, 438, 439], "datapoint": 418, "dataset": [168, 225, 434], "datatyp": 418, "date": 421, "dditiv": 428, "de": [216, 407, 416, 417, 418, 419, 424, 425, 431, 438], "deactiv": [416, 418, 426], "deal": [377, 423, 430, 434], "debug": 418, "decid": [138, 334, 397, 400, 406, 422], "declar": [49, 53, 58, 190, 386, 419, 425], "decod": 394, "decor": [105, 270, 302, 329, 390, 418, 419, 434], "decorrel": [130, 141, 146, 409, 410, 430], "decreas": [168, 287, 402, 433, 437], "deduc": [382, 383, 405], "dedupl": 418, "deep": 391, "deepcopi": 418, "deeper": 428, "def": [374, 385, 390, 391, 392, 397, 400, 412, 419, 425, 434], "default": [38, 83, 115, 128, 130, 141, 143, 172, 187, 188, 189, 190, 196, 198, 204, 216, 236, 253, 256, 333, 374, 375, 377, 380, 395, 402, 406, 416, 418, 419, 424, 426, 428, 429, 430, 438], "default_campaign": 374, "default_model": 242, "defaultkernelfactori": [380, 385, 386, 387, 388, 402, 408], "defaultscal": 418, "defend": 421, "defin": [22, 27, 37, 41, 48, 133, 162, 168, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 204, 225, 246, 248, 249, 273, 328, 332, 333, 364, 375, 376, 377, 379, 385, 386, 387, 388, 394, 395, 400, 404, 418, 419, 421, 424, 425, 427, 430, 433, 434, 436], "definit": [196, 204, 315, 398, 416, 418, 421, 429, 432], "degener": [327, 340, 418], "degr": 408, "degre": 433, "degree_c": [394, 395, 408], "deliber": 421, "delici": 419, "deliveri": 430, "demand": [27, 413], "demo": 418, "demonstr": [373, 374, 375, 378, 381, 384, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 407, 408, 411, 412, 413, 418, 429, 432, 433, 437], "denot": 22, "densiti": 392, "depend": [49, 53, 75, 107, 198, 204, 225, 287, 296, 376, 380, 384, 397, 398, 404, 414, 415, 417, 418, 419, 425, 426, 427, 428, 432, 434, 436, 437, 439], "dependenciesconstraint": 418, "deprec": [60, 135, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 204, 209, 243, 302, 385, 387, 388], "deprecationwarn": [385, 387, 388, 391], "depth": 432, "deriv": [187, 188, 189, 190, 204, 315, 421, 425, 432], "descend": 287, "describ": [128, 187, 188, 189, 190, 236, 238, 239, 242, 246, 260, 262, 264, 266, 380, 385, 390, 391, 398, 400, 402, 419, 421, 423, 424, 425, 429, 430, 433, 434], "descript": 419, "descriptor": [141, 321, 418, 428, 430, 437], "deseri": [214, 218, 223, 408, 417, 418, 424, 438], "deserialize_datafram": 433, "design": [0, 17, 22, 227, 329, 390, 394, 397, 400, 421, 422, 427, 428, 429, 431, 433], "desir": [107, 115, 118, 401, 402, 414, 416, 418, 422, 424, 426, 428, 429, 431, 433, 436, 439], "desirabilityobject": [27, 402, 416, 418, 433, 435, 438], "desktop": 418, "despit": 418, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 149, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 203, 204, 227, 231, 236, 238, 239, 240, 242, 246, 249, 256, 258, 260, 262, 264, 266, 276, 278, 284, 289, 290, 333, 340, 364, 375, 377, 382, 383, 402, 406, 415, 416, 417, 418, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437], "detect": [299, 334, 417, 419], "determin": [27, 83, 113, 170, 204, 315, 333, 344, 349, 361, 375, 397, 400, 421, 426, 431], "determinist": 361, "detriment": 430, "dev": [416, 418, 419], "develop": [416, 418, 423, 430, 434], "deviat": [6, 270, 394, 418], "df": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 110, 115, 120, 143, 196, 198, 204, 209, 224, 229, 296, 297, 320, 327, 330, 331, 332, 333, 335, 336, 362, 374, 385, 400, 416, 425, 432, 433, 434], "dfa": [296, 297], "di": [375, 376, 377, 379, 380, 420], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 113, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 187, 188, 189, 190, 196, 198, 201, 204, 207, 217, 218, 219, 221, 231, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 290, 306, 309, 321, 326, 340, 364, 391, 394, 412, 413, 418], "dict_bas": [375, 376, 377, 379, 380], "dict_ligand": [375, 376, 377, 379, 380], "dict_solv": [375, 376, 377, 379, 380, 385, 386, 387, 388, 397, 425], "dictat": [110, 115, 120, 198, 412, 413], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 196, 198, 204, 217, 219, 221, 231, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 270, 276, 278, 284, 306, 309, 326, 340, 375, 376, 377, 379, 430, 434], "diff": 419, "differ": [51, 115, 180, 196, 198, 199, 204, 225, 233, 292, 297, 326, 328, 364, 376, 385, 390, 397, 400, 402, 405, 406, 412, 413, 416, 418, 419, 421, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 436, 437], "differenti": [434, 437], "difficult": 437, "digit": 336, "dilemma": 400, "dim": [22, 382, 383, 392, 394, 405, 406, 412, 413], "dimens": [22, 361, 374, 382, 383, 392, 394, 404, 405, 412, 413, 418, 430, 432, 437], "dimension": [116, 123, 124, 125, 127, 128, 130, 137, 138, 141, 256, 329, 361, 374, 412, 413, 418], "dimethylisoxazol": 437, "direct": [375, 376, 377, 379, 416, 421, 427, 430, 439], "directli": [315, 413, 416, 418, 425, 429, 433, 435], "directori": [353, 406, 418], "disabl": [291, 385, 387, 388, 418, 424, 427], "disadvantag": 433, "disappear": 418, "disc_ind": 406, "disc_indic": [405, 406], "disc_paramet": 406, "disc_recommend": [172, 406], "discard": 397, "disclaim": 421, "discourag": 424, "discret": [13, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 66, 123, 124, 125, 127, 128, 130, 137, 138, 141, 172, 180, 187, 188, 189, 190, 192, 196, 198, 199, 203, 204, 233, 360, 379, 382, 388, 391, 392, 394, 402, 403, 406, 408, 413, 414, 416, 418, 422, 427, 428, 431, 433, 434, 438, 439], "discrete_param": [392, 412, 413], "discrete_spac": [382, 383, 406], "discrete_subspac": 432, "discretecardinalityconstraint": 418, "discreteconstraint": [27, 47, 48, 49, 50, 51, 52, 53, 54, 55, 204, 418, 425, 427], "discretecust": 385, "discretecustomconstraint": [385, 418, 438], "discretedep": 386, "discretedependenciesconstraint": [53, 58, 386, 397, 438], "discreteexcl": 387, "discreteexcludeconstraint": [387, 418, 427, 438], "discretelinkedparametersconstraint": [418, 438], "discretenolabelduplicatesconstraint": [53, 397, 418, 438], "discreteparamet": [127, 130, 138, 141, 204, 418], "discretepermutationinvarianceconstraint": [397, 438], "discreteprod": 388, "discreteproductconstraint": [388, 418, 438], "discretesamplingmethod": [13, 180, 362, 418, 422], "discretesumc": 388, "discretesumconstraint": [382, 388, 397, 418, 438], "discuss": [402, 421, 425, 432, 434], "disjoint": 204, "disk": [418, 438], "dispatch": 106, "displai": [336, 391, 421], "distanc": [138, 292, 334, 361], "distinct": [390, 424, 431], "distinguish": [327, 397, 418, 425, 430, 437], "distribut": [27, 149, 152, 236, 238, 239, 242, 246, 260, 262, 264, 266, 397, 402, 406, 416, 418, 421, 422, 423], "distutil": 316, "div": 394, "divers": 435, "divid": 398, "divis": 351, "dll": 417, "dmac": [375, 376, 377, 379, 380], "dmf": 425, "do": [198, 204, 241, 390, 394, 395, 397, 400, 406, 408, 409, 410, 412, 415, 416, 417, 421, 423, 425, 426, 427, 428, 430, 431, 433, 437, 438, 439], "do_baybe_work": 426, "doc": [88, 149, 302, 385, 387, 388, 416, 418], "doc101": 419, "doc103": 419, "docstr": 418, "doctest": 418, "document": [347, 394, 416, 418, 419, 420, 421, 424, 428, 434], "doe": [26, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 180, 225, 227, 229, 231, 236, 238, 239, 241, 242, 246, 260, 262, 264, 266, 273, 311, 320, 347, 377, 380, 391, 394, 395, 397, 409, 410, 412, 413, 418, 419, 421, 425, 429, 431, 434, 435, 437, 439], "doi": [258, 332], "domain": [236, 238, 239, 242, 246, 260, 262, 264, 266, 374, 416, 432, 434], "don": [415, 427], "done": [27, 333, 377, 379, 385, 386, 387, 388, 394, 395, 402, 408, 418, 422, 424, 425, 426, 427], "doubl": [347, 419, 426], "down": [433, 439], "downsid": 169, "draft": 418, "dramat": 437, "drastic": 430, "draw": [10, 100, 196, 398, 400, 404], "draw_arm": 400, "drawn": [17, 180], "drive": [392, 437], "driven": [326, 422], "driver": 417, "drop": [330, 331, 332, 391, 418, 425], "dry_run": 27, "dtype": [116, 286, 287, 288, 350], "due": [293, 413, 416, 418, 422, 425, 426, 430, 431, 432, 433, 436], "duplic": [53, 148, 299, 306, 418, 425], "dure": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 198, 204, 225, 309, 361, 397, 400, 412, 413, 416, 417, 418, 419, 420, 424, 425, 426, 427, 428, 432, 433, 434, 435], "dynam": [400, 418, 433, 438], "d\u00fcbendorf": 420, "e": [17, 22, 27, 30, 49, 51, 52, 66, 83, 86, 130, 143, 170, 198, 204, 225, 293, 299, 304, 305, 321, 326, 333, 334, 340, 369, 375, 376, 377, 395, 397, 398, 400, 416, 417, 418, 419, 422, 423, 425, 426, 428, 430, 431, 432, 433, 434, 437, 439], "e3fp": 135, "e3fpfingerprint": 135, "each": [17, 27, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 110, 115, 120, 143, 162, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 198, 227, 229, 231, 233, 241, 297, 321, 326, 327, 353, 374, 376, 377, 380, 392, 397, 398, 400, 402, 406, 412, 413, 419, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439], "eagerli": 418, "earli": [391, 418], "earlier": [27, 415, 417], "earn": 400, "earned_reward": 400, "easi": [320, 419, 433], "easier": [419, 439], "easiest": [416, 419], "easili": [391, 416, 419, 424, 427, 430, 432, 433, 437], "ecfp": [135, 376, 418, 430], "ecfpfingerprint": 135, "ecosystem": 433, "edbo": [256, 258, 332, 418], "edbokernelfactori": [256, 418], "edit": [416, 419], "editor": 437, "editori": 421, "edwin": 437, "effect": [51, 165, 167, 168, 169, 170, 233, 390, 391, 400, 413, 418, 422, 425, 430, 431, 434, 437, 439], "effici": [204, 397, 416, 418, 432], "effortlessli": 434, "ei": [3, 380], "either": [22, 27, 199, 227, 233, 246, 270, 376, 387, 402, 406, 416, 421, 429, 430, 431, 432, 434], "elabor": 421, "elaps": 390, "elapsedtimeprint": 390, "electron": [420, 421], "electroshap": 135, "electroshapefingerprint": 135, "eleg": [412, 433], "element": [36, 37, 38, 48, 233, 292, 299, 308, 314, 334, 349, 350, 355, 397, 412, 413, 418, 425, 434], "elev": 392, "elif": [405, 406], "elimin": [419, 422], "els": [315, 316, 374, 375, 376, 377, 382, 383, 385, 386, 388, 391, 392, 400, 405, 406, 412, 413], "elsewher": 394, "emd": 420, "emdgroup": [289, 416], "emelin": 420, "emerg": 424, "empir": 400, "emploi": [27, 400, 431], "employe": [416, 426], "empow": 435, "empti": [87, 196, 198, 204, 211, 297, 311, 320, 333, 336, 397, 402, 406, 408, 418, 432], "empty_encod": [198, 204], "emptysearchspaceerror": 211, "emul": [17, 417, 418], "en": [88, 149], "enabl": [169, 291, 292, 375, 376, 377, 397, 412, 416, 417, 418, 424, 425, 426, 427, 428, 429, 431, 433, 434, 436, 437], "encod": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 123, 124, 125, 127, 128, 130, 132, 133, 134, 135, 137, 138, 141, 198, 204, 236, 238, 239, 242, 246, 260, 262, 264, 266, 319, 321, 375, 376, 377, 379, 380, 385, 386, 387, 388, 391, 395, 397, 400, 402, 408, 409, 410, 412, 413, 416, 418, 425, 432, 433, 437], "encompass": 424, "encount": [165, 167, 168, 169, 170, 361, 417, 418, 419, 429], "end": [0, 288, 340, 391, 395, 400, 402, 408, 421, 425, 433], "endeavor": 422, "endpoint": [418, 426], "enforc": [348, 367, 418, 419], "engin": [417, 431, 433, 434, 439], "enhanc": [22, 416], "enlarg": 430, "enough": [196, 433], "ensembl": 268, "ensur": [143, 375, 376, 377, 397, 398, 416, 425, 433, 434], "enter": [68, 204, 432], "entir": [292, 340, 362, 418, 419, 422, 426, 439], "entiti": 421, "entri": [27, 34, 37, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 219, 236, 238, 239, 242, 246, 260, 262, 264, 266, 292, 297, 326, 334, 362, 377, 385, 386, 387, 388, 397, 415, 418, 425, 426, 427, 428, 436, 439], "enum": [118, 132, 133, 134, 135, 199, 253, 281, 282, 301, 360, 418, 433], "enumer": [117, 131, 280, 392, 412, 413, 429], "env": [418, 419], "envar_nam": 426, "environ": [291, 348, 367, 374, 375, 376, 377, 383, 385, 386, 388, 391, 392, 394, 400, 412, 413, 416, 417, 418, 419, 438], "envvar": 289, "envvar_nam": 426, "eq": [385, 397], "equal": [41, 115, 170, 196, 400, 402, 408, 418, 425, 429, 432, 433, 436], "equat": [41, 425, 434], "equidist": 430, "equip": 425, "equival": [17, 30, 53, 383, 404, 422, 425, 434], "erg": 135, "ergfingerprint": 135, "erron": 418, "error": [168, 178, 180, 227, 229, 231, 243, 309, 351, 377, 395, 400, 417, 418, 425, 429, 430, 431], "esian": 416, "especi": 419, "essenti": [424, 431], "establish": [391, 412, 413, 437], "estat": 135, "estatefingerprint": 135, "ester": [375, 376, 377, 379, 380], "estim": [198, 203, 204, 236, 400, 418, 435, 438], "estimate_product_space_s": [198, 204, 439], "estimated_win_r": 400, "estimation_bia": 400, "estimation_vari": 400, "et": [376, 416, 430], "etc": [36, 37, 38, 125, 198, 276, 437], "ethanol": [397, 425], "euclidean": 361, "eval_during_augment": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_cr": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "eval_during_model": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "evalu": [22, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 268, 269, 316, 405, 406, 418, 424, 426, 431, 434, 437], "even": [170, 270, 331, 412, 413, 421, 423, 424, 426, 430, 434, 435, 437, 439], "event": [27, 292, 391, 421], "everi": [423, 439], "everyth": [419, 425], "evolv": [392, 419], "ex": 428, "exabyt": 439, "exact": [27, 334, 390, 417, 418, 425, 430], "exactexplain": [81, 84, 428], "exactli": [110, 115, 120, 198, 397, 418, 423, 424, 432, 433], "exampl": [143, 229, 296, 297, 306, 315, 333, 373, 374, 378, 381, 384, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 403, 404, 407, 411, 412, 413, 417, 418, 419, 420, 421, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439], "example_input_nam": 394, "exceed": 391, "exceedingli": 434, "except": [311, 320, 324, 338, 339, 375, 376, 377, 391, 395, 409, 410, 416, 417, 418, 421, 427], "excepthook": 417, "exceptiongroup": 418, "excess": 439, "exclud": [27, 52, 330, 385, 386, 387, 388, 402, 408, 418, 421, 425, 438], "exclude_list": 332, "exclus": [50, 384, 414, 418, 421, 425, 434, 438], "execut": [27, 60, 227, 311, 374, 376, 417, 418, 419, 421, 426, 433, 434, 437], "exemplari": 424, "exercis": 421, "exhaust": [168, 428, 431], "exist": [105, 198, 292, 302, 311, 397, 417, 418, 419, 422, 424, 425, 427, 433, 437], "exp_rep": [204, 385, 386, 387, 388, 397, 432], "exp_rep_byt": [203, 439], "exp_rep_human_read": [203, 439], "exp_rep_shap": [203, 439], "expect": [3, 4, 9, 11, 12, 14, 48, 240, 248, 311, 329, 380, 386, 392, 394, 397, 398, 400, 410, 418, 419, 424, 425, 428, 429, 430, 433, 434, 436, 439], "expens": [10, 180, 382, 434], "experi": [0, 27, 162, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 225, 227, 236, 238, 239, 242, 246, 260, 262, 264, 266, 375, 376, 377, 379, 380, 405, 406, 418, 422, 424, 425, 427, 429, 430, 431, 436, 437, 438], "experiment": [27, 87, 110, 115, 120, 124, 127, 128, 130, 138, 141, 162, 165, 166, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 198, 203, 204, 225, 236, 238, 239, 242, 246, 260, 262, 264, 266, 276, 278, 284, 326, 328, 385, 386, 387, 388, 392, 402, 408, 416, 418, 422, 423, 425, 429, 430, 432, 433, 434, 436, 437, 438, 439], "experimentalist": 415, "explain": [65, 82, 83, 84, 86, 87, 392, 418, 420, 435, 438], "explainer_cl": [83, 87, 428], "explan": [83, 87, 418, 424, 435], "explanation_index": [83, 428], "explicit": [143, 169, 390, 391, 395, 397, 404, 409, 410, 418, 419, 433, 437, 438], "explicitli": [196, 204, 390, 406, 413, 421, 427, 432, 437], "exploit": [8, 17, 18, 400, 418], "explor": [8, 18, 27, 400, 422, 431, 432, 437], "exploratori": 422, "exponenti": 204, "expos": [27, 390, 418], "exposur": 418, "expr": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "express": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 416, 418, 421, 425], "extend": [427, 430, 437], "extens": [418, 431], "extra": [376, 417, 418], "extract": [27, 165, 167, 168, 169, 170, 335, 392, 412, 428, 438], "extract_pi": 392, "f": [316, 374, 375, 376, 377, 382, 383, 385, 386, 387, 388, 390, 391, 392, 397, 398, 402, 404, 405, 406, 412, 413, 439], "f1": 434, "f2": 434, "fabian": 420, "face": [236, 238, 239, 242, 246, 260, 262, 264, 266, 398, 400], "facilit": 431, "fact": [17, 392, 397, 415, 425, 429], "factor": [143, 424, 439], "factori": [143, 196, 246, 247, 248, 249, 250, 256, 258, 307, 380, 385, 386, 387, 388, 402, 408, 418], "fail": [406, 410, 417, 418], "failur": [278, 421], "failure_valu": 278, "fairli": 429, "fake": [229, 326, 379, 380, 394, 395, 402, 418, 423, 434, 438], "fall": [170, 391, 424, 436], "fallback": [113, 204, 342, 353, 394, 418, 432], "fals": [6, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 87, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 167, 168, 169, 170, 180, 196, 198, 204, 209, 236, 242, 260, 262, 264, 266, 278, 287, 292, 304, 305, 309, 315, 316, 329, 333, 334, 335, 355, 380, 385, 386, 387, 388, 402, 408, 409, 410, 416, 418, 426], "famili": 425, "familiar": [375, 376, 377, 380, 382, 383, 385, 386, 387, 388, 394, 395, 402, 405, 406, 408], "fang": 420, "fantasi": 10, "far": 424, "farthest": [192, 360, 361, 380, 416, 418, 420, 422, 431], "farthest_point_sampl": 418, "fashion": [286, 288], "fast": [385, 387, 388, 432, 436], "faster": 204, "fault": 78, "faulti": 417, "favicon": 418, "fc": [375, 376, 377], "feasibl": [424, 428], "featur": [83, 100, 141, 332, 416, 417, 419, 425, 428, 435, 437], "fed": [416, 428], "feder": 420, "fee": 421, "feed": [415, 416, 427, 437], "feedback": 420, "feel": 391, "few": [374, 400, 418, 419, 422, 430, 433, 437, 439], "field": [218, 324, 355, 418, 437, 438], "fifti": 421, "fig": 392, "figur": [353, 392], "file": [353, 375, 376, 377, 394, 395, 406, 416, 418, 421, 426, 433, 437], "filenotfounderror": [375, 376, 377, 391], "fill": [27, 229, 392], "filler": 425, "filter": [27, 34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 198, 204, 330, 333, 385, 397, 418, 425, 427, 432, 437, 439], "filter_attribut": 418, "filter_df": [27, 418], "filterwarn": 391, "final": [374, 376, 379, 391, 397, 413], "find": [198, 309, 350, 353, 416, 422, 424, 425, 437], "fine": [395, 408, 409, 410, 416], "finer": [143, 416], "fingerprint": [135, 141, 319, 321, 416, 418, 420, 430], "finish": 423, "finit": [168, 225, 233, 339, 369, 400, 430, 434], "first": [198, 231, 349, 361, 374, 376, 379, 380, 385, 390, 391, 394, 395, 397, 402, 406, 410, 412, 413, 416, 417, 418, 424, 425, 429, 430, 431, 432, 437, 439], "fit": [27, 190, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 362, 364, 375, 376, 377, 385, 386, 387, 388, 394, 402, 408, 418, 421, 425, 430, 435], "fit_gpytorch_ml": 418, "fit_gpytorch_mll_torch": 418, "fitnr": 402, "fitzner": [416, 420], "fix": [225, 249, 391, 392, 397, 400, 405, 406, 419, 424, 430, 434, 437, 439], "flag": [22, 27, 49, 83, 87, 110, 115, 120, 180, 198, 199, 204, 329, 334, 335, 415, 418, 424, 426, 427, 428, 431], "flake8": 418, "flexibl": [390, 404, 418, 433, 434], "flexibli": 431, "float": [8, 13, 18, 38, 41, 43, 44, 94, 95, 96, 97, 98, 99, 100, 101, 105, 107, 115, 116, 130, 137, 138, 141, 146, 147, 153, 154, 155, 156, 157, 158, 159, 180, 203, 204, 227, 231, 236, 270, 278, 279, 286, 287, 288, 293, 323, 326, 327, 328, 332, 340, 344, 346, 347, 349, 350, 351, 366, 369, 370, 371, 390, 392, 394, 400, 402, 418, 419, 438], "float64": 366, "floattensortyp": 394, "fly": [169, 433], "fn": 302, "focu": [8, 18, 424], "focus": [120, 406, 416], "folder": [376, 416, 419, 426, 435], "follow": [165, 167, 168, 169, 170, 198, 227, 229, 231, 375, 376, 377, 380, 382, 383, 385, 386, 387, 388, 390, 391, 395, 400, 402, 406, 409, 410, 412, 413, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "footprint": [10, 198], "forbid": 372, "forc": [83, 85, 180, 418, 419, 428, 431], "forest": [265, 266], "forgiv": 436, "fork": 419, "form": [204, 225, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 326, 415, 416, 421, 422, 424, 429, 430, 431, 432, 433, 434, 439], "formal": [398, 415], "format": [41, 290, 336, 341, 344, 394, 395, 408, 409, 416, 417, 418, 419, 424, 426, 433, 434], "format_except": 417, "former": [397, 418], "formul": 437, "formula": 397, "forrest": 418, "found": [76, 143, 196, 204, 309, 319, 347, 350, 353, 391, 397, 402, 416, 417, 419, 424, 425, 431, 437], "foundat": 431, "four": 397, "fourier": 100, "fourth": 425, "fp": [360, 418, 422], "fp_size": [135, 430], "fpsrecommend": [380, 394, 395, 408, 409, 410, 416, 423, 431], "frac": [413, 429], "frac1": 386, "fraction": [13, 95, 323, 391, 422, 425, 426], "fraction1": 386, "fraction_1": 425, "fraction_2": 425, "fraction_3": 425, "frame": [328, 428, 439], "frame1": 386, "frame2": 386, "frame_1": 425, "frame_2": 425, "framea": 386, "framea_a": 386, "frameb": 386, "framework": [424, 430], "free": [419, 421, 426], "freedom": 433, "freeli": 397, "frequenc": 100, "frequent": 400, "fresh": 391, "frictionless": 433, "friendli": 418, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 135, 137, 138, 141, 143, 149, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 221, 229, 231, 233, 236, 238, 239, 242, 246, 249, 254, 258, 260, 262, 264, 266, 270, 276, 278, 284, 287, 288, 311, 315, 316, 320, 328, 329, 330, 332, 340, 351, 353, 362, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 390, 391, 392, 394, 395, 397, 398, 400, 402, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 417, 419, 421, 422, 423, 425, 427, 428, 429, 430, 431, 434, 436, 437, 438, 439], "from_bound": [196, 418, 432], "from_campaign": [83, 428], "from_config": [27, 409, 410, 424], "from_datafram": [196, 198, 204, 418, 427, 432, 433, 439], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 196, 198, 204, 221, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 340, 394], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 196, 198, 204, 221, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 340, 394, 395, 408, 424, 433], "from_paramet": [196, 198, 204, 418], "from_preset": 246, "from_product": [196, 198, 204, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 390, 391, 392, 394, 395, 397, 398, 402, 404, 405, 406, 408, 409, 410, 412, 413, 416, 418, 425, 427, 432, 433, 434], "from_recommend": [83, 428], "from_record": [433, 434], "from_simplex": [204, 397, 418, 427, 432, 439], "from_surrog": [83, 428], "frozenset": 397, "fsspec": 418, "fulfil": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 391, 397, 398], "full": [22, 196, 347, 373, 414, 418, 424, 427, 428, 430, 437, 438], "full_factori": 196, "full_lik": 392, "full_lookup": [375, 376, 377], "fulli": [397, 416, 418, 426, 427, 434], "fulltest": 419, "func": 419, "func_nam": 412, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 35, 41, 42, 48, 56, 63, 70, 78, 80, 83, 99, 106, 109, 112, 114, 119, 142, 145, 178, 180, 181, 197, 202, 208, 212, 213, 221, 222, 225, 226, 228, 230, 231, 232, 237, 241, 247, 252, 267, 271, 272, 275, 282, 285, 286, 287, 288, 289, 292, 293, 295, 298, 313, 317, 322, 325, 328, 335, 336, 338, 343, 345, 352, 353, 356, 359, 368, 379, 385, 386, 387, 388, 390, 392, 397, 400, 408, 412, 413, 416, 417, 418, 422, 424, 425, 427, 429, 431, 432, 434, 435, 436, 437, 439], "function_nam": [412, 413], "functionalgroup": 135, "functionalgroupsfingerprint": 135, "fundament": [430, 433], "furo": 418, "further": [397, 398, 408, 416, 423, 427, 431, 432, 435, 437, 438], "furthermor": 402, "furyl": [375, 376, 377], "futur": [53, 198, 241, 385, 387, 388, 391, 412, 427, 428, 436], "fuzzi": 292, "fuzzy_row_match": 292, "g": [49, 51, 52, 66, 83, 86, 130, 143, 198, 204, 299, 321, 334, 400, 416, 417, 418, 419, 422, 423, 425, 426, 428, 430, 431, 432, 434, 439], "g1": 398, "g2": 398, "g3": 398, "gain": [204, 424, 428], "gamma": 154, "gammaprior": 418, "garbag": 418, "gather": [170, 412, 413, 422, 437], "gaussian": [88, 187, 238, 244, 245, 246, 247, 251, 252, 253, 255, 256, 257, 258, 286, 380, 402, 418, 425, 431, 437], "gaussian_kd": 392, "gaussian_process": [90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 246, 248, 249, 253, 256, 258, 380, 418], "gaussianmixtureclusteringrecommend": 431, "gaussianprocesspreset": [246, 254], "gaussianprocesssurrog": [254, 380, 385, 386, 387, 388, 392, 402, 408, 409, 410, 418, 435], "gcf": [375, 377], "ge": 383, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 134, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 203, 204, 236, 238, 239, 242, 246, 249, 256, 258, 260, 262, 264, 266, 276, 278, 284, 290, 315, 321, 327, 340, 356, 364, 374, 380, 390, 397, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 433, 434, 435, 436, 437, 438, 439], "geom_mean": [107, 115, 118, 402, 429], "geometr": [118, 351, 402, 429], "germani": [416, 420, 426], "get": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 178, 180, 196, 246, 326, 380, 391, 397, 405, 406, 415, 416, 418, 423, 438, 439], "get_candid": [204, 391], "get_cmap": 392, "get_comp_rep_parameter_indic": [198, 418], "get_current_recommend": [165, 167, 168, 169, 170, 418], "get_integration_point": 13, "get_invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_invalid_polar": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "get_lin": 391, "get_next_recommend": [165, 167, 168, 169, 170, 418], "get_non_meta_recommend": [165, 167, 168, 169, 170, 418], "get_parameters_by_nam": [196, 198, 204], "get_parameters_from_datafram": [196, 204], "get_subclass": 380, "get_surrog": [27, 83, 178, 180, 418, 428, 435], "get_transform_object": 418, "get_transform_paramet": 418, "get_valid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 418], "getawai": 135, "getawayfingerprint": 135, "ghosecrippen": 135, "ghosecrippenfingerprint": 135, "git": [416, 419], "github": [258, 289, 312, 332, 394, 418, 419, 420], "give": [394, 395, 397, 413, 421, 424, 429, 433], "given": [25, 27, 30, 36, 37, 38, 58, 76, 83, 86, 87, 110, 115, 120, 128, 141, 143, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 210, 225, 229, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 270, 281, 293, 297, 304, 305, 309, 310, 311, 314, 315, 318, 319, 323, 326, 329, 335, 340, 341, 349, 351, 354, 355, 361, 364, 385, 386, 387, 388, 391, 397, 400, 402, 406, 412, 413, 424, 432, 434], "glass_transition_tempc": 430, "global": [13, 357, 418, 438, 439], "gmean": 351, "gmm": 187, "go": [296, 397, 416], "goal": [374, 400, 429, 437], "goe": 435, "good": [326, 391, 402, 424, 426, 436], "good_interv": 326, "good_reference_valu": 326, "goodwil": 421, "googl": [418, 419], "govern": 416, "gp": [236, 238, 239, 242, 246, 260, 262, 264, 266, 418], "gpytorch": [88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 149, 151, 153, 154, 155, 156, 157, 158, 159, 418], "grab": 415, "gradient": [10, 180, 264, 418, 426, 431], "grant": [418, 421], "granular": [395, 408, 409, 410, 416], "granularity_coar": 408, "granularity_fin": 408, "great": [400, 433], "greater": 170, "greatli": 419, "greedi": [180, 418, 431], "grid": [412, 413], "grid_d": [412, 413], "grossli": 421, "group": [297, 306, 364, 398, 416, 418, 424, 428], "groupbi": [231, 233], "grow": 439, "gt": [388, 397], "gu16": 430, "guarante": [418, 425, 426, 431], "guid": [379, 416, 417, 418, 419, 422, 424, 427, 429, 432, 434, 437], "guidelin": [418, 419, 422], "ha": [27, 49, 69, 70, 83, 168, 196, 198, 204, 236, 238, 239, 242, 246, 260, 262, 264, 266, 296, 309, 311, 315, 327, 334, 361, 362, 376, 380, 385, 386, 387, 388, 397, 402, 406, 408, 416, 418, 419, 421, 423, 424, 425, 428, 430, 432, 433, 434, 436, 437], "had": [225, 425, 430, 434], "half": [138, 155, 156, 340, 406, 423], "halfcauchyprior": 418, "halfnormalprior": 418, "hamster": 437, "hand": [41, 141, 398, 400, 412, 413, 416, 424, 433], "handl": [83, 125, 227, 229, 270, 338, 385, 386, 400, 402, 418, 424, 429, 439], "happen": [168, 402, 406, 413, 417, 418, 419, 432, 433, 437], "happili": 429, "hard": [418, 437, 439], "harmless": 421, "hartmann": [392, 412, 413], "hasattr": [382, 383, 405, 406], "hash": [290, 416, 426, 430], "hashabledict": 418, "have": [22, 27, 34, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 110, 115, 120, 141, 190, 198, 225, 241, 273, 297, 306, 309, 326, 334, 335, 347, 375, 376, 379, 380, 385, 386, 390, 392, 397, 398, 400, 402, 405, 406, 412, 413, 416, 417, 418, 419, 421, 422, 423, 424, 425, 427, 429, 430, 431, 433, 434, 435, 437, 439], "head": 418, "header": 355, "heart": 437, "heatmap": [83, 85], "help": [400, 433, 434, 437], "helper": [390, 392, 394, 397, 433], "henc": [320, 397, 400, 408, 425, 430, 439], "here": [52, 347, 375, 377, 379, 382, 383, 390, 391, 395, 397, 398, 405, 406, 408, 412, 413, 415, 416, 417, 423, 425, 427, 429, 430, 431, 432, 433, 434, 436, 437], "herebi": 421, "herein": [421, 424], "heurist": 180, "hierarch": 433, "hierarchi": [76, 418, 419, 424, 433], "high": [256, 374, 400, 418, 419, 422, 424, 425, 430, 433], "higher": [8, 18, 141, 400, 417, 425, 428, 431], "highest": [422, 433], "highlight": 437, "hint": 419, "histogram": 293, "histori": 419, "hold": [40, 306, 421, 433], "home": [385, 387, 388], "homepag": [416, 418], "hood": 430, "hook": [45, 113, 204, 213, 217, 311, 414, 417, 418, 419], "hopp": [416, 420], "host": [416, 418, 426], "hostnam": [290, 426], "hot": [132, 376, 400, 416, 418, 430], "how": [50, 227, 229, 361, 374, 375, 377, 378, 379, 380, 381, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 406, 408, 409, 410, 413, 416, 424, 425, 426, 429, 434, 435, 436, 437], "howev": [143, 204, 241, 311, 390, 397, 400, 405, 406, 415, 417, 419, 421, 422, 423, 424, 425, 426, 428, 430, 432, 433, 434, 435, 437, 439], "hrovatin": 420, "html": [88, 149, 289, 302, 347, 394, 418], "http": [88, 149, 258, 289, 302, 312, 332, 347, 416, 418, 421, 437], "hue": [374, 375, 376, 377, 391, 412, 413], "human": [203, 344, 408, 418, 420, 433], "hybrid": [21, 22, 66, 171, 172, 180, 193, 198, 199, 380, 381, 385, 386, 387, 388, 402, 403, 408, 414, 416, 418, 431, 432], "hybrid_recommend": 406, "hybrid_sampl": [180, 431], "hyperrectangl": [196, 432], "hypothesi": [416, 418, 419], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 65, 66, 68, 69, 70, 71, 73, 83, 86, 87, 102, 105, 116, 123, 124, 125, 127, 128, 130, 137, 138, 141, 143, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 211, 225, 227, 229, 231, 233, 236, 238, 239, 240, 241, 242, 246, 256, 260, 262, 264, 266, 270, 273, 281, 286, 287, 288, 291, 292, 293, 297, 300, 301, 302, 304, 305, 309, 311, 312, 314, 315, 316, 319, 320, 326, 327, 328, 329, 333, 334, 335, 336, 339, 340, 347, 349, 350, 353, 355, 361, 362, 369, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 390, 391, 392, 394, 395, 397, 398, 400, 402, 405, 406, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439], "ideal": [423, 425, 434], "ident": [143, 296, 297, 427, 430, 433, 437], "identif": 400, "identifi": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 231, 306, 320, 334, 335, 391, 418, 425, 428, 430, 432, 433, 434, 437], "idx_offset": 41, "ignor": [110, 115, 120, 168, 180, 198, 205, 206, 227, 229, 231, 309, 332, 377, 391, 406, 418, 425, 433, 439], "ignore_exampl": 418, "ignore_list": 331, "ii": 421, "iii": 421, "illustr": [404, 427], "iloc": 423, "imag": [400, 418], "imagin": [397, 400], "immedi": [353, 390, 424], "immut": 418, "impact": [376, 413, 426], "imperfect": 328, "implement": [17, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 116, 162, 173, 233, 240, 313, 385, 391, 397, 412, 418, 419, 420, 422, 428, 431, 432, 434, 437], "impli": [397, 416, 421, 425, 430], "implicitli": 433, "import": [75, 83, 115, 229, 391, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439], "impos": [397, 398, 425], "imposs": [416, 426, 427, 433], "improv": [3, 4, 7, 9, 11, 12, 14, 15, 380, 383, 389, 391, 414, 416, 418, 421, 426], "imput": [227, 229, 373, 377, 414, 416], "impute_mod": [227, 229, 231, 377, 434], "inabl": [416, 421], "inaccuraci": 416, "inact": 40, "inc": 437, "incident": 421, "includ": [58, 110, 115, 120, 170, 227, 304, 305, 331, 375, 386, 395, 397, 409, 410, 413, 418, 419, 421, 422, 423, 425, 427, 439], "inclus": 421, "incom": 433, "incompat": [62, 63, 64, 65, 66, 87, 242, 387, 425], "incompatibilityerror": 27, "incompatibleacquisitionfunctionerror": 423, "incompatibleexplainererror": 428, "incomplet": 418, "inconsist": 418, "incorpor": [421, 423, 435, 439], "incorrect": 418, "incorrectli": 418, "increas": [10, 168, 231, 287, 288, 402, 412, 413, 418, 422, 430, 437], "increment": 204, "incur": 421, "indefinit": [168, 227], "indemn": 421, "indemnifi": 421, "indent": 355, "independ": [172, 238, 262, 394, 418, 431, 434], "independentgaussiansurrog": [242, 260, 262, 264, 418], "index": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 198, 231, 296, 297, 333, 334, 394, 395, 402, 406, 408, 418, 428, 430, 432, 434], "indexkernel": 418, "indic": [27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 78, 83, 86, 123, 124, 125, 127, 128, 130, 137, 138, 141, 165, 167, 168, 169, 170, 198, 296, 297, 300, 301, 329, 361, 397, 406, 418, 421, 427, 431, 434, 435], "indirect": [304, 305, 421], "indistinguish": 397, "individu": [49, 50, 103, 104, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 227, 336, 391, 398, 421, 424, 427, 429, 431, 437], "induc": 400, "industri": 437, "ineffici": 204, "inequ": [41, 196, 432], "inf": [385, 386, 387, 388, 408], "infeas": 427, "infer": [143, 242, 412, 413, 418, 432], "inferencesess": 242, "infin": 147, "infinit": [168, 169, 307, 339, 369, 370, 418, 430], "influenti": 437, "info": [293, 418], "inform": [22, 125, 276, 335, 375, 376, 377, 392, 397, 405, 406, 413, 416, 418, 419, 421, 423, 426, 427, 430, 432, 437, 438], "infring": 421, "ingest": [204, 227, 430, 431], "ingredi": [397, 398, 425], "inher": [17, 397], "inherit": 419, "init": 272, "initi": [94, 95, 96, 97, 98, 99, 100, 101, 105, 170, 172, 180, 187, 188, 189, 190, 192, 204, 227, 231, 292, 361, 373, 385, 386, 387, 388, 391, 392, 402, 408, 413, 414, 418, 420, 424, 426, 430, 431, 433, 434, 437], "initial_data": [227, 231, 375, 413, 434], "initial_recommend": [170, 380, 391, 392, 394, 395, 400, 408, 409, 410, 416, 431], "initial_recommender_cl": 418, "initial_strategi": 418, "initial_typ": 394, "inject": 433, "inner": [163, 333, 428, 431, 433], "inplac": [376, 412, 413, 439], "input": [36, 37, 38, 116, 124, 127, 128, 130, 138, 141, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 276, 278, 284, 286, 306, 323, 324, 328, 329, 333, 334, 340, 342, 349, 361, 374, 394, 402, 412, 413, 418, 433, 434, 437], "input_dim": 394, "input_label": 329, "inputtransform": 364, "insid": [391, 394, 395, 417, 433], "insight": [83, 391, 416, 418, 420, 438], "inspect": [315, 390, 397], "instabl": [418, 425], "instal": [418, 419, 426, 428, 430, 439], "instanc": [36, 37, 38, 49, 52, 83, 170, 198, 326, 386, 391, 397, 398, 416, 417, 419, 423, 424, 425, 426, 428, 430, 432, 433, 434, 439], "instanti": [242, 391, 424], "instead": [165, 167, 168, 169, 170, 292, 320, 329, 385, 387, 388, 416, 417, 418, 424, 425, 429, 430, 433, 434, 436, 437, 439], "institut": [420, 421], "instruct": [416, 418, 436, 438], "instrument_nam": 293, "int": [10, 13, 17, 27, 30, 40, 41, 47, 83, 90, 91, 92, 95, 97, 98, 99, 100, 101, 116, 132, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 203, 204, 227, 231, 233, 278, 279, 286, 287, 288, 293, 336, 350, 354, 357, 358, 361, 362, 364, 385, 387, 388, 397, 400, 402, 413, 419, 430], "integ": [30, 132, 198, 231, 406, 418, 419, 430], "integr": [13, 418, 419, 422, 424], "intend": [379, 390, 412, 419, 431], "intens": 430, "intention": 421, "interact": [26, 27, 379, 416, 417, 424, 427, 433], "interchang": 397, "interconnect": 424, "interest": [428, 429, 439], "interfac": [162, 240, 248, 390, 392, 418, 421, 424, 427, 428], "intermedi": [190, 361], "intern": [27, 41, 53, 168, 374, 391, 402, 418, 425, 426, 430, 431, 432, 433], "internet": 416, "internship": 420, "interplai": 418, "interpol": [95, 256, 418], "interpret": [198, 225, 323, 395, 397, 409, 410, 413, 426, 432, 434], "interrupt": 60, "intersect": 406, "interv": [137, 284, 286, 287, 288, 402, 418, 424, 430, 433, 436], "intrins": 437, "introduc": [417, 418, 425, 430, 431, 434], "intuit": [424, 428], "invalid": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 67, 204, 320, 334, 362, 395, 409, 417, 424, 425, 432], "invalid_config": 410, "invalid_surrogate_model": 395, "invalid_typ": 410, "invari": [49, 52, 53, 296, 297, 425], "invers": [217, 433], "invert": [27, 333], "investig": [225, 434, 435], "invok": [434, 438, 439], "involv": [27, 204, 390, 397, 416, 426, 428, 429, 430, 433, 437], "io": 289, "irrelev": [397, 418, 425], "irrespect": [292, 334], "irrevoc": 421, "is_bound": [340, 418], "is_continu": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 123, 124, 125, 127, 128, 130, 137, 138, 141], "is_degener": 340, "is_discret": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 123, 124, 125, 127, 128, 130, 137, 138, 141], "is_empti": [196, 204, 418], "is_eq": 41, "is_finit": 418, "is_fully_unbound": 340, "is_half_bound": 340, "is_in_rang": [123, 124, 125, 127, 128, 130, 137, 138, 141], "is_left_bound": 340, "is_numer": [123, 124, 125, 127, 128, 130, 137, 138, 141, 418], "is_right_bound": 340, "is_stat": [165, 167, 168, 169, 170, 418, 427], "iso": 394, "isoxazol": 437, "issu": [241, 302, 312, 418, 421, 434, 439], "item": [37, 123, 124, 125, 127, 128, 130, 137, 138, 141, 397, 400, 412, 413, 430], "iter": [27, 137, 168, 169, 198, 227, 241, 284, 307, 328, 341, 375, 385, 386, 387, 388, 391, 392, 400, 412, 413, 416, 418, 422, 424, 430, 431, 434, 435, 439], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 143, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 172, 196, 198, 204, 221, 233, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 293, 296, 303, 311, 315, 326, 340, 344, 374, 380, 390, 392, 397, 398, 400, 413, 416, 417, 419, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 437, 439], "itself": [390, 412, 417, 437], "j": [376, 416, 430, 437], "jackiepho": [375, 376, 377], "januari": 421, "javadi": 420, "jin": 420, "join": [333, 417], "joint": 424, "jointli": 424, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 196, 198, 204, 221, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 340, 353, 394, 395, 408, 409, 418, 438], "json_str": 433, "juli": 420, "julian": 420, "jump": [418, 437], "jupyt": 394, "just": [400, 415, 419, 433], "k": [138, 188, 361, 374, 375, 376, 377, 379, 380, 382, 383, 391, 397, 404, 405, 406, 418, 427, 431, 439], "karin": 420, "kde": 392, "keep": [48, 141, 196, 204, 391, 418, 419], "kei": [306, 326, 376, 419, 428], "kept": [333, 430, 435], "kernel": [90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 246, 247, 248, 249, 250, 256, 258, 380, 385, 386, 387, 388, 402, 408, 418, 425, 437], "kernel_factori": [90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 246, 248, 249], "kernel_or_factori": 246, "kernelexplain": [81, 83, 84, 87, 428], "kernelfactori": [246, 249, 250, 256, 258, 418], "keyword": [83, 141, 377, 380, 406, 413, 418, 423, 425, 432, 434], "kgaa": [416, 420, 426], "kian": 437, "kickstart": 433, "kind": [180, 416, 418, 421, 425, 430, 431], "kiter": [385, 386, 387, 388, 402], "klekotaroth": 135, "klekotarothfingerprint": 135, "kmean": 380, "kmeansclusteringrecommend": [380, 431], "knob": 416, "know": [400, 409, 416, 417, 433, 437], "knowledg": [10, 416, 418, 437], "known": [425, 427, 437], "koller": 437, "kwarg": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 94, 96, 98, 103, 104, 105, 151, 153, 154, 155, 156, 157, 158, 159, 162, 182, 240, 243, 248, 321, 339], "kwargs_conform": [141, 321, 430], "kwargs_fingerprint": [141, 321, 430], "l0": 30, "l1": 430, "l664": 258, "label": [52, 53, 130, 141, 293, 329, 397, 398, 416, 418, 425, 430, 432, 434], "labelpad": 392, "laggner": 135, "laggnerfingerprint": 135, "lambda": [385, 387, 388, 391, 397, 412, 435], "lanat": 428, "land": 418, "languag": [302, 398, 416], "larg": [141, 204, 382, 383, 398, 418, 426, 430, 434, 439], "larger": [95, 138, 362, 380, 387, 424, 425, 433, 437], "largest": [361, 400, 422], "last": [168, 400, 419, 424, 431], "last_call_tim": 390, "lastli": 392, "latent": 430, "later": [138, 417, 424, 433], "latest": [169, 416, 419, 424], "latter": [17, 27, 296, 315, 391, 397, 424, 437], "law": [416, 421], "lawsuit": 421, "layer": 135, "layeredfingerprint": 135, "layout": 418, "lazi": [206, 365, 418], "lazili": [418, 426], "lazyfram": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 206], "le": 383, "le_method": 419, "lead": [74, 402, 418, 433], "lean": 419, "learn": [13, 232, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 380, 385, 386, 387, 388, 400, 402, 408, 412, 414, 416, 418, 425, 428, 430, 435, 436, 438], "least": [168, 398, 416, 421, 423, 424], "leav": 433, "lee": 420, "left": [71, 72, 159, 227, 327, 334, 340, 386, 418, 429], "left_df": 334, "leftov": 418, "legal": 421, "legend": [375, 377], "len": [386, 391, 392, 397, 398, 400], "length": [96, 168, 169, 236], "lengthi": 424, "lengthscal": [95, 96, 97, 99, 100, 101], "lengthscale_initial_valu": [95, 96, 97, 99, 100, 101], "lengthscale_prior": [95, 96, 97, 99, 100, 101], "leq": 30, "less": [297, 391, 392, 400, 424, 439], "let": [374, 376, 390, 391, 392, 394, 395, 397, 398, 404, 413, 416, 425, 429, 433], "level": [328, 418, 419, 423, 424, 425, 431, 433], "leverag": [391, 424, 431], "li": 430, "liabil": 421, "liabl": 421, "lib": [385, 387, 388, 417], "librari": 417, "licensor": 421, "lie": [27, 236, 238, 239, 242, 246, 260, 262, 264, 266, 326], "liebig": 420, "life": [416, 419, 420, 439], "lifecycl": 424, "ligand": [375, 376, 377, 379, 380, 391, 416, 428, 430], "ligand_data": 391, "ligand_smil": 391, "like": [190, 231, 299, 392, 397, 400, 416, 417, 418, 419, 423, 424, 425, 427, 430, 433, 434, 437, 439], "likelihood": 236, "lime": [83, 86, 428], "limetabular": [81, 82, 428], "limit": [256, 293, 392, 416, 420, 421, 425, 432, 438], "line": [340, 355, 375, 377, 391, 400, 418, 419, 422, 424, 430, 434, 437], "linear": [41, 94, 196, 260, 282, 287, 380, 381, 402, 414, 418, 419, 428, 432, 436], "linear_model": 394, "linear_regressor": 394, "linearkernel": 418, "linearli": [256, 287, 288, 402, 418], "lineplot": [374, 375, 376, 377, 391, 412, 413], "lingo": 135, "lingofingerprint": 135, "link": [51, 417, 418, 421, 430], "linspac": [385, 386, 387, 388, 392, 394, 395, 397, 405, 406, 408, 412, 413, 439], "lint": [416, 418, 419], "linter": [418, 419], "list": [30, 31, 32, 33, 34, 37, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 107, 128, 143, 148, 168, 169, 196, 198, 204, 205, 206, 209, 210, 211, 227, 231, 233, 292, 304, 305, 306, 314, 321, 326, 330, 331, 332, 334, 335, 361, 375, 380, 385, 386, 387, 388, 392, 397, 398, 400, 402, 405, 406, 413, 416, 419, 421, 425, 429, 430, 431, 432, 434], "liter": [83, 107, 168, 227, 229, 231, 328, 361, 419], "literatur": 418, "litig": 421, "littl": 417, "liver": [434, 437], "ll": 427, "load": [353, 365, 391, 394, 409, 410, 417, 418], "loc": [157, 158, 375, 377], "local": [417, 419, 426, 428, 438], "locat": [157, 158, 423, 426, 437], "lockfil": 418, "log": [157, 293, 380, 416, 426], "logarithm": [4, 11, 12, 351], "logei": [4, 418], "logic": [163, 326, 329, 374, 418, 425, 431, 434, 439], "lognormalprior": 418, "logo": 418, "long": [424, 433, 434], "longer": 418, "look": [229, 380, 397, 400, 417, 422, 424, 425, 427, 428, 433, 434, 436], "look_up_target": 227, "lookup": [225, 227, 231, 233, 329, 334, 373, 374, 392, 405, 414, 418, 428, 438], "lookup_df": 229, "lookup_test_task": 413, "lookup_training_task": 413, "lookup_valu": [382, 383, 392, 405, 406], "lookup_withmiss": 377, "loop": [225, 227, 233, 385, 386, 387, 388, 391, 402, 418, 423, 428, 434, 439], "loss": 421, "lost": 433, "lot": 404, "low": [256, 400, 417, 418, 428, 430, 433], "lower": [159, 286, 287, 288, 340, 375, 377, 392, 402, 412, 413, 430, 436], "lower_bound": 432, "lst_exclud": 330, "lt": 417, "luxuri": 424, "m": 397, "m1": 417, "mac": 417, "macc": 135, "maccsfingerprint": 135, "machin": [400, 416, 417, 419, 422, 426, 430, 436, 437], "machineri": [17, 180, 417, 419, 427, 437, 439], "made": [75, 227, 361, 377, 416, 417, 421, 425, 426, 427, 434], "magic": 437, "magnitud": [327, 328, 439], "mai": [27, 110, 115, 120, 198, 311, 415, 416, 421, 424, 427, 433, 434], "mail": 421, "main": [26, 27, 416, 418], "maintain": [270, 419, 427], "major": [418, 434], "make": [8, 18, 53, 180, 268, 269, 270, 302, 327, 329, 375, 377, 380, 382, 397, 398, 416, 417, 419, 421, 423, 424, 425, 427, 428, 430, 433, 437, 439], "make_explainer_for_surrog": 83, "malfunct": 421, "manag": [26, 196, 197, 198, 204, 358, 418, 421, 434], "mandatori": [415, 418, 436], "mani": [362, 397, 405, 406, 416, 424, 430, 433, 436, 437], "manipul": [418, 426], "manner": 426, "manual": [406, 417, 418, 433], "map": [130, 135, 141, 229, 231, 286, 287, 288, 309, 329, 364, 375, 376, 377, 402, 434, 436], "mapfingerprint": 135, "mapl": [81, 82, 83, 86, 428], "margin": 418, "mark": [421, 424, 437, 438], "markdown": [395, 409, 410, 418], "marker": [374, 375, 376, 377, 391, 412, 413, 418], "markers": [374, 376, 391, 412, 413], "market": 400, "marketplac": 418, "martin": [416, 420], "mask_bad1": 385, "mask_bad2": 385, "mask_bad3": 385, "mask_good": [385, 425], "mass": 153, "master": 258, "match": [27, 77, 124, 127, 128, 130, 138, 141, 143, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 276, 278, 281, 284, 292, 309, 311, 334, 335, 390, 392, 402, 406, 416, 418, 423, 424, 427, 429, 433, 434, 438], "match_attribut": 418, "match_targeta": 436, "match_targetb": 436, "materi": [400, 420, 437], "matern": 95, "maternkernel": 418, "math": [391, 397], "mathemat": 418, "matmin": 417, "matplotlib": [375, 377, 392, 418], "matter": [397, 404, 419, 429], "max": [229, 281, 327, 375, 376, 377, 379, 380, 385, 386, 387, 388, 391, 392, 394, 395, 400, 402, 408, 409, 410, 416, 418, 429, 433, 434, 438], "max_cardin": [30, 40, 47], "max_column": [336, 397], "max_colwidth": 336, "max_nonzero": 204, "max_row": [336, 397], "max_sum": [204, 397, 432], "max_target": 436, "max_yield": [375, 377], "maxim": [6, 281, 379, 392, 400, 402, 416, 418, 428, 436], "maximum": [6, 30, 40, 47, 141, 196, 198, 204, 286, 336, 397, 398, 402, 418, 425, 430, 432], "mc": [400, 423], "md": 418, "me2pph": [375, 376, 377], "mean": [5, 8, 17, 18, 27, 53, 107, 118, 188, 225, 227, 229, 231, 236, 262, 270, 351, 377, 380, 394, 400, 402, 418, 419, 421, 422, 423, 424, 425, 427, 429, 430, 431, 433, 435, 438], "meaning": 429, "meaningless": [397, 422], "meanpredictionsurrog": [270, 380, 435], "meantim": [419, 425], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 83, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 225, 227, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 276, 278, 284, 292, 326, 334, 375, 376, 377, 380, 382, 383, 385, 386, 387, 388, 390, 391, 392, 402, 405, 406, 408, 415, 416, 418, 419, 422, 423, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438], "mechan": [8, 18, 27, 60, 115, 116, 118, 225, 228, 229, 233, 311, 333, 342, 361, 374, 390, 391, 392, 412, 413, 418, 421, 427, 428, 432, 433, 437, 438], "mechanist": 416, "media": [421, 430, 437], "mediocr": 436, "medium": [395, 408, 416, 421, 430], "medoid": [189, 418, 431], "meet": [326, 421], "mem_estim": 439, "member": [315, 425, 430], "memori": [10, 198, 203, 204, 418, 426, 438], "memorys": [198, 204, 439], "mention": 422, "merchant": 421, "merck": [416, 420, 426], "mere": [421, 429], "merg": 419, "meshgrid": [412, 413], "messag": 391, "meta": [27, 71, 165, 167, 168, 169, 170, 173, 385, 386, 387, 388, 402, 408, 416, 418, 438], "metadata": [27, 196, 204, 290, 418], "metarecommend": [167, 168, 169, 170, 418, 427], "methanol": 397, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 78, 83, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 203, 204, 221, 236, 238, 239, 240, 242, 246, 248, 249, 256, 258, 260, 262, 264, 266, 269, 272, 273, 276, 278, 284, 299, 302, 311, 315, 340, 353, 360, 361, 362, 364, 392, 395, 409, 410, 415, 418, 420, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437], "methodtyp": [390, 391, 392], "methyldiphenylphosphin": [375, 376, 377], "methylisoxazol": 437, "metric": [400, 416, 426, 430], "mhfp": 135, "mhfpfingerprint": 135, "micromamba": 418, "middl": 427, "midpoint": 436, "might": [49, 53, 141, 198, 376, 380, 382, 386, 406, 413, 417, 423, 424, 425, 426, 428, 432, 434, 437, 439], "mimic": [88, 149, 425], "min": [281, 327, 374, 382, 383, 392, 402, 405, 406, 412, 413, 416, 418, 429, 433, 438], "min_cardin": [30, 40, 47], "min_nonzero": 204, "min_target": 436, "mind": [400, 435], "miniconda": 418, "minim": [6, 281, 402, 412, 413, 418, 432, 436], "minimum": [30, 40, 47, 138, 196, 198, 204], "minor": 418, "mirror": [424, 433], "miss": [27, 227, 229, 377, 418, 419], "mistak": 419, "mix": [233, 397, 398, 416, 425, 430, 433, 437], "mixin": 221, "mixtur": [187, 414, 418, 425, 430, 431, 437, 439], "mobil": 418, "mode": [107, 130, 141, 168, 227, 236, 281, 284, 287, 309, 326, 373, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 391, 392, 394, 395, 405, 406, 408, 409, 410, 412, 413, 414, 416, 417, 418, 429, 431, 433, 438], "model": [13, 27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, 69, 83, 87, 88, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 236, 238, 239, 240, 241, 242, 246, 260, 262, 264, 266, 270, 272, 273, 347, 382, 383, 393, 412, 413, 416, 418, 420, 422, 423, 424, 425, 430, 431, 433, 434, 436, 437, 438], "model_cl": 273, "model_cluster_num_parameter_nam": [187, 188, 189, 190], "model_from_config": 394, "model_from_python": 394, "model_init": 272, "model_json": 394, "model_param": [187, 188, 189, 190, 260, 264, 266, 395, 418], "modelnottrainederror": [236, 238, 239, 242, 246, 260, 262, 264, 266], "modif": [417, 421], "modifi": [27, 169, 229, 270, 326, 327, 328, 418, 421, 439], "modul": [0, 1, 28, 79, 80, 88, 108, 121, 139, 149, 160, 163, 173, 176, 183, 194, 212, 213, 225, 234, 244, 251, 274, 277, 294, 298, 345, 365, 368, 416, 417, 418, 419], "modular": 419, "molecul": [51, 141, 320, 397, 430], "molecular": [321, 430], "moment": [233, 256, 419, 436], "monitor": [418, 426], "monkeypatch": 417, "mont": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 70, 231, 374, 376, 377, 391, 400, 412, 413, 418, 423, 434], "monte_carlo_run": [231, 391], "mordr": [135, 141, 375, 376, 377, 379, 380, 386, 391, 395, 397, 409, 410, 416, 418, 425, 430], "mordredcommun": 418, "mordredfingerprint": [135, 430], "more": [8, 10, 18, 53, 58, 72, 141, 168, 169, 196, 198, 204, 211, 227, 270, 289, 292, 315, 355, 377, 380, 392, 397, 398, 412, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 436, 439], "morgan": 430, "morgan_fp": [135, 418], "mors": 135, "morsefingerprint": 135, "most": [204, 227, 378, 400, 416, 419, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439], "motiv": 418, "move": [418, 433], "mpl_toolkit": 392, "mplot3d": 392, "mqn": 135, "mqnsfingerprint": 135, "mse": 400, "mu": [157, 158], "much": [376, 429, 430], "multi": [235, 236, 414, 418, 420, 423, 437], "multiarmedbandit": 400, "multipl": [36, 115, 230, 231, 328, 375, 376, 377, 386, 397, 400, 416, 418, 423, 425, 429, 436, 437, 438], "multipli": 104, "multitask": 418, "must": [49, 110, 115, 120, 198, 204, 229, 233, 311, 328, 380, 390, 391, 397, 400, 402, 418, 419, 421, 422, 425, 426, 427, 429, 430, 434], "mutual": 434, "my_attribut": 419, "my_valu": 426, "mypi": [302, 312, 416, 418, 419], "mystr": 419, "n": [22, 236, 297, 316, 361, 375, 376, 377, 379, 380, 385, 386, 387, 388, 395, 397, 400, 402, 405, 406, 408], "n_arm": 400, "n_batches_don": 27, "n_cluster": [188, 189], "n_combin": 397, "n_combinations_actu": 397, "n_combinations_expect": 397, "n_compon": 187, "n_doe_iter": [227, 231, 233, 374, 375, 376, 377, 391, 392, 412, 413, 434], "n_duplic": 397, "n_estim": 395, "n_fits_don": 27, "n_interrupted_campaign": 391, "n_iter": [382, 383, 385, 386, 387, 388, 400, 402], "n_mc_iter": [231, 233, 374, 376, 377, 391, 412, 413, 434], "n_mc_run": 400, "n_mc_sampl": 17, "n_permut": 397, "n_pis_ov": 391, "n_pis_over_requir": 391, "n_point": [196, 362], "n_raw_sampl": [180, 418, 431], "n_restart": [180, 418, 431], "n_sampl": 361, "n_task": 198, "n_task_param": 418, "n_wrong_sum": 397, "naiv": [172, 262, 270, 380, 418, 432], "naivehybridrecommend": 418, "naivehybridspacerecommend": [406, 418, 431], "nake": [292, 426], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 40, 58, 123, 124, 125, 127, 128, 130, 137, 138, 141, 143, 144, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 210, 219, 231, 242, 276, 278, 284, 296, 303, 309, 310, 311, 320, 321, 326, 330, 335, 348, 353, 355, 367, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 390, 391, 392, 394, 395, 397, 398, 400, 402, 404, 405, 406, 408, 409, 410, 412, 413, 416, 418, 419, 421, 423, 425, 426, 429, 432, 433, 434, 435, 436, 437, 439], "name_or_abbr": [303, 310], "namedtupl": 400, "namespac": [181, 418, 419], "nan": [27, 147, 236, 369, 371, 372, 402], "nativ": [394, 418], "natur": [264, 376, 419, 425, 431, 433, 436], "navig": [416, 424], "nbase": 321, "nbviewer": 394, "nd": 416, "ndarrai": [116, 286, 287, 288, 329, 337, 340, 351, 361, 392, 400, 418, 434], "ne": 397, "nearli": 436, "necessari": [335, 390, 418, 419, 424, 425, 429, 430, 432, 434], "necessarili": [421, 424, 425, 432, 437], "need": [22, 27, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 233, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 311, 334, 335, 375, 376, 377, 380, 385, 388, 390, 392, 394, 397, 400, 402, 412, 413, 415, 416, 417, 418, 419, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 439], "neg": [13, 418], "negat": [6, 41, 413, 418, 437], "neglig": 421, "neither": [233, 328], "neq": 30, "nest": [355, 424, 438], "neural": 437, "neurip": 437, "never": 387, "nevertheless": [315, 417], "new": [27, 43, 44, 107, 168, 170, 196, 229, 241, 286, 287, 288, 296, 332, 333, 379, 391, 392, 408, 416, 418, 419, 424, 425, 435, 437], "new_measur": 428, "new_rec": 424, "newli": [416, 419, 426, 427, 437], "next": [27, 374, 390, 392, 397, 398, 408, 412, 413, 416, 422, 423, 424, 431, 433], "ngboost": [264, 380, 418], "ngboostmodel": 395, "ngboostsurrog": [380, 395, 435], "nice": [392, 417], "nicknam": 320, "nintern": 402, "no_duplicates_constraint": 397, "no_grad": 392, "no_tl": 412, "nois": [227, 327, 328, 413, 418, 438], "noise_level": 328, "noise_perc": [227, 231, 434], "noise_ratio": 327, "noise_std": [412, 413], "noise_typ": 328, "noisi": [12, 14, 412, 416, 418, 437], "non": [27, 57, 58, 82, 110, 115, 120, 165, 167, 168, 169, 170, 172, 198, 227, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 309, 311, 315, 327, 362, 369, 370, 371, 397, 412, 416, 418, 421, 423, 427, 428, 432, 433], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 38, 43, 44, 53, 57, 58, 83, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 105, 107, 115, 120, 124, 137, 138, 143, 146, 147, 148, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 201, 204, 207, 210, 211, 214, 215, 217, 219, 227, 229, 231, 233, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 272, 273, 278, 284, 292, 293, 300, 301, 311, 321, 326, 330, 331, 332, 336, 340, 341, 353, 364, 369, 370, 371, 372, 380, 385, 386, 387, 388, 390, 391, 392, 394, 395, 402, 408, 432, 436, 438], "nonetheless": 437, "nonlinear": [33, 196], "nonpredict": [185, 187, 188, 189, 190, 192, 193], "nonpredictiverecommend": [190, 192, 193, 418], "nonzero": [30, 204, 418], "noqa": [385, 419], "nor": [328, 415], "norecommenderslefterror": [168, 169], "noreturn": [172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 243], "normal": [156, 157, 158, 385, 387, 388, 402, 417, 421, 429, 432], "normaliz": 429, "normalprior": 418, "not_a_param": 395, "notabl": [418, 427], "note": [27, 30, 53, 198, 227, 231, 233, 241, 242, 326, 327, 328, 375, 376, 377, 380, 386, 390, 394, 395, 397, 402, 405, 406, 408, 409, 410, 415, 416, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 437], "notebook": 394, "noteworthi": 424, "noth": [13, 27, 30, 38, 40, 41, 47, 73, 115, 128, 141, 170, 172, 178, 180, 187, 188, 189, 190, 196, 198, 204, 236, 246, 260, 264, 266, 284, 421, 430], "notic": [390, 419, 421, 433], "notimplementederror": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 116, 211, 214, 215, 233, 236, 238, 239, 241, 242, 246, 260, 262, 264, 266], "notwithstand": 421, "now": [374, 375, 376, 377, 379, 380, 385, 387, 390, 391, 392, 397, 398, 400, 402, 404, 408, 409, 412, 413, 415, 416, 418, 437, 439], "np": [116, 382, 383, 385, 386, 387, 388, 392, 394, 395, 397, 398, 400, 404, 405, 406, 408, 412, 413, 425, 430, 434, 439], "nrecommend": [379, 380, 402, 405, 406], "nu": 95, "num": [333, 344], "num_disc_1": [402, 424], "num_disc_2": 402, "num_experi": [227, 374, 375, 376, 377, 391, 412, 413], "num_fantasi": 10, "num_parameter_1": 388, "num_parameter_2": 388, "num_parameter_3": 388, "num_parameter_4": 388, "num_parameter_5": 388, "num_parameter_6": 388, "num_sampl": 100, "num_valu": [385, 386, 387, 388, 402, 408, 432], "number": [10, 13, 17, 27, 40, 100, 141, 162, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 227, 231, 233, 236, 336, 340, 344, 356, 361, 362, 375, 376, 377, 382, 383, 385, 386, 387, 388, 392, 397, 400, 405, 412, 413, 416, 417, 418, 422, 424, 425, 426, 429, 430, 432, 433, 434, 439], "numer": [27, 30, 31, 32, 33, 34, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 74, 123, 124, 125, 127, 128, 130, 137, 138, 141, 196, 204, 229, 284, 292, 327, 328, 334, 362, 374, 379, 382, 397, 398, 418, 425, 426, 428, 429, 430, 432, 434, 436], "numerical_measurements_must_be_within_toler": [27, 292, 334, 418, 424], "numerical_onli": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55], "numericalcontinuousparamet": [41, 196, 374, 382, 383, 398, 404, 406, 413, 432, 434, 438], "numericaldiscreteparamet": [204, 375, 376, 377, 379, 380, 382, 385, 386, 387, 388, 390, 391, 392, 394, 395, 397, 402, 405, 406, 408, 409, 410, 412, 413, 416, 432, 433, 434, 438, 439], "numericaltarget": [229, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 391, 392, 394, 395, 402, 405, 406, 408, 409, 410, 412, 413, 416, 418, 429, 433, 434, 438], "numericcontinu": 406, "numparam1": 388, "numparam2": 388, "numparam3": 388, "numparam4": 388, "numparam5": 388, "numparam6": 388, "numpi": [329, 337, 340, 346, 348, 382, 383, 385, 386, 387, 388, 392, 394, 395, 397, 398, 400, 404, 405, 406, 408, 412, 413, 418, 425, 434, 439], "nuniqu": 397, "nyou": [405, 406], "o": [374, 375, 376, 377, 379, 380, 383, 385, 386, 387, 388, 391, 392, 395, 397, 400, 412, 413, 416, 425, 426, 430], "o2": [375, 376, 377], "obj": [146, 147, 148, 215], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 115, 118, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 143, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 203, 204, 205, 206, 215, 216, 219, 221, 236, 238, 239, 240, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 299, 302, 309, 311, 328, 334, 335, 340, 353, 364, 374, 379, 390, 391, 392, 394, 395, 400, 404, 406, 409, 410, 417, 418, 419, 421, 424, 425, 427, 428, 431, 432, 434, 435, 436, 438, 439], "objective_json": 433, "oblig": 421, "observ": [225, 400, 434, 436], "obsolet": 418, "obtain": [227, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 376, 392, 400, 413, 416, 418, 424, 428, 433, 437], "oc": [375, 376, 377, 379, 380], "oc1": [375, 376, 377], "occur": [52, 419], "occurr": 425, "octanol": [425, 430], "off": [8, 18, 233, 316, 386, 416, 418, 425, 426, 436], "offer": [311, 392, 397, 400, 405, 415, 416, 417, 421, 422, 427, 430, 431, 433, 434, 435, 437, 439], "offset": [41, 98], "offset_initial_valu": 98, "offset_prior": 98, "often": [398, 400, 417, 422, 425, 426, 427, 428, 430, 433, 439], "oftentim": [433, 434], "oh": [127, 132, 376, 386, 395, 400, 402, 408, 409, 410, 416, 432, 433], "ok": 402, "old": 437, "omit": [231, 311, 390, 416, 432, 433], "onc": [231, 391, 430, 434], "one": [17, 27, 58, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 143, 153, 162, 163, 168, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 198, 211, 229, 246, 270, 296, 297, 355, 375, 376, 377, 380, 382, 397, 400, 402, 410, 412, 413, 415, 416, 417, 418, 419, 421, 423, 424, 425, 427, 429, 430, 432, 433, 434, 435, 436, 437], "onehot": 376, "ones": [198, 292, 334, 376, 406, 418, 423, 437], "ongo": [391, 437], "onli": [8, 10, 18, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 83, 95, 110, 115, 120, 141, 198, 204, 229, 233, 270, 292, 293, 311, 312, 315, 326, 334, 340, 355, 361, 362, 375, 380, 385, 386, 391, 392, 394, 395, 397, 405, 406, 413, 416, 417, 418, 419, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439], "onlin": 400, "onnx": [241, 242, 347, 393, 416, 418, 435], "onnx_input_nam": [242, 394], "onnx_str": [242, 394], "onto": 419, "open": [416, 419], "opentelemetri": [416, 418, 426], "oper": [38, 41, 50, 217, 270, 329, 345, 382, 383, 387, 388, 397, 398, 417, 418, 423, 425, 426, 427, 428, 431, 433], "operator_convert": 394, "opposit": 425, "opt": [416, 426], "optim": [17, 27, 41, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 225, 227, 231, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 326, 376, 378, 379, 382, 383, 391, 392, 397, 400, 402, 406, 418, 420, 422, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437], "optimize_acqf": [41, 180], "optimize_acqf_": 41, "optimize_acqf_discret": 180, "optimize_acqf_mix": 180, "option": [27, 75, 79, 83, 94, 95, 96, 97, 98, 99, 100, 101, 105, 115, 120, 124, 127, 128, 130, 138, 141, 143, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 217, 219, 227, 231, 233, 260, 264, 266, 272, 278, 284, 311, 321, 326, 330, 331, 332, 353, 377, 380, 394, 395, 400, 417, 418, 419, 422, 424, 425, 427, 428, 429, 432, 433, 434, 435, 436, 439], "oracl": 434, "orchestr": [419, 424], "order": [198, 204, 391, 400, 415, 416, 418, 419, 424, 425, 430, 433, 437], "ordin": 436, "org": [258, 302, 332, 394, 416, 421], "organ": 419, "origin": [22, 27, 296, 297, 306, 329, 408, 415, 418, 419, 421, 431, 433, 435], "orthogon": 419, "oserror": 417, "other": [49, 102, 196, 297, 375, 377, 379, 380, 382, 383, 391, 398, 400, 406, 412, 413, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439], "otherwis": [41, 123, 124, 125, 127, 128, 130, 137, 138, 141, 421, 422, 427, 429, 437], "our": [374, 385, 387, 390, 391, 392, 395, 397, 398, 400, 404, 405, 406, 409, 410, 412, 413, 416, 419, 422, 424, 425, 427, 433, 434], "out": [204, 402, 413, 416, 421, 426, 434, 437], "outcom": [162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 376, 416, 430, 436], "output": [27, 105, 328, 329, 353, 374, 412, 413, 417, 418, 420, 434, 435], "output_label": 329, "outputscal": 105, "outputscale_initial_valu": 105, "outputscale_prior": 105, "outsid": [27, 169, 270, 287, 288, 326, 334, 402, 418, 433], "outstand": 421, "over": [27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 397, 415, 418, 422, 424, 427, 437], "overal": [198, 394, 395, 397, 398, 400, 418, 419, 424, 429, 437], "overlap": [57, 58, 382, 383, 425], "overrid": [217, 219, 390, 418], "overridden": [390, 419], "overview": [416, 433], "overwritten": 406, "own": [172, 374, 398, 416, 417, 418, 419, 421, 425, 430], "owner": 421, "ownership": 421, "p": [374, 375, 376, 377, 379, 380, 382, 383, 390, 392, 405, 412, 413, 419, 427, 428, 435, 439], "p1": [432, 433, 434], "p1_json": 433, "p1_via_json": 433, "p2": [432, 433, 434], "p2_json": 433, "p2_via_json": 433, "p3c4": [375, 376, 377], "p_cont": 432, "p_disc": 432, "p_g1_amount": 398, "p_g2_amount": 398, "p_g3_amount": 398, "p_i": 30, "pack": 433, "packag": [83, 135, 290, 385, 387, 388, 417, 418, 419, 430, 434, 435, 439], "page": [394, 416, 418, 419, 427], "pair": [296, 416, 430], "pam": 189, "pamclusteringrecommend": 431, "panda": [48, 205, 223, 224, 229, 320, 337, 374, 375, 376, 377, 382, 383, 385, 391, 392, 397, 398, 402, 405, 406, 412, 413, 418, 425, 426, 430, 432, 433, 434], "panic": 415, "paper": 437, "paper_fil": 437, "parallel": 419, "param": [393, 395, 414], "param1": [432, 434], "param2": [432, 434], "param_bounds_comp": 418, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 61, 72, 83, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 116, 120, 123, 124, 127, 128, 130, 132, 133, 134, 135, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 200, 203, 204, 205, 206, 209, 210, 211, 217, 219, 221, 225, 227, 229, 231, 233, 236, 238, 239, 242, 246, 249, 256, 258, 260, 262, 264, 266, 268, 270, 272, 273, 276, 278, 284, 286, 287, 288, 292, 293, 296, 297, 304, 305, 306, 309, 311, 314, 315, 316, 319, 320, 321, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 344, 349, 350, 351, 353, 355, 357, 358, 361, 362, 364, 374, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 400, 402, 404, 405, 406, 408, 409, 410, 412, 413, 416, 418, 419, 425, 426, 427, 429, 433, 434, 435, 437, 438], "parameter": [153, 154, 155, 156, 157, 158, 159], "parameter_json": 433, "parameter_nam": [196, 198, 204, 406], "parameterencod": [124, 132, 133, 135, 138], "parametr": 425, "parent": 419, "pars": [342, 418], "parser": 418, "part": [13, 22, 27, 36, 66, 173, 196, 198, 204, 326, 395, 406, 409, 410, 412, 413, 418, 419, 421, 422, 423, 424, 425, 431, 432, 433, 439], "parti": [421, 434], "partial": [22, 391, 438], "particl": 437, "particular": [27, 204, 225, 390, 406, 415, 416, 417, 419, 421, 424, 430, 432, 433, 434], "particularli": [311, 424], "partit": [189, 231, 233, 418, 431, 434], "partitionexplain": [81, 84], "pass": [27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 83, 141, 187, 188, 189, 190, 198, 204, 215, 246, 260, 264, 266, 335, 397, 408, 413, 418, 419, 423, 427, 428, 429, 430, 433], "passthrough": [24, 111, 200, 250], "patch": 391, "patent": 421, "path": [353, 376, 397, 418, 419, 426, 439], "pattern": [135, 419, 437], "patternfingerprint": 135, "pd": [27, 229, 296, 297, 333, 374, 375, 376, 377, 382, 383, 385, 391, 392, 397, 398, 402, 405, 406, 412, 413, 418, 425, 427, 430, 432, 433, 434], "pdf": 437, "peek": 433, "pend": [22, 27, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 416, 418, 438], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 418, 423, 424], "per": [227, 375, 376, 377, 380, 397, 402, 405, 412, 413, 418, 430, 432, 434], "percent": [227, 421], "percentag": [180, 292, 328, 380, 385, 386, 387, 388, 397, 402, 408, 413, 431], "perf_count": 390, "perfectli": 433, "perform": [180, 227, 292, 376, 385, 386, 387, 388, 392, 397, 409, 412, 413, 415, 416, 418, 419, 421, 422, 424, 426, 428, 430, 431, 434, 435, 437], "period": 96, "period_length_initial_valu": 96, "period_length_prior": 96, "periodickernel": 418, "perm_inv_constraint": 397, "perman": 438, "permiss": [416, 421], "permut": [49, 52, 53, 297, 418, 425], "permutation_invari": 49, "permutationexplain": [81, 84], "perpetu": 421, "persist": [418, 420, 424, 426, 433, 435], "perspect": 433, "pertain": 421, "pharmacophor": 135, "pharmacophorefingerprint": 135, "phase": [170, 398], "phaseagent1": 398, "phaseagent2": 398, "phcpho": [375, 376, 377, 379, 380], "phenomenon": 424, "philosophi": 433, "physic": [428, 434], "physiochemicalproperti": 135, "physiochemicalpropertiesfingerprint": 135, "pi": [7, 380, 391, 392], "pi_max": 392, "pi_per_iter": 392, "pi_required_fract": 391, "pi_threshold": 391, "pickl": 418, "pictur": 416, "piec": [400, 416, 424, 425], "piecewis": 97, "piecewisepolynomialkernel": 418, "pin": [22, 418], "pin_discret": 22, "pinned_part": 22, "pip": [416, 418, 419, 428, 439], "pipelin": [412, 413, 418, 419], "pival": [375, 376, 377, 379, 380], "pl": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55], "place": [27, 30, 229, 326, 327, 328, 394, 395, 397, 400, 417, 418, 419, 421, 424, 427, 430, 433, 437], "placehold": 299, "plai": [424, 428, 436], "plain": 250, "plainkernelfactori": [90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 246], "plan": [241, 427, 430], "platt": 437, "pleas": [394, 395, 416, 422, 428, 431], "plenti": 428, "plot": [83, 85, 227, 375, 376, 377, 412, 413, 418, 435, 437, 438], "plot_abegin_convert_pipelin": 347, "plot_ebegin_float_doubl": 347, "plot_typ": 83, "plotting_them": 353, "plt": [375, 377, 392], "plu": [229, 416], "plugin": 418, "pm": [5, 380], "png": [375, 377], "po16": 430, "poetri": 418, "point": [6, 13, 17, 22, 26, 27, 83, 138, 162, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 346, 347, 359, 360, 361, 362, 366, 375, 379, 380, 391, 398, 405, 406, 412, 413, 415, 416, 418, 420, 422, 423, 424, 427, 428, 431, 432, 438, 439], "points_per_dim": [392, 405, 406, 412, 413], "polar": [34, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 54, 55, 206, 416, 418, 420, 438, 439], "poli": 392, "polici": 400, "polycollect": 392, "polym": 430, "polynomi": [97, 98], "polynomialkernel": 418, "polytop": 418, "popul": 397, "popular": [428, 430, 435], "posit": [83, 311, 361, 418, 428, 429], "posixpath": 353, "possibl": [143, 204, 205, 206, 225, 311, 326, 377, 391, 392, 397, 402, 416, 418, 421, 424, 425, 426, 427, 430, 431, 432, 433, 434, 436, 437, 439], "post": 430, "post_hook": [311, 390, 391, 392], "posterior": [5, 6, 8, 13, 17, 18, 27, 236, 238, 239, 242, 246, 260, 262, 264, 266, 269, 380, 418, 422, 435], "posterior_mean": [236, 400], "posterior_mod": 236, "posteriorstandarddevi": [400, 422], "postprocess": 320, "potassium": [375, 376, 377, 379, 380], "potenti": [198, 334, 416, 417, 418, 419, 424, 428, 429, 432, 439], "power": [98, 421, 425, 431], "pph3": [375, 376, 377], "pr": [418, 419], "practic": [422, 428, 431], "pre": [143, 168, 249, 393, 417, 418, 419], "pre_hook": [311, 390], "precis": [53, 168, 196, 292, 336, 347, 348, 367, 418, 438], "precomput": 130, "predefin": [353, 424, 431], "predict": [8, 18, 27, 69, 190, 236, 238, 239, 242, 246, 260, 262, 264, 266, 416, 418, 422, 423, 424, 434, 435, 437], "predictor": 268, "prefer": [27, 421, 427, 433], "prefix": 321, "preliminari": 437, "prepar": [392, 419, 421, 439], "preprocess": 418, "presenc": 417, "present": [65, 110, 115, 120, 198, 296, 297, 311, 334, 379, 400, 418, 425, 434, 439], "preset": [246, 253, 256, 258, 418], "pressur": [387, 394, 395, 408, 409, 410, 416, 425], "pretrain": [242, 393, 414], "pretti": 336, "pretty_print_df": [397, 418], "prevent": [214, 215, 311, 417, 418, 419], "previou": [168, 391, 392, 418, 424, 426, 437], "previous": [292, 375, 376, 377, 379, 387, 423, 424], "price": 430, "primari": 424, "primarili": 422, "principl": [397, 400, 435], "print": [229, 336, 355, 375, 376, 377, 379, 380, 382, 383, 387, 390, 394, 395, 397, 398, 400, 404, 405, 406, 408, 409, 410, 416, 418, 432, 439], "print_parameter_names_hook": 390, "printer_inst": 390, "prior": [94, 95, 96, 97, 98, 99, 100, 101, 105, 153, 154, 155, 156, 157, 158, 159, 236, 256, 388, 416, 417, 418], "priori": [425, 433, 437], "privat": [418, 420], "probabilist": 422, "probability_of_improv": 392, "probabilityofimprov": [391, 392], "probabl": [7, 15, 17, 380, 389, 391, 414, 418], "problem": [397, 398, 400, 412, 413, 418, 419, 424, 429, 433], "problemat": [315, 417, 430], "proce": [227, 379, 426], "procedur": [422, 437], "proceed": 437, "process": [27, 88, 244, 245, 246, 247, 251, 252, 253, 255, 256, 257, 258, 333, 361, 380, 390, 397, 400, 412, 413, 418, 419, 422, 423, 424, 425, 426, 427, 430, 433, 437], "prod": 388, "prod_constraint": 388, "prod_i": 429, "produc": [116, 229, 416, 418, 419, 426, 434], "product": [54, 104, 198, 204, 205, 206, 307, 384, 414, 416, 418, 421, 425, 427, 438, 439], "product_paramet": [204, 397, 432], "productkernel": 418, "programmat": 397, "progress": [27, 166, 392, 418, 427], "prohibit": 422, "project": [392, 416, 418, 426], "promin": 421, "promis": [391, 423], "proper": 418, "properli": [22, 402, 417, 432], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 118, 120, 123, 124, 125, 127, 128, 130, 132, 133, 135, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 199, 203, 204, 236, 238, 239, 242, 246, 249, 253, 256, 258, 260, 262, 264, 266, 276, 278, 281, 282, 284, 301, 302, 340, 360, 364, 418, 419, 425, 427], "proport": 413, "propos": 424, "protobuf": 418, "protocol": [161, 162, 240, 248, 315, 418], "prototyp": 420, "provid": [13, 27, 41, 83, 87, 116, 130, 141, 143, 162, 168, 169, 172, 173, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 217, 221, 225, 227, 229, 231, 233, 236, 238, 239, 242, 246, 256, 258, 260, 262, 264, 266, 296, 307, 311, 323, 327, 328, 332, 335, 337, 361, 362, 374, 375, 376, 377, 390, 397, 404, 405, 406, 409, 412, 413, 416, 418, 419, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "prune": [12, 14], "prune_baselin": [12, 14], "pstd": [6, 418, 422], "pubchem": 135, "pubchemfingerprint": 135, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 118, 120, 123, 124, 125, 127, 128, 130, 132, 133, 135, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 199, 203, 204, 221, 236, 238, 239, 240, 242, 246, 248, 249, 253, 256, 258, 260, 262, 264, 266, 276, 278, 281, 282, 284, 299, 301, 302, 340, 360, 364, 418, 419], "publicli": 421, "publish": 418, "pull": [400, 418], "pure": [8, 10, 13, 18, 163, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 198, 233, 241, 362, 405, 418, 438], "purerecommend": [165, 167, 168, 169, 170, 172, 178, 185, 418], "purpos": [13, 390, 391, 394, 400, 416, 417, 419, 421, 427, 433, 439], "push": 419, "put": [397, 400, 426, 430], "puzzl": 416, "py": [258, 385, 387, 388, 418, 426], "py310": [385, 387, 388], "py312": 419, "pyarrow": 418, "pydant": 418, "pydoclint": [418, 419], "pydocstyl": 419, "pylint": 418, "pymatgen": 417, "pypi": [416, 418], "pyplot": [375, 377, 392], "pyproject": 418, "pytest": [418, 419], "python": [26, 302, 312, 376, 395, 409, 410, 416, 417, 418, 419, 424, 426, 433], "python3": [385, 387, 388], "python310": 417, "pytorch": 418, "pyupgrad": 418, "q": [97, 268, 269, 380, 423], "qei": [9, 380, 409, 410, 418], "qkg": [10, 418], "qlogei": [11, 380, 418], "qlogexpectedimprov": [380, 385, 386, 387, 388, 402, 408], "qlognei": [12, 418], "qnegintegratedposteriorvari": 422, "qnei": [14, 418], "qnipv": [13, 418, 422], "qpi": [15, 380], "qsimpleregret": 17, "qsr": [16, 418], "qt": 17, "qthompsonsampl": [400, 418], "quadrat": [101, 374], "qualiti": 419, "quantif": 437, "quantifi": [400, 422, 437], "quantiti": [27, 51, 426, 428, 429, 435, 439], "quantum": 130, "qucb": [18, 380, 422], "queri": [163, 173, 225, 227, 229, 416, 424, 426, 427, 434], "question": [419, 424, 437], "qupperconfidencebound": 422, "qvarucb": 418, "r": [375, 376, 377, 379, 380], "radial": 99, "radiu": [135, 418, 430], "rais": [13, 27, 34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 83, 87, 116, 143, 147, 148, 168, 169, 178, 180, 196, 198, 204, 210, 211, 214, 215, 227, 229, 233, 236, 238, 239, 241, 242, 243, 246, 260, 262, 264, 266, 273, 297, 309, 311, 314, 316, 319, 323, 324, 326, 327, 328, 334, 335, 355, 361, 362, 390, 391, 392, 406, 417, 418, 419, 423, 431], "rand": 394, "random": [13, 100, 196, 198, 227, 229, 231, 265, 266, 326, 360, 361, 362, 374, 375, 376, 377, 380, 391, 392, 394, 398, 400, 413, 416, 418, 422, 430, 431, 434, 439], "random_campaign": 374, "random_forest": [266, 380], "random_se": [227, 231, 391, 434], "randomforestmodel": 395, "randomforestsurrog": [380, 418, 435], "randomli": [193, 374, 376, 422, 428, 431], "randomrecommend": [374, 375, 376, 377, 380, 385, 386, 387, 388, 390, 391, 392, 398, 400, 402, 418, 423, 431], "rang": [123, 124, 125, 127, 128, 130, 137, 138, 141, 276, 326, 327, 374, 382, 383, 385, 386, 387, 388, 392, 397, 400, 402, 404, 405, 406, 413, 416, 425, 432, 433, 434, 436, 439], "rank": 436, "rare": 418, "rastrigin": [382, 383, 405, 406], "rate": [154, 236, 400], "rather": [408, 417, 422, 433], "ration": 101, "ravel": [412, 413], "raw": [180, 433], "rbf": 99, "rbfkernel": 418, "rdf": 135, "rdffingerprint": 135, "rdkit": [135, 385, 387, 388, 418, 425, 430], "rdkit2ddescriptor": [135, 376, 385, 387, 388, 418], "rdkit2ddescriptorsfingerprint": 135, "rdkitfingerprint": 135, "re": [391, 405, 406, 419, 431], "reach": [286, 288, 402], "reachabl": 426, "reactant": [428, 430], "reaction": [376, 379, 416, 425, 428, 430, 437], "reactor": [423, 437], "reactora": 437, "reactorb": 437, "reactorc": 437, "read": [130, 198, 353, 376, 379, 416, 418, 419], "read_excel": [375, 376, 377, 391], "readabl": [203, 336, 344, 408, 418, 420, 421, 433], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 227, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 419, 423], "readm": [418, 419], "reagent": [425, 430], "real": [340, 416, 424, 436], "realist": 434, "realiz": [225, 434], "reason": [38, 187, 188, 189, 190, 376, 405, 418, 421, 422, 423, 425, 426, 430, 434], "reassembl": 433, "rebas": 419, "rec": [385, 386, 387, 388, 402, 423, 424], "rec_finish": 423, "rec_next": 423, "rec_pend": 423, "receiv": [421, 426, 433], "recip": 419, "recipi": 421, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 66, 71, 72, 83, 128, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 225, 227, 240, 241, 292, 326, 328, 374, 375, 376, 377, 378, 382, 383, 385, 386, 387, 388, 390, 391, 392, 398, 400, 402, 409, 410, 412, 413, 414, 415, 416, 418, 419, 422, 426, 428, 430, 434, 435, 437, 438, 439], "recommendation_orig": 408, "recommendation_recr": 408, "recommended_arm_idx": 400, "recommender_with_hook": 391, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 83, 165, 167, 168, 169, 170, 175, 240, 390, 392, 415, 418, 423], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 196, 198, 204, 221, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 340, 416, 424, 426, 433], "record": [27, 292, 293, 416, 426, 437], "recreat": [253, 408, 433], "recreate_model": 395, "recurs": [165, 167, 168, 169, 170, 304, 305], "redesign": 418, "redistribut": 421, "reduc": [141, 392, 400, 412, 413, 427, 430], "reduct": 438, "ref": 416, "refactor": 418, "refer": [225, 258, 292, 310, 326, 334, 347, 375, 376, 377, 380, 382, 383, 385, 386, 387, 388, 390, 392, 394, 395, 397, 402, 405, 406, 408, 417, 418, 424, 428, 429, 430, 431, 432, 433, 434, 435, 437], "referenc": 419, "refin": [391, 416, 418, 424, 427], "reflect": [172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 392, 418, 419, 422, 425, 430], "regard": [30, 36, 382, 383, 419, 421], "regim": [418, 428], "regist": [311, 389, 391], "register_custom_architectur": 418, "register_hook": [389, 390, 391, 392, 418], "registr": 418, "regress": 260, "regressor": 394, "regret": [16, 17], "regroup": 418, "regular": [17, 270, 404, 417, 418, 423, 437], "reinstal": 416, "rel": [227, 327, 425, 429], "relat": [51, 110, 115, 117, 120, 131, 198, 216, 280, 295, 406, 412, 413, 415, 416, 418, 424, 425, 426, 437], "relationship": [412, 413, 416, 419, 429, 437], "relative_perc": 328, "releas": [416, 418], "relev": [49, 83, 229, 335, 386, 397, 418, 419, 424, 425, 427, 437, 439], "reli": [417, 418], "reliabl": 430, "remain": [52, 170, 233, 287, 374, 380, 385, 386, 387, 388, 397, 400, 402, 406, 408, 412, 413, 421, 430, 433, 434], "remain_switch": [170, 418], "remaind": 362, "remind": 418, "remot": 419, "remov": [48, 51, 52, 198, 204, 397, 419, 425, 432], "renam": [376, 412, 413, 418, 419], "render": [83, 394], "reoccur": 437, "reorder": 418, "reorgan": 418, "repeat": [400, 418, 419, 423, 424], "repetit": [231, 380, 391], "rephras": 425, "replac": [405, 406, 418, 419], "replic": 433, "repo": 418, "report": [162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 400, 417], "repositori": [376, 416, 419], "repr": 394, "repres": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 103, 104, 130, 198, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 323, 337, 340, 344, 361, 374, 397, 398, 400, 409, 410, 416, 418, 421, 424, 430, 432, 434, 439], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 203, 204, 221, 236, 238, 239, 240, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 316, 318, 323, 326, 336, 340, 355, 385, 386, 387, 388, 394, 396, 402, 408, 418, 423, 424, 430, 433, 434, 438, 439], "reproduc": [391, 400, 418, 421, 438], "reproduct": 421, "request": [27, 71, 72, 116, 168, 169, 170, 211, 249, 290, 361, 362, 415, 418, 423, 424, 427], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 40, 41, 47, 70, 170, 204, 273, 311, 379, 390, 391, 394, 398, 400, 402, 405, 409, 415, 416, 417, 418, 419, 421, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 436, 437, 439], "rerun": 394, "reserv": [416, 419], "reset_index": 412, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 386, 388, 397, 433], "resolv": 320, "resort": [270, 419, 433, 439], "resource_track": 417, "resp": [199, 377, 406], "respect": [27, 180, 199, 227, 231, 291, 296, 326, 397, 398, 419, 424, 425, 427, 428, 429, 433, 434, 435, 436, 439], "respond": 415, "respons": [165, 167, 168, 169, 170, 421, 424, 431], "restart": [168, 180], "restor": 433, "restr": 17, "restrain": 430, "restrict": [198, 204, 225, 231, 233, 385, 398, 418, 427, 434, 437, 438], "result": [8, 10, 18, 27, 141, 204, 227, 326, 333, 375, 376, 377, 379, 394, 395, 397, 398, 400, 402, 404, 412, 413, 416, 418, 420, 421, 422, 424, 425, 426, 428, 430, 431, 433, 434, 437, 438, 439], "result_baselin": [412, 413], "result_fract": 413, "results_interrupt": 391, "results_uninterrupt": 391, "retain": [421, 425], "retrain": [241, 242, 435], "retriev": [198, 225, 303, 304, 305, 319, 419, 434], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 83, 86, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 110, 111, 113, 115, 116, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 143, 144, 146, 147, 148, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 182, 185, 187, 188, 189, 190, 192, 193, 196, 198, 200, 201, 204, 205, 206, 207, 209, 210, 211, 214, 215, 217, 218, 219, 221, 223, 224, 227, 229, 231, 233, 236, 238, 239, 240, 242, 243, 246, 249, 250, 254, 260, 262, 264, 266, 268, 269, 270, 272, 273, 276, 278, 284, 286, 287, 288, 290, 291, 292, 293, 296, 297, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 344, 349, 350, 351, 353, 354, 355, 361, 362, 364, 369, 370, 371, 372, 374, 385, 391, 392, 394, 397, 400, 412, 418, 424, 425, 434, 435, 439], "return_std": 394, "reus": [170, 418], "reuse_last": 168, "reveal": [392, 398, 413], "review": 419, "revis": [418, 421], "reward": 400, "rework": 418, "rewrit": 418, "rff": 100, "rffkernel": 418, "rh": [41, 43, 44, 382, 383, 398, 425], "right": [41, 159, 334, 340, 375, 377, 386, 400, 416, 417, 419, 421, 425, 427, 429, 430, 436], "right_df": 334, "rihana": 420, "rim": 420, "risk": [417, 421, 424], "roam": 417, "robust": [416, 418, 437], "robustli": 270, "role": [418, 419, 424, 428, 429, 434, 436, 438], "room": [392, 424], "root": [376, 416, 419, 425], "round": [336, 382, 394, 395, 425], "roundtrip": [418, 433], "rout": 433, "row": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 116, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 229, 292, 296, 297, 327, 333, 334, 336, 351, 375, 377, 385, 386, 387, 388, 397, 398, 402, 408, 418, 424, 427, 432, 434], "rowei": 437, "roya": 420, "royalti": 421, "rq": 101, "rqkernel": 418, "ruff": [418, 419], "rule": [390, 418], "run": [227, 231, 375, 376, 377, 391, 392, 412, 413, 416, 417, 418, 419, 424, 427, 433, 434, 439], "run_full_initial_data": 375, "run_impute_mod": 377, "runner": [385, 387, 388], "runtim": [347, 417], "runtimeerror": [27, 168, 390], "rv": 400, "s3": 418, "s41586": [258, 332], "safe": [418, 419, 424], "safeti": 311, "sai": 425, "said": 419, "sake": 397, "same": [51, 170, 204, 210, 229, 236, 238, 239, 242, 246, 260, 262, 264, 266, 306, 380, 391, 394, 395, 397, 400, 408, 417, 418, 425, 426, 427, 433, 434, 437], "sampl": [10, 13, 17, 40, 180, 192, 193, 196, 293, 359, 360, 361, 362, 375, 380, 385, 386, 387, 388, 400, 402, 404, 408, 413, 416, 418, 420, 428, 438], "sample_from_full_factori": [196, 418], "sample_inactive_paramet": 40, "sample_uniform": [196, 404, 418, 434], "sampler": [380, 385, 386, 387, 388, 402, 408], "samples_full_factori": [196, 418], "samples_random": [196, 418], "sampling_algorithm": [360, 422], "sampling_fract": [13, 422], "sampling_method": [13, 422], "sampling_n_point": [13, 422], "sampling_percentag": [180, 431], "satisfi": [36, 37, 38, 204, 382, 383, 397], "save": [353, 375, 377, 394, 418, 434], "savefig": [375, 377], "scalar": [115, 402, 418, 429, 433], "scale": [105, 155, 156, 157, 158, 159, 364, 402, 412, 418, 422, 429], "scalekernel": 418, "scaler": 418, "scatter": [83, 85], "scenario": [233, 374, 375, 376, 377, 391, 397, 412, 413, 423, 425, 429, 437, 438, 439], "scene": [429, 434], "schema": 424, "schembl15068049": [375, 376, 377], "scheme": 418, "scienc": [416, 420], "scientif": [418, 437], "scikit": [135, 416, 418, 420, 430], "scipi": [351, 392, 400, 418], "scope": 374, "screen": [306, 437], "script": [320, 417, 418, 426, 439], "seaborn": [374, 375, 376, 377, 391, 412, 413], "seamlessli": 433, "search": [13, 22, 27, 34, 48, 51, 61, 66, 72, 123, 124, 125, 127, 128, 130, 137, 138, 141, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 208, 227, 231, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 292, 334, 335, 374, 377, 379, 381, 384, 385, 386, 387, 388, 390, 391, 392, 400, 402, 403, 408, 413, 418, 420, 423, 424, 425, 426, 427, 428, 431, 433, 434, 438], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 83, 123, 124, 125, 127, 128, 130, 137, 138, 141, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 199, 203, 204, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 374, 376, 379, 390, 391, 392, 394, 395, 397, 398, 400, 404, 408, 409, 410, 412, 414, 416, 418, 424, 425, 426, 427, 428, 430, 432, 433, 434, 439], "searchspace1": 404, "searchspace2": 404, "searchspace3": 404, "searchspace_ful": 427, "searchspace_json": 433, "searchspace_reduc": 427, "searchspacetyp": [172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 198, 380, 385, 386, 387, 388, 391, 392, 402, 408, 432], "secfp": 135, "secfpfingerprint": 135, "second": [333, 349, 351, 394, 395, 402, 410, 412, 425, 426, 428], "secondari": [416, 426], "section": [416, 418, 419, 421, 433], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 27, 30, 31, 32, 33, 34, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 149, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 203, 204, 227, 231, 233, 236, 238, 239, 240, 242, 246, 249, 256, 258, 260, 262, 264, 266, 276, 278, 284, 289, 309, 315, 328, 333, 340, 364, 375, 376, 377, 382, 383, 390, 391, 395, 398, 406, 415, 416, 419, 424, 426, 427, 428, 429, 430, 433, 434, 438], "seed": [227, 231, 357, 358, 391, 392, 400, 416, 418, 439], "seek": 402, "seem": [347, 410, 417], "seen": 422, "select": [6, 36, 37, 38, 63, 70, 165, 167, 168, 169, 170, 173, 190, 192, 236, 238, 239, 242, 246, 260, 262, 264, 266, 287, 333, 361, 380, 386, 387, 397, 398, 400, 406, 416, 418, 422, 424, 425, 428, 430, 431, 433, 435], "select_recommend": [165, 167, 168, 169, 170, 418], "self": [311, 324, 369, 370, 371, 372, 390, 391, 392, 400, 419], "sell": 421, "semant": [418, 433], "sens": [53, 311, 315, 333, 425, 430], "sent": 421, "sentinel": [300, 301], "separ": [231, 233, 270, 309, 364, 365, 392, 415, 418, 419, 421, 433], "sequenc": [27, 41, 115, 147, 168, 169, 196, 198, 204, 205, 206, 209, 292, 296, 297, 311, 312, 321, 324, 329, 334, 335, 351, 429, 431], "sequenti": [167, 168, 169, 170, 180, 380, 385, 386, 387, 388, 402, 408, 418, 431], "sequential_continu": [180, 431], "sequential_greedy_x": 418, "sequentialgreedyrecommend": 418, "sequentialmetarecommend": [169, 431], "sequentialstrategi": 418, "seri": [27, 36, 37, 38, 48, 124, 127, 128, 130, 138, 141, 276, 278, 284, 385, 397, 418, 425, 427], "serial": [169, 204, 221, 293, 394, 414, 417, 418, 419, 425, 431, 438], "serializ": [416, 425, 431], "serialize_datafram": 433, "serialized_df": 223, "serializetostr": 394, "serialmixin": [20, 27, 31, 36, 92, 110, 125, 151, 165, 196, 198, 204, 239, 249, 276, 278, 284, 340, 418], "serv": [233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 334, 412, 413, 424, 425, 430], "servic": 421, "session": [242, 426, 433], "set": [27, 30, 38, 40, 51, 53, 57, 58, 83, 87, 141, 162, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 227, 231, 253, 291, 326, 332, 333, 353, 357, 358, 375, 376, 377, 378, 380, 385, 387, 390, 395, 396, 397, 398, 400, 402, 406, 415, 416, 418, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 437, 439], "set_box_aspect": 392, "set_dash": 391, "set_random_se": [392, 400, 439], "set_size_inch": [375, 377], "set_x_pend": 22, "set_xlabel": 392, "set_xtick": 392, "set_xticklabel": 392, "set_ylabel": 392, "set_ylim": 392, "set_zlabel": 392, "setpoint": 138, "setup": [227, 391, 425, 434, 439], "sever": [143, 163, 374, 376, 380, 391, 394, 400, 402, 404, 413, 416, 418, 419, 423, 425, 426, 427, 428, 429, 430, 432, 433, 434, 437, 439], "sh": 428, "shall": [168, 328, 421, 429], "shap": [83, 416, 418, 420, 435, 438], "shap_valu": 435, "shape": [17, 196, 203, 282, 286, 288, 361, 432, 439], "shapinsight": [81, 82, 84, 85, 418, 428], "shaplei": 83, "share": [418, 421, 437], "shield": [258, 332, 376, 416, 430], "shift": [8, 18, 412], "shifted_hartmann": 412, "ship": [365, 426, 433], "shm": 417, "short": 419, "shortcut": [204, 432, 433], "shorten": [418, 419], "shot": 437, "should": [27, 49, 83, 128, 141, 170, 219, 231, 281, 296, 297, 326, 328, 331, 332, 334, 336, 339, 340, 341, 349, 353, 385, 387, 391, 394, 397, 398, 406, 410, 416, 418, 419, 423, 424, 425, 432, 434, 435, 437, 439], "show": [83, 375, 376, 377, 379, 380, 385, 386, 387, 394, 395, 397, 400, 406, 408, 409, 410, 412, 413, 425, 428], "showcas": 431, "shown": [391, 400, 413, 418], "shrink": 392, "shutdown": 417, "side": [41, 287, 418], "sigma": [156, 157, 158, 159, 286, 402, 420], "signal": [60, 429], "signatur": [77, 273, 309, 311, 392, 418, 419, 425, 433], "significantli": [204, 400, 412, 413], "silenc": 419, "silent": [418, 425], "similar": [169, 417, 425, 426, 428, 430, 431, 432, 433, 437, 439], "similarli": 430, "simpl": [16, 17, 302, 376, 390, 391, 398, 416, 418, 431, 434, 436, 437], "simpler": [419, 433], "simplest": 432, "simplex": [204, 438], "simplex_paramet": [204, 397, 432], "simpli": [315, 390, 391, 419, 425, 427, 430, 431, 432, 433, 436, 437], "simplic": 311, "simplifi": 419, "simul": [73, 328, 387, 392, 416, 418, 437, 438], "simulate_experi": [231, 233, 434], "simulate_scenario": [233, 374, 375, 376, 377, 391, 412, 413, 434], "simulate_transfer_learn": [412, 434], "simulationresult": 400, "simultan": 429, "sinc": [53, 198, 241, 311, 375, 382, 383, 395, 405, 408, 409, 410, 412, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 437], "singer": 437, "singl": [17, 27, 36, 49, 83, 107, 120, 196, 198, 204, 227, 276, 278, 284, 340, 348, 355, 361, 367, 375, 376, 377, 386, 391, 397, 402, 412, 413, 416, 418, 425, 426, 427, 428, 429, 430, 432, 437, 438], "single_lin": 355, "singledispatch": 342, "singletargetobject": [27, 276, 278, 284, 375, 376, 377, 379, 380, 385, 386, 387, 388, 391, 394, 395, 408, 409, 410, 416, 418, 435, 438], "site": [385, 387, 388, 417], "situat": [385, 387, 397, 417, 419, 423, 425, 429, 430, 433, 434, 437], "six": [397, 398], "size": [17, 90, 91, 92, 95, 97, 99, 100, 101, 168, 170, 198, 203, 204, 293, 344, 392, 394, 400, 405, 406, 412, 413, 424, 433, 434, 437, 439], "sk": 394, "skeleton": 418, "skfp": 135, "skicit": 418, "skin": 434, "skip": [201, 207, 418, 424], "skl2onnx": 394, "sklearn": [190, 347, 394, 417], "sklearnclusteringrecommend": [187, 188, 189, 418, 423], "slightli": [225, 376, 397, 434], "slot": [396, 400, 414, 418, 425], "slot1_amount": 397, "slot1_label": 397, "slot2_amount": 397, "slot2_label": 397, "slot3_amount": 397, "slot3_label": 397, "slow": [385, 387, 388, 432], "slowest": 418, "small": [294, 298, 382, 397, 412, 413, 418, 422, 430], "smaller": [27, 400, 424, 437], "smallest": [196, 432], "smart": 416, "smartli": 397, "smile": [141, 318, 320, 321, 416, 430], "smoke": 418, "smoke_test": [353, 374, 375, 376, 377, 383, 385, 386, 388, 391, 392, 400, 412, 413], "smooth": [95, 97, 159], "smoothedboxprior": 418, "smoother": 95, "sn": [374, 375, 376, 377, 391, 412, 413], "snippet": 426, "so": [27, 227, 241, 333, 377, 391, 397, 400, 405, 406, 416, 417, 424, 425, 426, 427, 429, 430, 431, 433, 436], "softwar": [416, 421], "sola": 420, "sole": 421, "solut": [424, 432, 433, 437], "solv": [241, 386, 387, 397, 400], "solv_rdkit2ddesc": 387, "solvent": [375, 376, 377, 379, 380, 385, 386, 387, 388, 391, 395, 397, 398, 409, 410, 416, 425, 430], "solvent1": [397, 398], "solvent2": [397, 398], "solvent3": 397, "solvent4": 397, "solvent5": 397, "solvent8": 397, "solvent9": 397, "solvent_1": 425, "solvent_2": 425, "solvent_3": 425, "solvent_data": 391, "solvent_encoding1": 425, "solvent_encoding2": 425, "solvent_mordred_enc": 425, "solvent_rdkit2dd": [385, 388], "solvent_rdkit_enc": 425, "solvent_smil": 391, "solver": 434, "some": [49, 334, 347, 375, 376, 377, 380, 385, 386, 387, 388, 391, 392, 394, 395, 397, 398, 404, 405, 406, 408, 413, 423, 425, 426, 430, 431, 433, 434, 435, 439], "someth": 410, "sometim": [425, 434], "somewhat": 426, "somewher": 424, "soon": [416, 424, 431], "sophist": [418, 427, 433], "sort": 144, "sourabh": 420, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 86, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 110, 111, 113, 115, 116, 118, 120, 123, 124, 125, 127, 128, 130, 132, 133, 134, 135, 137, 138, 141, 143, 144, 146, 147, 148, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 182, 185, 187, 188, 189, 190, 192, 193, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 217, 218, 219, 221, 223, 224, 227, 229, 231, 233, 236, 238, 239, 240, 242, 243, 246, 248, 249, 250, 253, 254, 256, 258, 260, 262, 264, 266, 268, 269, 270, 272, 273, 276, 278, 281, 282, 284, 286, 287, 288, 290, 291, 292, 293, 296, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 349, 350, 351, 353, 354, 355, 357, 358, 360, 361, 362, 364, 372, 416, 417, 418, 419, 421], "space": [10, 13, 21, 22, 27, 34, 41, 48, 51, 61, 66, 68, 72, 123, 124, 125, 127, 128, 130, 137, 138, 141, 162, 171, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 207, 208, 227, 231, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 292, 334, 361, 374, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 400, 402, 403, 405, 408, 413, 414, 418, 420, 423, 425, 426, 427, 428, 430, 431, 433, 434, 438], "span": [123, 124, 125, 127, 128, 130, 137, 138, 141, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 292, 390, 400, 404, 428], "speak": 437, "spec": [201, 207, 218], "special": [170, 416, 417, 421, 422, 427, 437, 439], "specif": [88, 143, 149, 190, 198, 201, 214, 231, 270, 303, 390, 391, 405, 416, 419, 424, 425, 427, 430, 431, 432, 433, 434, 435, 436, 437], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 49, 76, 87, 130, 141, 143, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 217, 218, 227, 229, 231, 240, 286, 287, 288, 296, 310, 319, 326, 329, 335, 361, 362, 376, 380, 382, 394, 395, 400, 402, 412, 416, 417, 418, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437], "speed": [204, 385, 387, 388, 412, 413, 426, 432], "speed_fast": 432, "speed_norm": 432, "speed_slow": 432, "speedup": 437, "spell": 419, "spellcheck": 418, "sphinx": [418, 419], "split": [172, 423], "sporad": 418, "spread": 436, "sqrt": 425, "squar": [400, 425], "squash": 419, "stabil": [418, 426], "stabl": [88, 149, 289], "stage": [424, 425, 433], "stand": 418, "standard": [6, 270, 394, 418, 430], "star": 397, "start": [227, 374, 390, 391, 392, 398, 400, 417, 418, 423, 430, 431, 433, 434, 437], "startup": 418, "stat": [290, 392, 398, 400], "state": [165, 167, 168, 169, 170, 391, 397, 415, 418, 421, 424, 427], "stateless": [400, 415, 418, 427], "statement": [336, 405, 416, 421], "static": [198, 204, 246, 416, 419, 437], "statist": [293, 413, 416, 426], "statu": 424, "std_threshold": 270, "stem": [417, 437], "step": [201, 207, 227, 397, 400, 415, 416, 419, 424, 429, 433, 435], "sterl": 420, "steven": 376, "still": [143, 326, 391, 400, 423, 425, 426, 428, 430, 437, 439], "stop": [389, 414, 418, 419], "stop_on_pi": 391, "stoppag": 421, "storag": [424, 426, 433], "store": [22, 125, 270, 276, 392, 397, 400, 416, 418, 424, 439], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 116, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 143, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 178, 180, 187, 188, 189, 190, 196, 198, 203, 204, 217, 221, 231, 233, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 276, 278, 279, 284, 286, 287, 288, 290, 293, 296, 297, 303, 309, 310, 316, 318, 320, 321, 323, 326, 329, 331, 332, 336, 340, 344, 350, 353, 354, 355, 395, 400, 409, 410, 412, 413], "straightforward": [436, 437], "strategi": [13, 180, 198, 225, 374, 400, 418], "stream": [307, 418, 426], "streamingsequentialmetarecommend": [168, 431], "streamingsequentialstrategi": 418, "streamlin": 419, "streamlit": [416, 418], "streibel": 420, "strict": 309, "strictli": [395, 409, 410], "stride": 382, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 140, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 196, 198, 204, 221, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 316, 320, 321, 323, 324, 331, 340, 355, 394, 408, 418, 424, 425, 430, 436, 438], "strip": [227, 377], "strong": 418, "strongli": 424, "strtobool": [418, 426], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 45, 113, 217, 416, 417, 418, 419, 420, 424, 430, 433], "studi": [163, 416, 428, 431, 438], "style": [107, 412, 418, 419], "sub": [190, 418, 428, 433], "subclass": [76, 217, 303, 305, 315, 380, 418, 419, 431, 433], "subfold": 426, "subgraph": 430, "subgroup": 398, "subject": 421, "sublicens": 421, "submiss": [418, 421], "submit": [22, 290, 292, 416, 419, 421], "subpackag": [418, 419, 434], "subselectioncondit": [386, 387, 418, 427, 438], "subsequ": [170, 198, 204, 231, 320, 415, 421, 424, 433, 435], "subset": [27, 110, 115, 120, 141, 198, 306, 335, 361, 424, 425, 427], "subspac": [22, 172, 180, 195, 196, 198, 200, 202, 204, 382, 385, 386, 387, 388, 402, 404, 406, 408, 418, 431, 433, 438, 439], "subspace_json": 433, "subspacecontinu": [27, 123, 137, 198, 200, 404, 418, 432], "subspacediscret": [27, 124, 127, 128, 130, 138, 141, 198, 200, 203, 385, 386, 387, 388, 397, 402, 408, 418, 432, 433, 439], "substanc": [135, 141, 319, 376, 379, 385, 387, 388, 398, 418, 425, 428, 430, 437], "substance_12": 425, "substance_3": 425, "substance_43": 425, "substance_data": 418, "substance_encod": 376, "substanceencod": [141, 319, 321, 385, 386, 387, 388, 418, 430], "substanceparamet": [375, 376, 377, 379, 380, 385, 386, 387, 388, 391, 395, 397, 409, 410, 416, 418, 425, 426, 428, 432, 438], "substanti": [141, 439], "substrat": 437, "subtyp": 433, "success": [278, 361, 400, 433], "success_valu": 278, "suffic": 419, "suffici": [391, 432, 433], "suggest": [428, 434], "suit": 419, "suitabl": [190, 204, 227, 316, 419, 422, 424, 430, 434, 435, 437], "sum": [55, 103, 204, 374, 384, 385, 386, 387, 391, 397, 398, 400, 414, 425, 429, 432], "sum_": [425, 429], "sum_constraint": 397, "sum_constraint_1": 388, "sum_constraint_2": 388, "sum_toler": 397, "summar": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 123, 124, 125, 127, 128, 130, 137, 138, 141, 276, 278, 284], "summari": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 123, 124, 125, 127, 128, 130, 137, 138, 141, 276, 278, 284, 418, 419], "superior": 422, "supersed": 421, "support": [10, 81, 82, 83, 84, 85, 169, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 347, 380, 385, 386, 387, 388, 391, 392, 394, 397, 402, 408, 418, 419, 420, 421, 425, 428, 430, 431, 432, 434, 435], "supports_transfer_learn": [236, 238, 239, 242, 246, 260, 262, 264, 266, 435], "suppos": [292, 425], "sure": [397, 404, 416, 419], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 67, 83, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 178, 180, 187, 188, 189, 190, 236, 238, 240, 242, 246, 248, 249, 253, 256, 258, 260, 262, 264, 266, 385, 386, 387, 388, 392, 400, 402, 408, 414, 416, 418, 420, 425, 428, 430, 431, 437, 438], "surrogate_model": [178, 180, 380, 392, 394, 395, 400, 409, 410, 418], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 83, 178, 180, 239, 418], "svg": 353, "sw": 386, "swiss": 420, "switch": [49, 166, 169, 170, 270, 380, 385, 386, 387, 388, 400, 402, 408, 416, 418, 425, 431], "switch1": 386, "switch2": 386, "switch2_left": 386, "switch2_right": 386, "switch_1": 425, "switch_2": 425, "switch_aft": [170, 409, 410, 431], "switzerland": 420, "sy": 417, "symmetri": 425, "syntax": [416, 418], "synthet": [382, 383, 392, 412, 413], "system": [376, 400, 416, 417, 421, 426, 434, 437], "t": [268, 269, 308, 316, 375, 376, 377, 379, 380, 387, 392, 412, 413, 415, 427, 433, 434], "t1": [433, 434], "t2": 433, "t3": 433, "t_1": 429, "t_2": 429, "t_3": 429, "t_i": 429, "tabl": [336, 418, 425, 428], "tabular": 434, "tag": [416, 418, 433], "tailor": 424, "take": [45, 95, 124, 138, 143, 236, 238, 239, 242, 246, 256, 260, 262, 264, 266, 279, 390, 397, 418, 423, 424, 425, 429, 430, 431, 437], "taken": [168, 391, 418, 424, 427, 429], "tantamount": 422, "target": [27, 68, 107, 110, 111, 115, 119, 120, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 225, 227, 228, 229, 236, 238, 239, 242, 246, 260, 262, 264, 266, 270, 278, 281, 282, 284, 311, 326, 329, 335, 349, 350, 356, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 391, 392, 394, 395, 400, 405, 406, 408, 409, 410, 412, 413, 414, 416, 418, 423, 424, 426, 428, 433, 434, 435, 438], "target_1": [386, 387, 388, 402, 429, 436], "target_2": [402, 429, 436], "target_3": [402, 429], "target_3a": 436, "target_3b": 436, "target_cumbest": [374, 412, 413], "target_max": 424, "target_transform": 402, "targetmod": [284, 433, 436], "targetnam": 227, "targettransform": [284, 418, 436], "task": [128, 198, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 276, 278, 284, 400, 418, 424, 431, 433, 434, 437], "task_idx": [198, 418], "task_param": [412, 413, 434], "task_paramet": 433, "task_parameter_json": 433, "task_parameter_reconstruct": 433, "taskparamet": [211, 412, 413, 418, 427, 433, 434, 438], "tb": 439, "technic": [204, 423, 434, 437], "techniqu": [190, 431], "technologi": 420, "telemetri": [418, 420, 438], "tell": 291, "temp": [385, 387, 420], "temp_c": [375, 376, 377, 391], "temperatur": [375, 377, 379, 380, 385, 387, 390, 394, 395, 408, 425, 430, 432, 437], "temperature_resolut": 385, "temperature_valu": 391, "temporari": [106, 112, 181, 198, 358, 391, 418, 426, 433], "temporarili": [418, 439], "temporary_se": 439, "tempt": 437, "tenac": 418, "tend": 392, "tensor": [22, 41, 236, 268, 269, 329, 337, 340, 364, 366, 412, 418], "term": [98, 225, 391, 400, 419, 421, 424, 428, 432, 433, 434, 437], "termin": [391, 392, 417, 421], "terminologi": 438, "tert": [375, 376, 377, 379, 380], "test": [204, 227, 242, 326, 400, 412, 413, 416, 417, 418, 419, 424, 428, 434, 439], "test_funct": [382, 383, 392, 405, 406, 412, 413], "test_scenario": [375, 377], "testabl": [73, 227], "testfunct": [382, 383, 405, 406], "testfunctionclass": [382, 383, 405, 406], "text": [30, 354, 394, 421, 425, 426, 429], "th": [297, 425], "than": [27, 58, 72, 138, 168, 169, 170, 196, 198, 211, 297, 315, 355, 362, 376, 387, 391, 398, 422, 425, 426, 428, 430, 433], "thei": [143, 163, 173, 287, 331, 335, 380, 388, 391, 397, 400, 404, 418, 419, 423, 424, 425, 428, 430, 431, 432, 433, 436, 437, 439], "them": [34, 256, 327, 353, 380, 416, 417, 418, 419, 423, 425, 426, 427, 428, 430, 431, 433, 437], "theme": [353, 418], "theori": 421, "therebi": 204, "therefor": [170, 236, 238, 239, 242, 246, 260, 262, 264, 266, 380, 417, 424, 433, 437], "therein": 418, "thereof": 421, "thf": 425, "thi": [10, 13, 17, 27, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 123, 124, 125, 127, 128, 130, 137, 138, 141, 143, 165, 167, 168, 169, 170, 172, 180, 187, 188, 189, 190, 196, 198, 204, 225, 229, 231, 233, 236, 238, 239, 240, 241, 242, 246, 256, 260, 262, 264, 266, 270, 293, 296, 311, 312, 315, 320, 326, 328, 330, 332, 334, 336, 353, 374, 390, 391, 392, 394, 395, 397, 398, 400, 404, 408, 409, 410, 412, 413, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439], "think": [400, 430], "third": [402, 421, 434], "thompson": [17, 420], "thomson": 17, "those": [143, 170, 172, 225, 361, 380, 417, 421, 425, 434], "though": 437, "three": [376, 397, 398, 402, 416, 424, 425, 428, 429, 431, 432, 437], "threshold": [38, 130, 141, 170, 270, 332, 382, 387, 388, 391, 397, 418, 425, 430], "thresholdcondit": [54, 55, 382, 387, 388, 397, 438], "through": [27, 198, 286, 296, 326, 335, 395, 397, 400, 402, 416, 418, 419, 421, 425, 433, 434, 438], "throughout": 170, "throw": [320, 425, 430], "thrown": [229, 377, 391, 409, 417, 429], "thu": [180, 311, 335, 375, 376, 382, 383, 385, 386, 387, 388, 394, 395, 397, 400, 402, 405, 406, 408, 417, 419, 424, 426, 427, 430, 431, 433, 434, 437, 439], "tick": 392, "time": [10, 180, 293, 362, 383, 390, 397, 400, 416, 418, 423, 424, 425, 427, 430, 433, 434, 439], "timeout": [418, 426], "timer": 390, "titl": 421, "tl": 412, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 41, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 391, 392, 418], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 196, 198, 204, 221, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 340], "to_factori": [90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105], "to_fram": 374, "to_gpytorch": [90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 151, 153, 154, 155, 156, 157, 158, 159, 418], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 196, 198, 204, 221, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 276, 278, 284, 340, 394, 395, 408, 424, 433], "to_keep": 333, "to_ndarrai": 340, "to_object": [276, 278, 284, 374, 382, 383, 392, 400, 405, 406, 412, 413, 429, 434], "to_polar": [36, 37, 38], "to_searchspac": [123, 124, 125, 127, 128, 130, 137, 138, 141, 196, 204, 400, 404, 418, 427], "to_subspac": [123, 124, 127, 128, 130, 137, 138, 141, 418], "to_tensor": [340, 391, 392, 394, 418], "to_tupl": 340, "togeth": [34, 62, 297, 380, 400, 406, 416, 418], "toggl": 27, "toggle_discrete_candid": [27, 418, 427], "toler": [27, 38, 138, 204, 292, 334, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 391, 394, 395, 397, 402, 405, 406, 408, 409, 410, 416, 418, 425, 430], "tolist": 382, "toluen": 430, "toml": 418, "too": [382, 434, 437], "tool": [317, 418, 433], "toolbox": 416, "top": [418, 419], "topic": 424, "topolog": 430, "topologicaltors": 135, "topologicaltorsionfingerprint": 135, "torch": [329, 340, 391, 392, 394, 412, 418], "toronto": 420, "tort": 421, "total": [169, 170, 361, 397, 398, 400, 432], "total_bas": 398, "total_phase_ag": 398, "toward": [8, 18, 153, 326, 425], "towel": 415, "tox": [385, 387, 388, 416, 418, 419], "tracebackexcept": 417, "track": [162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 204, 391, 421, 427], "trade": [8, 18, 421], "trademark": 421, "tradit": [376, 396, 397, 414, 416, 418], "train": [69, 83, 162, 168, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 233, 236, 238, 239, 240, 241, 242, 246, 260, 262, 264, 266, 270, 393, 412, 413, 418, 434], "train_i": 394, "train_x": 394, "training_funct": 413, "trajectori": [225, 374, 391, 400, 424, 434], "transfer": [232, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 380, 385, 386, 387, 388, 402, 408, 412, 414, 416, 418, 421, 430, 435, 438], "transform": [27, 69, 110, 115, 120, 124, 125, 127, 128, 130, 138, 141, 196, 198, 204, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 276, 278, 282, 284, 321, 329, 335, 340, 341, 364, 385, 386, 387, 388, 408, 418, 421, 426, 430, 435, 436], "transform_rep_exp2comp": 418, "transit": 418, "translat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 418, 421, 427, 430], "transmiss": 433, "transmit": 293, "travers": 418, "treasur": 438, "treat": [141, 376, 416, 425, 430, 436, 439], "tree": 418, "tremend": 376, "trend": 437, "tri": 432, "triangl": 288, "triangular": [282, 288, 402, 436], "tricki": 428, "tricyclohexylphosphin": [375, 376, 377], "trigger": [168, 296, 391, 395, 400, 418, 419, 423, 429, 433], "trivial": [249, 262, 429, 430], "true": [6, 12, 14, 27, 30, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 198, 246, 278, 287, 292, 304, 305, 309, 315, 316, 333, 334, 355, 376, 380, 382, 383, 385, 386, 387, 388, 392, 394, 395, 397, 400, 402, 405, 406, 408, 409, 410, 412, 413, 418, 424, 425, 426, 427, 428, 430, 433], "truncat": [416, 426], "trust": [394, 426], "truth": 316, "truthi": 426, "try": [326, 375, 376, 377, 391, 394, 395, 410, 417, 418, 439], "tune": 416, "tupl": [27, 37, 41, 90, 91, 92, 95, 97, 99, 100, 101, 103, 104, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 144, 196, 198, 203, 204, 269, 296, 309, 312, 324, 326, 337, 340, 344, 364], "turn": [196, 204, 344, 404, 416, 417, 418, 425, 426], "turnaround": 434, "twice": [427, 429], "two": [30, 51, 57, 58, 116, 170, 180, 225, 297, 302, 329, 349, 361, 374, 375, 377, 390, 397, 400, 402, 406, 412, 413, 415, 416, 418, 419, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436], "twofold": 400, "twophasemetarecommend": [375, 377, 380, 385, 386, 387, 388, 391, 392, 394, 395, 400, 402, 406, 408, 409, 410, 416, 418, 431], "twophasestrategi": 418, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 24, 25, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 111, 113, 115, 116, 120, 123, 124, 125, 127, 128, 130, 137, 138, 140, 141, 143, 144, 146, 147, 148, 151, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 182, 185, 187, 188, 189, 190, 192, 193, 196, 198, 199, 200, 201, 204, 205, 206, 207, 209, 210, 211, 214, 215, 217, 218, 219, 221, 223, 224, 227, 229, 231, 233, 236, 238, 239, 240, 242, 243, 246, 249, 250, 254, 260, 262, 264, 266, 268, 269, 270, 272, 273, 276, 278, 279, 284, 286, 287, 288, 290, 291, 292, 293, 296, 297, 299, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 340, 341, 342, 344, 346, 347, 349, 350, 351, 353, 354, 355, 361, 362, 364, 366, 369, 370, 371, 372, 376, 385, 386, 387, 388, 390, 391, 392, 394, 395, 397, 398, 400, 402, 408, 409, 410, 416, 418, 419, 421, 422, 425, 428, 429, 430, 431, 432, 437, 438], "typealia": 279, "typeerror": [27, 83, 87, 227, 242, 311, 326, 327, 362, 391, 392], "typeguard": 308, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 110, 115, 120, 123, 124, 125, 127, 128, 130, 137, 138, 141, 143, 151, 153, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 170, 196, 198, 204, 209, 217, 218, 221, 236, 238, 239, 242, 246, 249, 260, 262, 264, 266, 269, 276, 278, 284, 305, 306, 307, 308, 324, 329, 335, 340], "typic": [13, 311, 355, 376, 416, 423, 424, 428, 430, 433, 439], "typing_extens": 419, "typo": [418, 419], "u": [17, 374, 375, 376, 377, 390, 392, 397, 398, 400, 404, 413, 416, 422, 425, 429], "ucb": [8, 380, 418, 422, 433], "ultim": 419, "ultra": [409, 410], "un": 418, "unabl": 394, "unavail": 418, "unawar": 423, "unbound": [340, 390], "uncaught": 418, "uncertainti": [13, 380, 438], "uncharacter": 437, "uncorrel": [332, 437], "undefin": [236, 427], "under": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 293, 335, 388, 392, 400, 416, 417, 421, 423, 430], "underflow": 74, "underli": [27, 51, 391, 400, 416, 424, 428, 431, 433], "underscor": 418, "understand": [416, 437], "undesir": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55, 78, 425, 427, 430, 439], "undo": 417, "unequ": 388, "unevenli": 430, "unfinish": 423, "unfortun": 437, "unhandl": 418, "uniform": [196, 236, 327, 328, 418], "uniformli": 361, "uniniti": 315, "uninstal": [75, 416], "unintend": [78, 311, 418, 419], "unintention": 439, "union": [116, 227, 231, 286, 287, 288, 350, 406, 421, 432], "uniqu": [52, 143, 397, 418, 430], "unit": [203, 344], "unknown": [169, 361, 374, 400, 418, 435, 437], "unlabel": 329, "unless": [416, 419, 421, 426, 430, 433], "unlik": [12, 14, 397, 439], "unlock": 438, "unmaintain": 418, "unmatch": 309, "unmatchedattributeerror": 309, "unmeasur": [227, 377], "unnecessari": [418, 424], "unpromis": 391, "unreach": 418, "unrealist": 434, "unrecogn": 326, "unrestrict": 311, "unsaf": 418, "unspecifi": [301, 418, 433], "unspecifiedtyp": 27, "unsqueez": [391, 392], "unstructur": [219, 433], "unstructure_bas": 217, "unsupport": [196, 229], "until": [165, 167, 168, 169, 170, 227, 400, 416, 434], "untouch": 327, "untransform": [27, 435], "unusedobjectwarn": [391, 418, 423], "unveil": 413, "unwant": 34, "up": [27, 204, 227, 229, 374, 375, 376, 377, 378, 385, 387, 390, 392, 396, 397, 398, 406, 412, 413, 416, 417, 418, 422, 425, 439], "updat": [27, 376, 379, 418, 419, 423], "upgrad": 418, "upon": [172, 249, 417, 418, 419, 425, 432, 435, 437], "upper": [8, 18, 159, 198, 204, 286, 287, 288, 340, 380, 392, 402, 412, 413, 418, 436, 439], "upper_bound": [385, 386, 387, 388, 408, 432], "upperconfidencebound": [422, 433], "upstream": 419, "urg": 428, "url": [426, 437], "us": [13, 17, 27, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 62, 66, 83, 95, 115, 116, 130, 135, 138, 141, 143, 162, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 196, 198, 204, 205, 206, 218, 227, 229, 231, 236, 238, 239, 242, 243, 246, 260, 262, 264, 266, 282, 292, 293, 299, 311, 312, 320, 321, 326, 328, 329, 334, 342, 346, 347, 353, 361, 366, 374, 382, 383, 389, 390, 391, 392, 393, 396, 397, 398, 404, 408, 409, 410, 412, 413, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439], "usa": 420, "usabl": [315, 417, 418, 430, 433], "usag": [343, 416, 418, 425, 426, 431, 438], "use_comp_rep": [83, 87, 428], "use_torch": [329, 382, 383, 392, 405, 406, 412, 413], "user": [48, 49, 60, 70, 78, 130, 133, 236, 238, 239, 242, 246, 260, 262, 264, 266, 273, 290, 328, 334, 379, 380, 385, 402, 410, 416, 417, 418, 419, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 437], "userguid": 289, "usernam": [290, 418, 426], "userwarn": 417, "uses_shap_explain": 83, "usort": 418, "usr": 135, "usrcat": 135, "usrcatfingerprint": 135, "usrfingerprint": 135, "usual": [227, 375, 376, 377, 409, 417, 428, 430], "util": [180, 196, 204, 292, 299, 301, 302, 340, 360, 364, 374, 376, 379, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 400, 402, 405, 406, 412, 413, 416, 418, 422, 423, 428, 429, 430, 431, 433, 434, 435, 437, 438], "uv": 418, "v": 437, "val": [45, 113, 316, 412], "val_from_param1": 53, "val_from_param2": 53, "valid": [27, 30, 31, 32, 33, 34, 37, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 143, 198, 201, 204, 207, 242, 334, 385, 407, 409, 414, 417, 418, 419, 424, 425, 434], "validate_compat": 242, "validate_config": [27, 410, 418, 424], "valu": [6, 8, 18, 22, 27, 30, 36, 37, 38, 41, 49, 51, 68, 83, 94, 95, 96, 97, 98, 99, 100, 101, 105, 110, 115, 116, 120, 124, 127, 128, 130, 132, 133, 135, 138, 141, 143, 146, 147, 148, 170, 187, 188, 189, 190, 196, 198, 204, 205, 206, 225, 227, 229, 231, 236, 238, 239, 242, 246, 260, 262, 264, 266, 278, 279, 281, 286, 287, 288, 293, 296, 300, 301, 306, 309, 316, 323, 326, 327, 328, 331, 334, 335, 336, 340, 342, 349, 350, 351, 369, 370, 371, 372, 375, 376, 377, 379, 380, 382, 385, 386, 387, 388, 390, 391, 392, 394, 395, 397, 400, 402, 405, 406, 408, 409, 410, 412, 413, 416, 418, 419, 422, 424, 425, 426, 427, 428, 429, 430, 436, 437, 438, 439], "valuabl": [431, 434], "valueerror": [13, 27, 57, 58, 83, 87, 116, 143, 147, 148, 196, 198, 204, 210, 227, 229, 236, 238, 239, 242, 246, 260, 262, 264, 266, 273, 297, 309, 314, 316, 319, 323, 326, 328, 334, 335, 355, 361, 362, 395, 406, 417], "var": [400, 438], "vari": [27, 204, 376, 429], "variabl": [30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 123, 124, 125, 127, 128, 130, 137, 138, 141, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 236, 238, 239, 242, 246, 260, 262, 264, 266, 276, 291, 293, 348, 353, 367, 405, 416, 418, 419, 425, 430, 431, 433], "varianc": [8, 13, 18, 94, 262, 330, 418, 422], "variance_initial_valu": 94, "variance_prior": 94, "variant": [380, 412, 428, 437], "varieti": [405, 419, 433, 434], "variou": [340, 397, 403, 418, 423, 428, 431, 434], "varucb": 418, "vector": [30, 394, 420], "vendor": 430, "verbal": 421, "verbos": [395, 418], "veri": [385, 387, 402, 423, 426, 428, 430, 439], "verifi": [315, 382, 385, 386, 387, 388, 397, 398, 404, 406, 408, 416, 419], "versa": [412, 437], "versatil": 431, "version": [198, 290, 347, 385, 387, 388, 397, 400, 404, 412, 413, 416, 417, 418, 419, 421, 433], "vert": 392, "via": [13, 17, 26, 27, 83, 170, 180, 192, 236, 238, 239, 240, 242, 246, 260, 262, 264, 266, 292, 303, 311, 326, 333, 334, 377, 383, 390, 391, 394, 404, 416, 418, 419, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 436, 437, 438], "via_init": 433, "via_json": 433, "viabl": [72, 402], "vice": [412, 437], "view": [196, 204, 392, 432], "view_init": 392, "violat": [34, 47, 48, 49, 50, 51, 52, 53, 54, 55], "viridi": 392, "virtual": 419, "visibl": 418, "visual": [376, 412, 413, 428, 436], "volum": 437, "vpn": [416, 426], "vsa": 135, "vsafingerprint": 135, "vulner": [418, 419], "w_i": 429, "wa": [13, 63, 64, 67, 68, 75, 78, 143, 170, 236, 238, 239, 242, 246, 260, 262, 264, 266, 323, 326, 362, 376, 417, 418, 419, 421, 426, 428, 430, 433, 437], "wai": [198, 390, 397, 398, 403, 404, 412, 415, 416, 426, 427, 428, 430, 432, 433, 434, 436, 437, 439], "wall": 10, "want": [48, 380, 385, 397, 400, 406, 413, 416, 419, 425, 426, 427, 428, 430, 431, 433, 436], "warn": [59, 312, 385, 387, 388, 391, 405, 406, 418, 419], "warranti": [416, 421], "watch": 390, "water": [385, 386, 387, 388, 397, 425, 430], "we": [22, 225, 374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 390, 391, 392, 394, 395, 397, 398, 400, 402, 404, 405, 406, 408, 409, 410, 412, 413, 416, 417, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 436, 437, 438, 439], "web": 419, "weber": 420, "weight": [107, 115, 116, 351, 402, 429, 433], "weight_kdalton": 430, "welcom": 419, "well": [290, 353, 380, 391, 396, 415, 419, 424, 425, 428, 430, 434], "were": [27, 326, 377, 413, 417, 418, 423, 425, 426, 430, 432], "what": [143, 168, 198, 225, 326, 364, 374, 394, 402, 410, 415, 419, 422, 424, 428, 430, 437, 438], "whatsnew": 302, "when": [27, 49, 138, 168, 169, 170, 178, 180, 198, 236, 238, 239, 242, 243, 246, 260, 262, 264, 266, 273, 300, 301, 309, 311, 315, 326, 329, 355, 362, 385, 386, 388, 390, 395, 397, 398, 400, 402, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 436, 437, 439], "whenev": [22, 168, 326, 433], "where": [17, 22, 30, 34, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 162, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 225, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 296, 326, 361, 375, 376, 377, 380, 385, 387, 397, 400, 416, 417, 418, 419, 421, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 436, 437], "wherea": 433, "wherev": [421, 423], "whether": [22, 30, 31, 32, 33, 34, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 87, 123, 124, 125, 127, 128, 130, 137, 138, 141, 180, 196, 204, 236, 238, 239, 242, 246, 260, 262, 264, 266, 291, 328, 334, 340, 397, 418, 421, 424, 426, 427, 436], "which": [13, 27, 36, 37, 38, 78, 83, 110, 115, 120, 128, 143, 162, 163, 165, 167, 168, 169, 170, 172, 175, 178, 180, 185, 187, 188, 189, 190, 192, 193, 198, 204, 231, 233, 236, 238, 239, 242, 246, 260, 262, 264, 266, 270, 292, 293, 311, 315, 326, 328, 332, 334, 336, 349, 350, 353, 364, 374, 376, 380, 383, 390, 391, 397, 398, 400, 404, 405, 406, 410, 412, 413, 416, 417, 418, 419, 421, 422, 424, 425, 427, 428, 430, 432, 433, 434, 435, 436, 437, 439], "while": [198, 201, 207, 391, 400, 402, 413, 417, 421, 422, 424, 425, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437], "whilst": 326, "whim": 135, "whimfingerprint": 135, "whole": 421, "whom": 421, "whose": [116, 143, 198, 229, 306, 309, 329, 374, 390, 397, 423, 434], "wide": 434, "wider": 436, "width": 336, "wieczorek": 420, "william": 437, "willing": 424, "win": [236, 400], "win_rat": 400, "window": [418, 426], "winerror": 417, "wise": 351, "wish": 433, "within": [27, 123, 124, 125, 127, 128, 130, 137, 138, 141, 292, 334, 404, 421, 425, 426, 430, 435, 437, 438, 439], "without": [169, 412, 413, 416, 418, 421, 423, 424, 425, 426, 430, 434, 437, 439], "work": [22, 267, 296, 329, 385, 387, 388, 391, 402, 408, 410, 416, 418, 419, 420, 421, 425, 426, 429, 431, 433, 434], "workaround": [417, 418], "workflow": [394, 416, 424, 433, 438], "world": [416, 424], "worldwid": 421, "worst": [227, 229, 231, 377], "would": [52, 74, 143, 225, 227, 233, 241, 390, 397, 400, 416, 419, 423, 425, 426, 427, 428, 430, 431, 432, 433, 434, 437, 439], "wrap": [90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 246, 250, 268, 269, 311, 416, 418, 429], "wrapper": [1, 21, 231, 233, 242, 312, 412, 413, 416, 431], "write": [416, 417, 421, 433], "written": [405, 406, 419, 421], "wrong": [410, 418], "wrongli": 417, "www": [416, 421], "x": [22, 111, 200, 227, 229, 250, 308, 312, 324, 337, 349, 364, 374, 375, 376, 377, 385, 386, 387, 388, 391, 392, 397, 402, 408, 412, 413, 416, 418, 432, 435], "x0": 432, "x1": 432, "x2": 432, "x_": [374, 382, 383, 404, 405, 406], "x_1": [382, 383, 404, 405, 406, 425], "x_2": [382, 383, 404, 405, 406, 425], "x_3": [382, 383, 404, 405, 406, 425], "x_4": [382, 383, 404, 405, 406], "x_5": 406, "x_6": 406, "x_i": 425, "x_pend": 22, "xlsx": [375, 376, 377, 391], "xpho": [375, 376, 377], "xxxx": 417, "xylen": [375, 376, 377, 379, 380], "y": [258, 316, 332, 349, 374, 375, 376, 377, 391, 392, 394, 397, 412, 413, 416, 437], "ye": 316, "year": 437, "yet": [22, 418, 423, 431], "yield": [6, 95, 375, 376, 377, 379, 380, 385, 391, 394, 395, 397, 406, 408, 409, 410, 416, 418, 422, 428, 429, 433], "yield_cumbest": [375, 376, 377, 391], "yml": 418, "you": [27, 48, 376, 380, 382, 390, 395, 397, 400, 405, 406, 409, 415, 416, 417, 419, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 439], "your": [376, 390, 397, 400, 406, 415, 416, 417, 418, 419, 421, 424, 426, 427, 428, 430, 433, 434, 435, 436, 437, 439], "your_branch_nam": 419, "yourself": 400, "z": [392, 416], "zdir": 392, "zero": [8, 18, 153, 330, 397, 400, 437], "zip": [391, 392], "\u00b5fmt": 418, "\u0161o\u0161i\u0107": [416, 420]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.single", "SingleTargetObjective", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "Surrogate", "SurrogateProtocol", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 419, "0": 418, "01": 418, "02": 418, "03": 418, "04": 418, "05": 418, "06": 418, "07": 418, "08": 418, "09": 418, "1": 418, "10": 418, "11": 418, "12": 418, "13": 418, "14": 418, "15": 418, "16": 418, "17": 418, "19": 418, "2": 418, "2022": 418, "2023": 418, "2024": 418, "2025": 418, "21": 418, "23": 418, "24": 418, "27": 418, "28": 418, "29": 418, "3": 418, "31": 418, "4": 418, "5": 418, "6": 418, "7": 418, "8": 418, "9": 418, "A": 416, "On": 428, "The": [400, 409, 416, 427, 433, 434, 437], "abbrevi": 433, "acqf": 2, "acquisit": [1, 2, 19, 21, 23, 24, 25, 380, 423], "acquisitionfunct": 20, "action": 437, "activ": 422, "ad": [379, 418, 423, 424, 437, 439], "add_fake_measur": 326, "add_noise_to_perturb_degenerate_row": 327, "add_parameter_nois": 328, "addendum": 402, "addit": 397, "additivekernel": 103, "advanc": [416, 435], "altern": 433, "amount": 397, "an": 400, "appli": 427, "arm": [399, 400], "arm64": 417, "arrai": 434, "arrays_to_datafram": 329, "assembli": 433, "asynchron": 423, "attr": 419, "augment": [295, 296, 297], "automat": 433, "avail": [380, 435], "avx": 417, "back": 416, "backtest": [373, 412], "bandit": [235, 399, 400], "base": [19, 29, 89, 109, 111, 122, 150, 161, 164, 174, 177, 184, 237, 275, 375, 376, 377, 382, 383, 397, 398, 406, 427, 434], "basesequentialmetarecommend": 167, "basic": [93, 152, 298, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 378, 379, 424, 426, 428, 433], "basickernel": 90, "batch": 424, "batchify_ensemble_predictor": 268, "batchify_mean_var_predict": 269, "batteri": 416, "bayb": [0, 1, 2, 19, 21, 23, 24, 25, 26, 28, 29, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 93, 102, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 119, 121, 122, 126, 129, 131, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 160, 161, 163, 164, 166, 171, 173, 174, 176, 177, 179, 181, 182, 183, 184, 186, 191, 194, 195, 197, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 244, 245, 247, 250, 251, 252, 254, 255, 257, 259, 261, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 379, 416, 419], "bayesian": [176, 177, 179, 181, 182, 416, 431], "bayesianlinearsurrog": 260, "bayesianrecommend": 178, "bell_transform": 286, "bernoulli": 400, "betabernoullimultiarmedbanditsurrog": 236, "betaprior": 153, "binari": [277, 279], "binarytarget": 278, "black": [374, 400], "block_deserialization_hook": 214, "block_serialization_hook": 215, "bo": 428, "boolean": [313, 314, 315, 316], "both": 408, "botorch": [179, 405], "botorchrecommend": 180, "bound": [390, 429, 432], "box": [374, 400], "break": 418, "build": [400, 432], "bytes_to_human_read": 344, "cach": [424, 426], "call": 427, "callabl": [382, 383, 406, 434], "campaign": [26, 27, 374, 375, 376, 377, 380, 382, 383, 385, 386, 388, 391, 394, 395, 402, 405, 406, 408, 409, 424], "candid": [424, 427], "cardinalityconstraint": 30, "case": 400, "catch_constant_target": 270, "categor": 126, "categoricalencod": 132, "categoricalparamet": [127, 430], "caution": 427, "chang": 418, "changelog": 418, "check_if_in": 314, "chemic": 416, "chemistri": [317, 318, 319, 320, 321], "choicevalu": 279, "class": 419, "classproperti": 302, "clone": 416, "closer_el": 349, "closest_el": 350, "cluster": [186, 431], "code": 419, "columntransform": 364, "compar": 408, "compon": 390, "composit": 102, "compositekernel": 91, "comput": 428, "condit": [35, 36, 425], "config": [409, 410, 424], "configur": [394, 395, 409, 427, 433], "constraint": [28, 29, 31, 35, 39, 42, 43, 44, 45, 46, 56, 57, 58, 381, 382, 383, 384, 385, 386, 387, 388, 397, 398, 425, 427, 432, 439], "construct": [375, 376, 377, 382, 383, 397, 405, 406, 429, 432], "constructor": [432, 433], "continu": [39, 195, 381, 383, 397, 404, 422, 425, 430, 432, 437, 439], "continuouscardinalityconstraint": 40, "continuousconstraint": 32, "continuouslinearconstraint": [41, 425], "continuouslinearequalityconstraint": 43, "continuouslinearinequalityconstraint": 44, "continuousnonlinearconstraint": 33, "continuousparamet": 123, "contribut": 419, "contributor": 420, "control": [424, 427], "conveni": 429, "convent": 419, "convers": [322, 323, 324, 429, 433], "convert": [216, 394], "convert_acqf": 24, "convert_bound": 341, "copi": 433, "core": [197, 200, 201, 213, 214, 215, 216, 217, 218, 219, 226, 227, 245, 252, 254], "cpu": 417, "creat": [374, 375, 376, 377, 380, 382, 383, 385, 386, 387, 388, 394, 395, 402, 404, 405, 408, 409, 412, 413, 424, 432], "create_example_plot": 353, "creation": [375, 376, 377, 397, 398, 424, 439], "current": 435, "custom": [129, 241, 243, 374, 385, 389, 390, 393, 394, 395, 435], "customdiscreteparamet": [130, 430], "customencod": 133, "customonnxsurrog": 242, "data": [375, 376, 377, 432, 437], "datafram": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 382, 383, 406, 432, 433, 434], "de": [408, 433], "default": [255, 432, 433], "defaultkernelfactori": 256, "defin": [374, 382, 383, 390, 391, 392, 402, 405, 406, 410, 412, 413, 416], "definit": 391, "depend": [386, 416, 430], "deprec": [42, 43, 44, 45, 112, 113, 418], "deprecationerror": 60, "descript": 402, "deseri": 433, "deserialize_datafram": 223, "design": [416, 419], "desir": [114, 116], "desirabilityobject": [115, 429], "develop": 419, "df_apply_dependency_augment": 296, "df_apply_permutation_augment": 297, "df_drop_single_value_column": 330, "df_drop_string_column": 331, "df_uncorrelated_featur": 332, "dictionari": [409, 410], "differ": 380, "dimens": 406, "discret": [46, 202, 205, 206, 207, 384, 385, 386, 387, 397, 405, 424, 425, 430, 432], "discretecardinalityconstraint": 47, "discreteconstraint": 34, "discretecustomconstraint": [48, 425], "discretedependenciesconstraint": [49, 425], "discreteexcludeconstraint": [50, 425], "discretelinkedparametersconstraint": [51, 425], "discretenolabelduplicatesconstraint": [52, 425], "discreteparamet": 124, "discretepermutationinvarianceconstraint": [53, 425], "discreteproductconstraint": [54, 425], "discretesamplingmethod": 360, "discretesumconstraint": [55, 425], "discuss": 400, "disk": 426, "do": 434, "docstr": 419, "document": 395, "dtypefloatnumpi": 346, "dtypefloatonnx": 347, "dtypefloattorch": 366, "dummi": 299, "duplic": 397, "dure": 439, "dynam": 427, "edbo": 257, "edbokernelfactori": 258, "effici": 439, "emptysearchspaceerror": 61, "encod": 430, "end": 416, "enum": [117, 131, 280], "environ": 426, "equival": 433, "estim": 439, "exampl": [375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 394, 395, 402, 405, 406, 408, 409, 410, 414, 416, 428], "except": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "exceptiongroup": 417, "exclud": 427, "exclus": [387, 388, 427], "expect": 437, "expectedimprov": 3, "experi": [385, 386, 387, 388, 394, 395, 402, 408, 416, 423, 434], "experiment": [424, 426, 427, 428], "expir": 418, "explain": [81, 428], "explicit": 432, "extend": 419, "extract": 435, "fake": 439, "faq": 415, "farthest_point_sampl": 361, "featur": [426, 427], "field": 433, "file": [409, 410], "filter_df": 333, "find_subclass": 303, "finite_float": 369, "fix": [417, 418], "float": 426, "fpsrecommend": 192, "fraction_to_float": 323, "from": [409, 416, 418, 424, 432, 433], "full": [375, 376, 377, 432], "function": [374, 375, 376, 377, 380, 382, 383, 391, 402, 405, 406, 419, 423], "further": 424, "fuzzy_row_match": 334, "gammaprior": 154, "gaussian_process": [244, 245, 247, 250, 251, 252, 254, 255, 257], "gaussianmixtureclusteringrecommend": 187, "gaussianprocesspreset": 253, "gaussianprocesssurrog": 246, "gener": [412, 413, 419, 431], "geom_mean": 351, "get": [379, 424, 427], "get_base_structure_hook": 217, "get_baseclass": 304, "get_canonical_smil": 318, "get_fingerprint_class": 319, "get_model_params_valid": 272, "get_parameters_from_datafram": 143, "get_subclass": 305, "get_transform_object": 335, "get_transform_paramet": 209, "get_user_detail": 290, "github": 416, "global": 422, "group_duplicate_valu": 306, "guid": 438, "halfcauchyprior": 155, "halfnormalprior": 156, "hilberts_factori": 307, "hook": [389, 390, 391, 392], "hybrid": [382, 406, 425], "imaginari": 400, "implicit": 429, "import": [374, 375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 390, 392, 394, 395, 397, 398, 400, 402, 404, 405, 406, 408, 409, 410, 412, 413, 428], "improv": 392, "includ": 416, "inclus": 375, "incompatibilityerror": 62, "incompatibleacquisitionfunctionerror": 63, "incompatibleargumenterror": 64, "incompatibleexplainererror": 65, "incompatiblesearchspaceerror": 66, "incomplet": 377, "incorpor": 388, "indent": 354, "independentgaussiansurrog": 238, "index": 416, "indic": 416, "infiniteintervalerror": 339, "influenc": 439, "inform": [424, 431], "initi": [375, 380], "insight": [79, 80, 81, 82, 84, 85, 86, 87, 428], "instal": [416, 417], "instanc": 390, "instead": [394, 395], "instruct": 426, "internet": 426, "interpret": 428, "interrupt": 391, "interv": [338, 339, 340, 341, 342], "invalidsurrogatemodelerror": 67, "invalidtargetvalueerror": 68, "invari": 397, "invok": 433, "irrelev": 437, "is_abstract": 315, "is_all_inst": 308, "is_en": 291, "is_shap_explain": 86, "issu": [416, 417], "iter": [382, 383, 394, 395, 402], "json": [424, 433], "kernel": [88, 89, 92, 93, 102], "kernel_factori": [247, 250], "kernelfactori": 248, "kmeansclusteringrecommend": 188, "known": [416, 417], "leak": 417, "learn": [411, 413, 422, 434, 437], "licens": [416, 421], "limit": [428, 435, 436], "linear": [259, 383], "linear_transform": 287, "linearkernel": 94, "link": 395, "local": [416, 422], "logexpectedimprov": 4, "lognormalprior": 157, "look_up_target": 229, "lookup": [228, 229, 375, 376, 377, 382, 383, 391, 406, 412, 413, 434], "loop": [374, 375, 376, 377, 412, 413, 416], "maco": 417, "maintain": [416, 420], "make_explainer_for_surrog": 87, "make_gp_from_preset": 254, "mandatori": 429, "manual": [385, 386, 387, 388], "mark": 423, "match": 436, "match_attribut": 309, "maternkernel": 95, "max": 436, "mean": 434, "meanpredictionsurrog": 262, "measur": [379, 394, 395, 424, 439], "mechan": [375, 376, 377, 434], "memori": [343, 344, 439], "memorys": 203, "meta": [163, 164, 166, 427, 431], "metarecommend": 165, "method": [390, 419, 422], "min": 436, "miss": 434, "mixin": 220, "mixtur": [396, 397, 398], "mode": [402, 436], "model": [380, 394, 395, 397, 398, 400, 428, 435], "modelnottrainederror": 69, "monitor": 392, "monkeypatch": [390, 391, 392], "multi": [399, 400, 401, 402], "multipl": 434, "naiv": [171, 261], "naivehybridspacerecommend": 172, "name": 430, "name_to_smil": 320, "necessari": [375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 394, 395, 402, 405, 406, 408, 409, 410], "nest": 433, "ngboost": 263, "ngboostsurrog": 264, "nois": 439, "nomcacquisitionfunctionerror": 70, "non_inf_float": 370, "non_nan_float": 371, "non_shap_explain": 82, "none": 434, "nonpredict": [183, 184, 186, 191], "nonpredictiverecommend": 185, "nonstring_to_tupl": 324, "norecommenderslefterror": 71, "normalprior": 158, "notenoughpointslefterror": 72, "nothingtosimulateerror": 73, "numer": [136, 283, 345, 346, 347, 348, 349, 350, 351], "numericalcontinuousparamet": [137, 430], "numericaldiscreteparamet": [138, 430], "numericaltarget": [284, 436], "numericalunderflowerror": 74, "object": [106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 375, 376, 377, 380, 382, 383, 385, 386, 387, 388, 402, 405, 408, 412, 413, 416, 429, 433], "onli": 426, "onnx": 394, "optim": [374, 412, 413, 416, 424, 439], "option": [416, 430], "optionalimporterror": 75, "order": [397, 426], "output": [394, 395], "overrid": 419, "packag": [416, 426], "page": 428, "pamclusteringrecommend": 189, "parallel": 424, "paramet": [121, 122, 125, 126, 129, 131, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 375, 376, 377, 380, 395, 397, 398, 424, 428, 430, 432, 439], "parameter_cartesian_prod_panda": 205, "parameter_cartesian_prod_polar": 206, "parameterencod": 134, "partial": [21, 423], "partialacquisitionfunct": 22, "pass": 395, "pend": 423, "perform": [375, 402, 405, 406], "periodickernel": 96, "perman": 427, "permut": 397, "piecewisepolynomialkernel": 97, "plainkernelfactori": 249, "plot": [352, 353, 354, 355, 374, 391, 392, 428], "point": 426, "polar": [417, 426], "polynomialkernel": 98, "posteriormean": 5, "posteriorstandarddevi": 6, "pre": 394, "precis": 426, "preset": [251, 252, 254, 255, 257], "pretrain": 394, "pretty_print_df": 336, "print": [385, 386, 388, 402], "prior": [149, 150, 151, 152], "probabilityofimprov": 7, "probabl": 392, "problem": [374, 391, 417], "product": [388, 432], "productkernel": 104, "pull": 419, "pure": [173, 174, 176, 177, 179, 181, 182, 183, 184, 186, 191, 422, 431], "purerecommend": 175, "pycharm": 417, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedimprov": 12, "qnegintegratedposteriorvari": 13, "qnoisyexpectedimprov": 14, "qprobabilityofimprov": 15, "qsimpleregret": 16, "qthompsonsampl": 17, "quick": 416, "qupperconfidencebound": 18, "random": [356, 357, 358], "random_forest": 265, "randomforestsurrog": 266, "randomrecommend": 193, "rbfkernel": 99, "recommend": [160, 161, 163, 164, 166, 171, 173, 174, 176, 177, 179, 181, 182, 183, 184, 186, 191, 379, 380, 394, 395, 405, 406, 408, 423, 424, 427, 431], "recommenderprotocol": 162, "reduct": 422, "refers_to": 310, "regist": 390, "register_custom_architectur": 243, "register_hook": 311, "relat": 417, "remov": 418, "represent": [397, 398, 428, 432], "reproduc": 439, "request": 419, "restrict": 432, "result": [374, 391, 392, 423], "rffkernel": 100, "role": 437, "row": 426, "rqkernel": 101, "run": [374, 382, 383, 400], "sampl": [191, 422, 431], "sample_numerical_df": 362, "sampling_algorithm": [359, 361, 362], "scalar": [116, 118, 435], "scale": 363, "scalekernel": 105, "scenario": [230, 231, 434], "scope": 426, "search": [397, 398, 404, 412, 416, 422, 432, 439], "searchspac": [194, 195, 197, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 375, 377, 380, 382, 383, 385, 386, 387, 388, 402, 403, 405, 406, 413], "searchspacetyp": 199, "see": 437, "select_constructor_hook": 218, "semaphor": 417, "sequenti": [166, 424], "sequential_greedi": [181, 182], "sequentialgreedyrecommend": 182, "sequentialmetarecommend": 168, "serial": [212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 407, 408, 424, 433], "serialize_datafram": 224, "serialmixin": 221, "set": [374, 391, 392, 404, 412, 413], "set_random_se": 357, "setup": [379, 385, 386, 387, 388, 394, 395, 397, 398, 400, 402, 408], "shap": [80, 81, 82, 84, 85, 86, 87, 428], "shap_explain": 84, "shap_plot": 85, "shapinsight": 83, "signatur": 390, "simplex": [397, 432], "simul": [225, 226, 227, 228, 229, 230, 231, 232, 233, 374, 375, 376, 377, 391, 400, 412, 413, 434], "simulate_experi": 227, "simulate_scenario": 231, "simulate_transfer_learn": 233, "singl": [119, 434], "singletargetobject": [120, 429], "sklearnclusteringrecommend": 190, "slot": [397, 398], "smile": 140, "smiles_to_fingerprint_featur": 321, "smoothedboxprior": 159, "some": [382, 383, 402], "sort_paramet": 144, "space": [397, 398, 404, 406, 412, 416, 422, 424, 432, 439], "span": 397, "stage": 394, "start": 416, "stop": 391, "str_to_acqf": 25, "strategi": [380, 416], "streamingsequentialmetarecommend": 169, "string": [409, 433], "strtobool": 316, "structure_constraint": 45, "structure_object": 113, "studi": 435, "sub": 422, "subselectioncondit": [37, 425], "subspac": 432, "subspacecontinu": 196, "subspacediscret": 204, "substanc": [139, 140, 397, 416], "substanceencod": 135, "substanceparamet": [141, 430], "suggest": 417, "suitabl": 380, "sum": 388, "support": [417, 423], "surrog": [234, 235, 237, 239, 241, 243, 244, 245, 247, 250, 251, 252, 254, 255, 257, 259, 261, 263, 265, 267, 268, 269, 270, 271, 272, 273, 380, 393, 394, 395, 435], "surrogateprotocol": 240, "synchron": 419, "synthet": [405, 406], "tabl": [375, 376, 377, 412, 413, 416], "target": [274, 275, 276, 277, 279, 280, 283, 285, 286, 287, 288, 390, 401, 402, 429, 436, 439], "targetmod": 281, "targettransform": 282, "task": [412, 413], "taskparamet": [128, 430, 437], "technologi": 437, "telemetri": [289, 290, 291, 292, 293, 416, 426], "telemetry_record_recommended_measurement_percentag": 292, "telemetry_record_valu": 293, "temporary_se": 358, "terminologi": [397, 433, 434, 437], "test": [382, 383, 405, 406], "theoret": 397, "thi": [375, 376, 377, 379, 380, 382, 383, 385, 386, 387, 388, 402, 405, 406, 428], "thresholdcondit": [38, 425], "through": 437, "to_kernel_factori": 250, "to_object": 111, "to_searchspac": 200, "to_str": 355, "to_tensor": 337, "to_tupl": 312, "toggl": 427, "toler": 424, "tool": 419, "torch": [365, 366, 367, 417], "tradit": 398, "train": 394, "trajectori": 427, "transfer": [411, 413, 434, 437], "transfer_learn": [232, 233], "transform": [285, 286, 287, 288, 402], "treasur": 437, "triangular_transform": 288, "trigger": [390, 392], "two": 410, "twophasemetarecommend": 170, "type": 433, "uncertainti": 422, "unidentifiedsubclasserror": 76, "uninstal": 426, "uninterrupt": 391, "unlock": 437, "unmatchedattributeerror": 77, "unreleas": 418, "unspecifi": 300, "unspecifiedtyp": 301, "unstructure_bas": 219, "unusedobjectwarn": 78, "upperconfidencebound": 8, "us": [375, 376, 377, 379, 380, 385, 386, 387, 388, 394, 395, 400, 402, 405, 406, 432, 433, 434, 435], "usag": 428, "use_fallback_constructor_hook": 342, "user": 438, "util": [23, 24, 25, 142, 143, 144, 222, 223, 224, 267, 268, 269, 270, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 439], "v": [390, 397, 417, 424, 427], "valid": [56, 57, 58, 145, 146, 147, 148, 208, 209, 210, 211, 271, 272, 273, 368, 369, 370, 371, 372, 395, 410], "validate_cardinality_constraints_are_nonoverlap": 57, "validate_constraint": 58, "validate_custom_architecture_cl": 273, "validate_decorrel": 146, "validate_is_finit": 147, "validate_not_nan": 372, "validate_paramet": 211, "validate_parameter_nam": 210, "validate_searchspace_from_config": 201, "validate_simplex_subspace_from_config": 207, "validate_unique_valu": 148, "valu": [432, 433, 434], "variabl": 426, "varname_numpy_use_single_precis": 348, "varname_torch_use_single_precis": 367, "verif": [385, 386, 387, 388, 397, 398, 410], "verifi": 383, "via": 428, "we": 434, "what": 434, "window": 417, "within": 432, "without": 417, "workflow": [419, 423], "wrap": [382, 383, 406], "write": 419}})