Search.setIndex({"alltitles": {"Acquisition function": [[381, "acquisition-function"]], "AcquisitionFunction": [[21, null]], "Active Learning": [[423, null]], "Added": [[419, "added"], [419, "id6"], [419, "id15"], [419, "id19"], [419, "id25"], [419, "id32"], [419, "id41"], [419, "id47"], [419, "id51"], [419, "id58"], [419, "id63"], [419, "id69"], [419, "id75"], [419, "id79"], [419, "id83"], [419, "id87"], [419, "id92"], [419, "id96"], [419, "id99"], [419, "id103"], [419, "id107"], [419, "id111"], [419, "id114"], [419, "id118"], [419, "id122"], [419, "id126"], [419, "id130"], [419, "id136"], [419, "id139"]], "Addendum: Description of transformation functions": [[403, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[440, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[438, null]], "Adding Partial Results": [[424, "adding-partial-results"]], "Adding measurements": [[425, "adding-measurements"]], "AdditiveKernel": [[104, null]], "Advanced Example: Chemical Substances": [[417, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[401, "an-imaginary-use-case"]], "Array-Based Callables": [[435, null]], "Asynchronous Workflows": [[424, null]], "Automatic field conversion": [[434, "automatic-field-conversion"]], "Available Models": [[436, "available-models"]], "Available recommenders suitable for initial recommendation": [[381, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[381, "available-surrogate-models"]], "Backtesting": [[374, null], [413, null]], "BaseSequentialMetaRecommender": [[168, null]], "Basic Instructions": [[427, "basic-instructions"]], "Basic Usage": [[429, "basic-usage"]], "Basic creation": [[425, "basic-creation"]], "Basic example for using BayBE": [[380, null]], "Basic string assembly": [[434, "basic-string-assembly"]], "BasicKernel": [[91, null]], "Basics": [[379, null], [425, "basics"]], "Batch optimization": [[425, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[417, null]], "Bayesian Recommenders": [[432, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[261, null]], "BayesianRecommender": [[179, null]], "Bernoulli Multi Armed Bandit": [[401, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[237, null]], "BetaPrior": [[154, null]], "BinaryTarget": [[279, null]], "BotorchRecommender": [[181, null]], "Bound methods": [[391, "bound-methods"]], "Breaking Changes": [[419, "breaking-changes"], [419, "id24"], [419, "id31"]], "Building from the Product of Parameter Values": [[433, "building-from-the-product-of-parameter-values"], [433, "id2"]], "Building the Model": [[401, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[418, "cpus-without-avx-support-installation-of-polars"]], "Caching of recommendations": [[425, "caching-of-recommendations"]], "Campaign": [[28, null]], "Campaign Stopping": [[392, null]], "Campaigns": [[425, null]], "Candidate Control in Discrete Spaces": [[425, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[428, null]], "CardinalityConstraint": [[31, null]], "CategoricalEncoding": [[133, null]], "CategoricalParameter": [[128, null], [431, "categoricalparameter"]], "Caution": [[428, null]], "Changed": [[419, "changed"], [419, "id2"], [419, "id4"], [419, "id7"], [419, "id10"], [419, "id16"], [419, "id20"], [419, "id26"], [419, "id33"], [419, "id38"], [419, "id42"], [419, "id48"], [419, "id52"], [419, "id55"], [419, "id59"], [419, "id64"], [419, "id70"], [419, "id76"], [419, "id80"], [419, "id84"], [419, "id88"], [419, "id93"], [419, "id97"], [419, "id100"], [419, "id104"], [419, "id108"], [419, "id112"], [419, "id115"], [419, "id119"], [419, "id123"], [419, "id127"], [419, "id131"]], "Changelog": [[419, null]], "Clustering Recommenders": [[432, "clustering-recommenders"]], "Code Design": [[420, "code-design"]], "ColumnTransformer": [[365, null]], "Comparing recommendations in both objects": [[409, "comparing-recommendations-in-both-objects"]], "CompositeKernel": [[92, null]], "Condition": [[37, null]], "Conditions": [[426, "conditions"]], "Constraint": [[32, null]], "Constraint Setup": [[398, "constraint-setup"]], "Constraints": [[426, null]], "Constraints Continuous": [[382, null]], "Constraints Discrete": [[385, null]], "Constraints Setup": [[399, "constraints-setup"]], "Construct the campaign and run some iterations": [[383, "construct-the-campaign-and-run-some-iterations"], [384, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[433, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[376, "constructing-campaigns-for-the-simulation-loop"], [377, "constructing-campaigns-for-the-simulation-loop"], [378, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[433, "constructing-from-a-dataframe"], [433, "id1"], [433, "id3"]], "Constructing hybrid recommenders": [[407, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[406, "constructing-the-campaign-and-performing-a-recommendation"], [407, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[407, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[426, "continuous-constraints"]], "Continuous Parameters": [[431, "continuous-parameters"]], "Continuous Subspaces": [[433, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[41, null]], "ContinuousConstraint": [[33, null]], "ContinuousLinearConstraint": [[42, null], [426, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[34, null]], "ContinuousParameter": [[124, null]], "Contributing to BayBE": [[420, null]], "Contributors": [[421, null], [421, "id1"]], "Convenience construction and implicit conversion": [[430, null]], "Conventions for attrs classes": [[420, "conventions-for-attrs-classes"]], "Convert model to onnx": [[395, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[395, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[396, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[395, "create-campaign"]], "Creating Continuous Search Spaces": [[405, null]], "Creating a Simplex-Bound Discrete Subspace": [[433, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign": [[425, "creating-a-campaign"]], "Creating a campaign from the configuration file": [[410, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[386, "creating-and-printing-the-campaign"], [387, "creating-and-printing-the-campaign"], [389, "creating-and-printing-the-campaign"], [403, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[375, "creating-the-campaigns"]], "Creating the Objective": [[377, "creating-the-objective"]], "Creating the Optimization Objective": [[413, "creating-the-optimization-objective"], [414, "creating-the-optimization-objective"]], "Creating the Search Space": [[413, "creating-the-search-space"]], "Creating the Searchspace": [[414, "creating-the-searchspace"]], "Creating the campaign": [[381, "creating-the-campaign"], [396, "creating-the-campaign"], [409, "creating-the-campaign"]], "Creating the constraint": [[386, "creating-the-constraint"], [388, "creating-the-constraint"]], "Creating the constraints": [[387, "creating-the-constraints"], [389, "creating-the-constraints"]], "Creating the objective": [[403, "creating-the-objective"]], "Creating the recommender object": [[381, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[376, "creating-the-searchspace-and-the-objective"], [378, "creating-the-searchspace-and-the-objective"], [383, "creating-the-searchspace-and-the-objective"], [384, "creating-the-searchspace-and-the-objective"], [386, "creating-the-searchspace-and-the-objective"], [387, "creating-the-searchspace-and-the-objective"], [388, "creating-the-searchspace-and-the-objective"], [389, "creating-the-searchspace-and-the-objective"], [406, "creating-the-searchspace-and-the-objective"]], "Creation from a JSON config": [[425, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[436, null]], "Custom Hooks": [[390, null]], "Custom Surrogates": [[394, null]], "CustomDiscreteParameter": [[131, null], [431, "customdiscreteparameter"]], "CustomEncoding": [[134, null]], "CustomONNXSurrogate": [[243, null]], "Dataframe deserialization": [[434, "dataframe-deserialization"]], "DefaultKernelFactory": [[257, null]], "Defining config dictionaries": [[411, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[392, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[393, "defining-the-hook"]], "Defining the Hooks": [[391, "defining-the-hooks"]], "Defining the Optimization Objective": [[417, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[375, "defining-the-optimization-problem"]], "Defining the Search Space": [[417, "defining-the-search-space"]], "Defining the Tasks": [[413, "defining-the-tasks"], [414, "defining-the-tasks"]], "Defining the targets": [[403, "defining-the-targets"]], "Defining the test function": [[383, "defining-the-test-function"], [384, "defining-the-test-function"], [406, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[407, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[419, "deprecations"], [419, "id22"], [419, "id29"], [419, "id36"], [419, "id45"], [419, "id61"], [419, "id67"], [419, "id73"], [419, "id90"]], "Deserialization from configuration strings": [[434, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[116, null], [430, "desirabilityobjective"]], "Developer Tools": [[420, "developer-tools"]], "Discrete Constraints": [[426, "discrete-constraints"]], "Discrete Parameters": [[431, "discrete-parameters"]], "Discrete Subspaces": [[433, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[398, null]], "DiscreteCardinalityConstraint": [[48, null]], "DiscreteConstraint": [[35, null]], "DiscreteCustomConstraint": [[49, null], [426, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[50, null], [426, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[51, null], [426, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[52, null], [426, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[53, null], [426, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[125, null]], "DiscretePermutationInvarianceConstraint": [[54, null], [426, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[55, null]], "DiscreteSamplingMethod": [[361, null]], "DiscreteSumConstraint": [[56, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[426, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[401, "discussion"]], "Disk Caching": [[427, "disk-caching"]], "Dummy": [[300, null]], "Duplicate Substances": [[398, "duplicate-substances"]], "Dynamic Exclusion": [[428, "dynamic-exclusion"]], "EDBOKernelFactory": [[259, null]], "EXPERIMENTAL: Floating Point Precision": [[427, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[440, null]], "Environment Variables": [[427, null]], "Equivalent copies": [[434, null]], "Estimation with Constraints": [[440, null]], "Example Searchspace and objective parameters": [[381, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[383, null]], "Example for creating campaigns from configs": [[410, null]], "Example for custom parameter passing in surrogate models": [[396, null]], "Example for full simulation loop using a table-based lookup mechanism": [[377, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[378, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[376, null]], "Example for linear constraints in a continuous searchspace": [[384, null]], "Example for surrogate model with a custom pretrained model": [[395, null]], "Example for the serialization of a campaign": [[409, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[406, null]], "Example for using custom constraints in discrete searchspaces": [[386, null]], "Example for using dependency constraints in discrete searchspaces": [[387, null]], "Example for using different strategies": [[381, null]], "Example for using exclusion constraints in discrete searchspaces": [[388, null]], "Example for using exclusion constraints incorporating sums and products": [[389, null]], "Example for using synthetic test functions in hybrid spaces": [[407, null]], "Example for using the multi target mode for the objective": [[403, null]], "Example for validation of a config file": [[411, null]], "Examples": [[415, null]], "Examples On This Page": [[429, null]], "Excluding Configurations": [[428, "excluding-configurations"]], "Expectations": [[438, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[395, "experiment-setup"], [396, "experiment-setup"]], "Experiment setup": [[386, "experiment-setup"], [387, "experiment-setup"], [388, "experiment-setup"], [389, "experiment-setup"], [409, "experiment-setup"]], "Experiment setup and creating the searchspace": [[403, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[428, null]], "Experimental Representation Limits": [[429, null]], "Experimental and Computational Representations": [[429, "experimental-and-computational-representations"]], "Experimental feature only!": [[427, null]], "Expired Deprecations (from 0.6.*)": [[419, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[419, "expired-deprecations-from-0-7"]], "Explainers": [[429, "explainers"]], "Extending BayBE\u2019s Functionality": [[420, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[436, "extracting-the-model-for-advanced-study"]], "FAQ": [[416, null]], "FPSRecommender": [[193, null]], "Fixed": [[419, "fixed"], [419, "id8"], [419, "id11"], [419, "id13"], [419, "id17"], [419, "id21"], [419, "id27"], [419, "id35"], [419, "id39"], [419, "id44"], [419, "id49"], [419, "id53"], [419, "id60"], [419, "id65"], [419, "id71"], [419, "id77"], [419, "id85"], [419, "id89"], [419, "id94"], [419, "id101"], [419, "id105"], [419, "id109"], [419, "id116"], [419, "id120"], [419, "id124"], [419, "id128"], [419, "id132"], [419, "id134"], [419, "id137"]], "From GitHub": [[417, "from-github"]], "From Local Clone": [[417, "from-local-clone"]], "From Package Index": [[417, "from-package-index"]], "From the Default Constructor": [[433, "from-the-default-constructor"]], "Further information": [[425, "further-information"]], "GammaPrior": [[155, null]], "GaussianMixtureClusteringRecommender": [[188, null]], "GaussianProcessPreset": [[254, null]], "GaussianProcessSurrogate": [[247, null]], "General Information": [[432, "general-information"]], "General Workflow": [[420, "general-workflow"]], "Generating Lookup Tables": [[413, "generating-lookup-tables"], [414, "generating-lookup-tables"]], "Getting Recommendations": [[428, null]], "Getting a recommendation and adding measurements": [[380, "getting-a-recommendation-and-adding-measurements"]], "Getting recommendations": [[425, "getting-recommendations"]], "Global Uncertainty Reduction": [[423, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[156, null]], "HalfNormalPrior": [[157, null]], "Hook instance vs. target instance": [[391, null]], "Hybrid constraints": [[426, null]], "Imports": [[375, "imports"], [391, "imports"], [393, "imports"], [398, "imports"], [399, "imports"], [401, "imports"], [405, "imports"], [413, "imports"], [414, "imports"]], "Inclusion of initial data": [[376, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[239, null]], "Indices and Tables": [[417, "indices-and-tables"]], "Influence of Continuous Parameters": [[440, null]], "Insights": [[429, null]], "Installation Related Issues": [[418, "installation-related-issues"]], "Interval": [[341, null]], "Invoking alternative constructors": [[434, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[395, "iterate-with-recommendations-and-measurements"], [396, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[434, "json-de-serialization"]], "KMeansClusteringRecommender": [[189, null]], "Kernel": [[93, null]], "KernelFactory": [[249, null]], "Known Issues": [[418, null]], "License": [[422, null]], "Limitations": [[437, "limitations"]], "LinearKernel": [[95, null]], "Links for documentation": [[396, "links-for-documentation"]], "Local Uncertainty Reduction": [[423, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[158, null]], "Lookup functionality and data creation": [[376, "lookup-functionality-and-data-creation"], [377, "lookup-functionality-and-data-creation"], [378, "lookup-functionality-and-data-creation"]], "MATCH mode": [[437, "match-mode"]], "MIN and MAX mode": [[437, "min-and-max-mode"]], "Maintainers": [[421, "maintainers"]], "Mandatory target bounds": [[430, null]], "Manual verification of the constraint": [[386, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[387, "manual-verification-of-the-constraints"], [388, "manual-verification-of-the-constraints"], [389, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[424, "marking-experiments-as-pending"]], "MaternKernel": [[96, null]], "MeanPredictionSurrogate": [[263, null]], "Memory During Optimization": [[440, null]], "MemorySize": [[204, null]], "Meta Recommenders": [[428, null], [432, "meta-recommenders"]], "MetaRecommender": [[166, null]], "Method overrides": [[420, "method-overrides"]], "Missing Lookup Values": [[435, null]], "Mixtures": [[397, null]], "Model Interpretation in BO": [[429, null]], "Model Outputs": [[395, "model-outputs"], [396, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[398, null]], "Modeling a Mixture in Traditional Representation": [[399, null]], "Monitoring the Probability of Improvement": [[393, null]], "Monkeypatching": [[391, "monkeypatching"], [392, null], [393, "monkeypatching"]], "Multi Target": [[402, null]], "Multi-Armed Bandit": [[400, null]], "NGBoostSurrogate": [[265, null]], "NaiveHybridSpaceRecommender": [[173, null]], "Necessary imports": [[395, "necessary-imports"], [396, "necessary-imports"], [409, "necessary-imports"], [410, "necessary-imports"], [411, "necessary-imports"]], "Necessary imports for this example": [[376, "necessary-imports-for-this-example"], [377, "necessary-imports-for-this-example"], [378, "necessary-imports-for-this-example"], [380, "necessary-imports-for-this-example"], [381, "necessary-imports-for-this-example"], [383, "necessary-imports-for-this-example"], [384, "necessary-imports-for-this-example"], [386, "necessary-imports-for-this-example"], [387, "necessary-imports-for-this-example"], [388, "necessary-imports-for-this-example"], [389, "necessary-imports-for-this-example"], [403, "necessary-imports-for-this-example"], [406, "necessary-imports-for-this-example"], [407, "necessary-imports-for-this-example"]], "Nesting objects": [[434, "nesting-objects"]], "NonPredictiveRecommender": [[186, null]], "NormalPrior": [[159, null]], "NumericalContinuousParameter": [[138, null], [431, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[139, null], [431, "numericaldiscreteparameter"]], "NumericalTarget": [[285, null], [437, "numericaltarget"]], "Objective": [[111, null], [430, null]], "Optimizing a Custom Black-Box Function": [[375, null]], "Optional Dependencies": [[417, "optional-dependencies"]], "Optional dependency": [[431, null]], "Optional: Defining the Optimization Strategy": [[417, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[398, null]], "PAMClusteringRecommender": [[190, null]], "Parameter": [[126, null]], "Parameter Importance via SHAP": [[429, "parameter-importance-via-shap"]], "Parameter Setup": [[398, "parameter-setup"], [399, "parameter-setup"]], "Parameter encoding": [[431, null]], "Parameter names": [[431, null]], "Parameter tolerances": [[425, null]], "ParameterEncoding": [[135, null]], "Parameters": [[431, null]], "Parameters for a full simulation loop": [[376, "parameters-for-a-full-simulation-loop"], [377, "parameters-for-a-full-simulation-loop"], [378, "parameters-for-a-full-simulation-loop"]], "PartialAcquisitionFunction": [[23, null]], "Performing some iterations": [[403, "performing-some-iterations"]], "Performing the simulation loop": [[376, "performing-the-simulation-loop"]], "PeriodicKernel": [[97, null]], "Permanent Exclusion": [[428, "permanent-exclusion"]], "Permutation Invariance": [[398, "permutation-invariance"]], "PiecewisePolynomialKernel": [[98, null]], "PlainKernelFactory": [[250, null]], "Plots": [[429, "plots"]], "Plotting the Results": [[375, "plotting-the-results"], [392, "plotting-the-results"], [393, "plotting-the-results"]], "Polars": [[427, "polars"]], "PolynomialKernel": [[99, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Prior": [[152, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[392, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[105, null]], "Pure Recommenders": [[432, "pure-recommenders"]], "PureRecommender": [[176, null]], "Purely Continuous Search Spaces": [[423, null]], "PyCharm vs. exceptiongroup": [[418, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[100, null]], "RFFKernel": [[101, null]], "RQKernel": [[102, null]], "RandomForestSurrogate": [[267, null]], "RandomRecommender": [[194, null]], "RecommenderProtocol": [[163, null]], "Recommenders": [[432, null]], "Registering Custom Hooks": [[391, null]], "Removed": [[419, "removed"], [419, "id28"], [419, "id34"], [419, "id43"], [419, "id56"], [419, "id66"], [419, "id72"], [419, "id81"]], "Representation of Data within Discrete Subspaces": [[433, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[440, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[433, "restricting-search-spaces-using-constraints"]], "Row Order": [[427, null]], "Running the Simulation": [[401, "running-the-simulation"]], "Running the Simulation Loop": [[375, "running-the-simulation-loop"]], "SHAPInsight": [[84, null]], "SKLearnClusteringRecommender": [[191, null]], "Sampling Recommenders": [[432, "sampling-recommenders"]], "Scalarizer": [[119, null]], "ScaleKernel": [[106, null]], "Search Space Creation": [[398, "search-space-creation"], [399, "search-space-creation"]], "Search Space Memory Estimation": [[440, "search-space-memory-estimation"]], "Search Spaces": [[433, null]], "SearchSpace": [[199, null]], "SearchSpaceType": [[200, null]], "Searchspaces": [[404, null]], "Seeing Transfer Learning in Action": [[438, "seeing-transfer-learning-in-action"]], "Sequential vs. parallel experimentation": [[425, null]], "SequentialMetaRecommender": [[169, null]], "SerialMixin": [[222, null]], "Serialization": [[408, null], [425, "serialization"], [434, null]], "Serialization and de-serialization": [[409, "serialization-and-de-serialization"]], "Settings": [[375, "settings"], [392, "settings"], [393, "settings"], [405, "settings"], [413, "settings"], [414, "settings"]], "Setup": [[380, "setup"], [401, "setup"]], "Signature components": [[391, null]], "Simplex Construction": [[398, null]], "Simulating Multiple Scenarios": [[435, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[435, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[435, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[392, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[392, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[435, null]], "Simulation Loop": [[413, "simulation-loop"], [414, "simulation-loop"]], "SingleTargetObjective": [[121, null], [430, "singletargetobjective"]], "Slot-based Representation": [[399, null]], "SmoothedBoxPrior": [[160, null]], "StreamingSequentialMetaRecommender": [[170, null]], "Sub-Sampling Method": [[423, null]], "SubSelectionCondition": [[38, null], [426, "subselectioncondition"]], "SubspaceContinuous": [[197, null]], "SubspaceDiscrete": [[205, null]], "Substance Amounts": [[398, "substance-amounts"]], "SubstanceEncoding": [[136, null]], "SubstanceParameter": [[142, null], [431, "substanceparameter"]], "Suggested Fix": [[418, null], [418, null], [418, null], [418, null]], "Supported Acquisition Functions": [[424, null]], "Supported Recommenders": [[424, null]], "Surrogate": [[240, null]], "SurrogateProtocol": [[241, null]], "Surrogates": [[436, null]], "Synchronizing Pull Requests": [[420, "synchronizing-pull-requests"]], "Target": [[277, null]], "TargetMode": [[282, null]], "TargetTransformation": [[283, null]], "Targets": [[437, null]], "TaskParameter": [[129, null], [431, "taskparameter"]], "Technology": [[438, null]], "Telemetry": [[427, "telemetry"]], "Telemetry Scope": [[427, null]], "Terminology": [[398, "terminology"], [434, null], [438, null]], "Terminology Continued": [[438, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[435, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[401, "the-black-box-model"]], "The Lookup Mechanism": [[435, "the-lookup-mechanism"]], "The Optimization Loop": [[417, "the-optimization-loop"]], "The Role of the TaskParameter": [[438, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[410, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[428, "the-recommend-call"]], "The type field": [[434, "the-type-field"]], "Theoretical Span": [[398, null]], "ThresholdCondition": [[39, null], [426, "thresholdcondition"]], "Trajectory-Based Control": [[428, null]], "Transfer Learning": [[412, null], [414, null], [438, null]], "Triggering the Hook": [[393, "triggering-the-hook"]], "Triggering the Hooks": [[391, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[171, null]], "Uninstalling Internet Packages": [[427, null]], "Unlocking Data Treasures Through Transfer Learning": [[438, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[302, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[439, null]], "Using Custom Models": [[436, "using-custom-models"]], "Using Explicit Bounds": [[433, "using-explicit-bounds"]], "Using None": [[435, "using-none"]], "Using a Callable": [[435, "using-a-callable"]], "Using a Dataframe": [[435, "using-a-dataframe"]], "Using abbreviations": [[434, "using-abbreviations"]], "Using configuration instead": [[395, "using-configuration-instead"], [396, "using-configuration-instead"]], "Using default values": [[434, "using-default-values"]], "Utilities": [[440, null]], "Validation of model parameters": [[396, "validation-of-model-parameters"]], "Verification of Constraints": [[398, "verification-of-constraints"], [399, "verification-of-constraints"]], "Verification of Span": [[398, "verification-of-span"]], "Verification of the two dictionaries": [[411, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[384, "verify-the-constraints"]], "Windows \u2013 Torch Problems": [[418, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[383, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [384, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [407, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[420, "writing-docstrings"]], "Writing classes": [[420, "writing-classes"]], "[0.1.0] - 2022-10-01": [[419, "id138"]], "[0.10.0] - 2024-08-02": [[419, "id30"]], "[0.11.0] - 2024-09-09": [[419, "id23"]], "[0.11.1] - 2024-10-01": [[419, "id18"]], "[0.11.2] - 2024-10-11": [[419, "id14"]], "[0.11.3] - 2024-11-06": [[419, "id12"]], "[0.11.4] - 2025-01-27": [[419, "id9"]], "[0.12.0] - 2025-01-28": [[419, "id5"]], "[0.12.1] - 2025-01-29": [[419, "id3"]], "[0.12.2] - 2025-01-31": [[419, "id1"]], "[0.2.0] - 2022-11-10": [[419, "id135"]], "[0.2.1] - 2022-12-01": [[419, "id133"]], "[0.2.2] - 2023-01-13": [[419, "id129"]], "[0.2.3] - 2023-03-14": [[419, "id125"]], "[0.2.4] - 2023-03-24": [[419, "id121"]], "[0.3.0] - 2023-06-27": [[419, "id117"]], "[0.3.1] - 2023-07-17": [[419, "id113"]], "[0.3.2] - 2023-07-24": [[419, "id110"]], "[0.4.0] - 2023-08-16": [[419, "id106"]], "[0.4.1] - 2023-08-23": [[419, "id102"]], "[0.4.2] - 2023-08-29": [[419, "id98"]], "[0.5.0] - 2023-09-15": [[419, "id95"]], "[0.5.1] - 2023-10-19": [[419, "id91"]], "[0.6.0] - 2023-11-17": [[419, "id86"]], "[0.6.1] - 2023-11-27": [[419, "id82"]], "[0.7.0] - 2023-12-04": [[419, "id78"]], "[0.7.1] - 2023-12-07": [[419, "id74"]], "[0.7.2] - 2024-01-24": [[419, "id68"]], "[0.7.3] - 2024-02-09": [[419, "id62"]], "[0.7.4] - 2024-02-28": [[419, "id57"]], "[0.8.0] - 2024-02-29": [[419, "id54"]], "[0.8.1] - 2024-03-11": [[419, "id50"]], "[0.8.2] - 2024-03-27": [[419, "id46"]], "[0.9.0] - 2024-05-21": [[419, "id40"]], "[0.9.1] - 2024-06-04": [[419, "id37"]], "[Unreleased]": [[419, "unreleased"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[20, null]], "baybe.acquisition.partial": [[22, null]], "baybe.acquisition.utils": [[24, null]], "baybe.acquisition.utils.convert_acqf": [[25, null]], "baybe.acquisition.utils.str_to_acqf": [[26, null]], "baybe.campaign": [[27, null]], "baybe.constraints": [[29, null]], "baybe.constraints.base": [[30, null]], "baybe.constraints.conditions": [[36, null]], "baybe.constraints.continuous": [[40, null]], "baybe.constraints.deprecation": [[43, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[44, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[45, null]], "baybe.constraints.deprecation.structure_constraints": [[46, null]], "baybe.constraints.discrete": [[47, null]], "baybe.constraints.validation": [[57, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[58, null]], "baybe.constraints.validation.validate_constraints": [[59, null]], "baybe.exceptions": [[60, null]], "baybe.exceptions.DeprecationError": [[61, null]], "baybe.exceptions.EmptySearchSpaceError": [[62, null]], "baybe.exceptions.IncompatibilityError": [[63, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[64, null]], "baybe.exceptions.IncompatibleArgumentError": [[65, null]], "baybe.exceptions.IncompatibleExplainerError": [[66, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[67, null]], "baybe.exceptions.InvalidSurrogateModelError": [[68, null]], "baybe.exceptions.InvalidTargetValueError": [[69, null]], "baybe.exceptions.ModelNotTrainedError": [[70, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[71, null]], "baybe.exceptions.NoRecommendersLeftError": [[72, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[73, null]], "baybe.exceptions.NothingToSimulateError": [[74, null]], "baybe.exceptions.NumericalUnderflowError": [[75, null]], "baybe.exceptions.OptionalImportError": [[76, null]], "baybe.exceptions.UnidentifiedSubclassError": [[77, null]], "baybe.exceptions.UnmatchedAttributeError": [[78, null]], "baybe.exceptions.UnusedObjectWarning": [[79, null]], "baybe.insights": [[80, null]], "baybe.insights.shap": [[81, null]], "baybe.insights.shap.EXPLAINERS": [[82, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[83, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[85, null]], "baybe.insights.shap.SHAP_PLOTS": [[86, null]], "baybe.insights.shap.is_shap_explainer": [[87, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[88, null]], "baybe.kernels": [[89, null]], "baybe.kernels.base": [[90, null]], "baybe.kernels.basic": [[94, null]], "baybe.kernels.composite": [[103, null]], "baybe.objective": [[107, null]], "baybe.objective.Objective": [[108, null]], "baybe.objectives": [[109, null]], "baybe.objectives.base": [[110, null]], "baybe.objectives.base.to_objective": [[112, null]], "baybe.objectives.deprecation": [[113, null]], "baybe.objectives.deprecation.structure_objective": [[114, null]], "baybe.objectives.desirability": [[115, null]], "baybe.objectives.desirability.scalarize": [[117, null]], "baybe.objectives.enum": [[118, null]], "baybe.objectives.single": [[120, null]], "baybe.parameters": [[122, null]], "baybe.parameters.base": [[123, null]], "baybe.parameters.categorical": [[127, null]], "baybe.parameters.custom": [[130, null]], "baybe.parameters.enum": [[132, null]], "baybe.parameters.numerical": [[137, null]], "baybe.parameters.substance": [[140, null]], "baybe.parameters.substance.Smiles": [[141, null]], "baybe.parameters.utils": [[143, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[144, null]], "baybe.parameters.utils.sort_parameters": [[145, null]], "baybe.parameters.validation": [[146, null]], "baybe.parameters.validation.validate_decorrelation": [[147, null]], "baybe.parameters.validation.validate_is_finite": [[148, null]], "baybe.parameters.validation.validate_unique_values": [[149, null]], "baybe.priors": [[150, null]], "baybe.priors.base": [[151, null]], "baybe.priors.basic": [[153, null]], "baybe.recommenders": [[161, null]], "baybe.recommenders.base": [[162, null]], "baybe.recommenders.meta": [[164, null]], "baybe.recommenders.meta.base": [[165, null]], "baybe.recommenders.meta.sequential": [[167, null]], "baybe.recommenders.naive": [[172, null]], "baybe.recommenders.pure": [[174, null]], "baybe.recommenders.pure.base": [[175, null]], "baybe.recommenders.pure.bayesian": [[177, null]], "baybe.recommenders.pure.bayesian.base": [[178, null]], "baybe.recommenders.pure.bayesian.botorch": [[180, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[182, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[183, null]], "baybe.recommenders.pure.nonpredictive": [[184, null]], "baybe.recommenders.pure.nonpredictive.base": [[185, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[187, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[192, null]], "baybe.searchspace": [[195, null]], "baybe.searchspace.continuous": [[196, null]], "baybe.searchspace.core": [[198, null]], "baybe.searchspace.core.to_searchspace": [[201, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[202, null]], "baybe.searchspace.discrete": [[203, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[206, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[207, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[208, null]], "baybe.searchspace.validation": [[209, null]], "baybe.searchspace.validation.get_transform_parameters": [[210, null]], "baybe.searchspace.validation.validate_parameter_names": [[211, null]], "baybe.searchspace.validation.validate_parameters": [[212, null]], "baybe.serialization": [[213, null]], "baybe.serialization.core": [[214, null]], "baybe.serialization.core.block_deserialization_hook": [[215, null]], "baybe.serialization.core.block_serialization_hook": [[216, null]], "baybe.serialization.core.converter": [[217, null]], "baybe.serialization.core.get_base_structure_hook": [[218, null]], "baybe.serialization.core.select_constructor_hook": [[219, null]], "baybe.serialization.core.unstructure_base": [[220, null]], "baybe.serialization.mixin": [[221, null]], "baybe.serialization.utils": [[223, null]], "baybe.serialization.utils.deserialize_dataframe": [[224, null]], "baybe.serialization.utils.serialize_dataframe": [[225, null]], "baybe.simulation": [[226, null]], "baybe.simulation.core": [[227, null]], "baybe.simulation.core.simulate_experiment": [[228, null]], "baybe.simulation.lookup": [[229, null]], "baybe.simulation.lookup.look_up_targets": [[230, null]], "baybe.simulation.scenarios": [[231, null]], "baybe.simulation.scenarios.simulate_scenarios": [[232, null]], "baybe.simulation.transfer_learning": [[233, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[234, null]], "baybe.surrogates": [[235, null]], "baybe.surrogates.bandit": [[236, null]], "baybe.surrogates.base": [[238, null]], "baybe.surrogates.custom": [[242, null]], "baybe.surrogates.custom.register_custom_architecture": [[244, null]], "baybe.surrogates.gaussian_process": [[245, null]], "baybe.surrogates.gaussian_process.core": [[246, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[248, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[251, null]], "baybe.surrogates.gaussian_process.presets": [[252, null]], "baybe.surrogates.gaussian_process.presets.core": [[253, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[255, null]], "baybe.surrogates.gaussian_process.presets.default": [[256, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[258, null]], "baybe.surrogates.linear": [[260, null]], "baybe.surrogates.naive": [[262, null]], "baybe.surrogates.ngboost": [[264, null]], "baybe.surrogates.random_forest": [[266, null]], "baybe.surrogates.utils": [[268, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[269, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[270, null]], "baybe.surrogates.utils.catch_constant_targets": [[271, null]], "baybe.surrogates.validation": [[272, null]], "baybe.surrogates.validation.get_model_params_validator": [[273, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[274, null]], "baybe.targets": [[275, null]], "baybe.targets.base": [[276, null]], "baybe.targets.binary": [[278, null]], "baybe.targets.binary.ChoiceValue": [[280, null]], "baybe.targets.enum": [[281, null]], "baybe.targets.numerical": [[284, null]], "baybe.targets.transforms": [[286, null]], "baybe.targets.transforms.bell_transform": [[287, null]], "baybe.targets.transforms.linear_transform": [[288, null]], "baybe.targets.transforms.triangular_transform": [[289, null]], "baybe.telemetry": [[290, null]], "baybe.telemetry.get_user_details": [[291, null]], "baybe.telemetry.is_enabled": [[292, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[293, null]], "baybe.telemetry.telemetry_record_value": [[294, null]], "baybe.utils": [[295, null]], "baybe.utils.augmentation": [[296, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[297, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[298, null]], "baybe.utils.basic": [[299, null]], "baybe.utils.basic.UNSPECIFIED": [[301, null]], "baybe.utils.basic.find_subclass": [[304, null]], "baybe.utils.basic.get_baseclasses": [[305, null]], "baybe.utils.basic.get_subclasses": [[306, null]], "baybe.utils.basic.group_duplicate_values": [[307, null]], "baybe.utils.basic.hilberts_factory": [[308, null]], "baybe.utils.basic.is_all_instance": [[309, null]], "baybe.utils.basic.match_attributes": [[310, null]], "baybe.utils.basic.refers_to": [[311, null]], "baybe.utils.basic.register_hooks": [[312, null]], "baybe.utils.basic.to_tuple": [[313, null]], "baybe.utils.boolean": [[314, null]], "baybe.utils.boolean.check_if_in": [[315, null]], "baybe.utils.boolean.is_abstract": [[316, null]], "baybe.utils.boolean.strtobool": [[317, null]], "baybe.utils.chemistry": [[318, null]], "baybe.utils.chemistry.get_canonical_smiles": [[319, null]], "baybe.utils.chemistry.get_fingerprint_class": [[320, null]], "baybe.utils.chemistry.name_to_smiles": [[321, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[322, null]], "baybe.utils.conversion": [[323, null]], "baybe.utils.conversion.fraction_to_float": [[324, null]], "baybe.utils.conversion.nonstring_to_tuple": [[325, null]], "baybe.utils.dataframe": [[326, null]], "baybe.utils.dataframe.add_fake_measurements": [[327, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[328, null]], "baybe.utils.dataframe.add_parameter_noise": [[329, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[330, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[331, null]], "baybe.utils.dataframe.df_drop_string_columns": [[332, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[333, null]], "baybe.utils.dataframe.filter_df": [[334, null]], "baybe.utils.dataframe.fuzzy_row_match": [[335, null]], "baybe.utils.dataframe.get_transform_objects": [[336, null]], "baybe.utils.dataframe.pretty_print_df": [[337, null]], "baybe.utils.dataframe.to_tensor": [[338, null]], "baybe.utils.interval": [[339, null]], "baybe.utils.interval.InfiniteIntervalError": [[340, null]], "baybe.utils.interval.convert_bounds": [[342, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[343, null]], "baybe.utils.memory": [[344, null]], "baybe.utils.memory.bytes_to_human_readable": [[345, null]], "baybe.utils.numerical": [[346, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[347, null]], "baybe.utils.numerical.DTypeFloatONNX": [[348, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[349, null]], "baybe.utils.numerical.closer_element": [[350, null]], "baybe.utils.numerical.closest_element": [[351, null]], "baybe.utils.numerical.geom_mean": [[352, null]], "baybe.utils.plotting": [[353, null]], "baybe.utils.plotting.create_example_plots": [[354, null]], "baybe.utils.plotting.indent": [[355, null]], "baybe.utils.plotting.to_string": [[356, null]], "baybe.utils.random": [[357, null]], "baybe.utils.random.set_random_seed": [[358, null]], "baybe.utils.random.temporary_seed": [[359, null]], "baybe.utils.sampling_algorithms": [[360, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[362, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[363, null]], "baybe.utils.scaling": [[364, null]], "baybe.utils.torch": [[366, null]], "baybe.utils.torch.DTypeFloatTorch": [[367, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[368, null]], "baybe.utils.validation": [[369, null]], "baybe.utils.validation.finite_float": [[370, null]], "baybe.utils.validation.non_inf_float": [[371, null]], "baybe.utils.validation.non_nan_float": [[372, null]], "baybe.utils.validation.validate_not_nan": [[373, null]], "classproperty": [[303, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[418, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNoisyExpectedImprovement": [[12, null]], "qNegIntegratedPosteriorVariance": [[13, null]], "qNoisyExpectedImprovement": [[14, null]], "qPosteriorStandardDeviation": [[15, null]], "qProbabilityOfImprovement": [[16, null]], "qSimpleRegret": [[17, null]], "qThompsonSampling": [[18, null]], "qUpperConfidenceBound": [[19, null]], "\u201cPre-training\u201d stage": [[395, "pre-training-stage"]], "\u26a1 Quick Start": [[417, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[417, "maintainers"]], "\ud83d\udcbb Installation": [[417, "installation"]], "\ud83d\udcc4 License": [[417, "license"]], "\ud83d\udce1 Telemetry": [[417, "telemetry"]], "\ud83d\udd0b Batteries Included": [[417, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[417, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objective", "_autosummary/baybe.objective.Objective", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.deprecation", "_autosummary/baybe.objectives.deprecation.structure_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.get_model_params_validator", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.plotting", "_autosummary/baybe.utils.plotting.create_example_plots", "_autosummary/baybe.utils.plotting.indent", "_autosummary/baybe.utils.plotting.to_string", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objective.rst", "_autosummary/baybe.objective.Objective.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.deprecation.rst", "_autosummary/baybe.objectives.deprecation.structure_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.get_model_params_validator.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.plotting.rst", "_autosummary/baybe.utils.plotting.create_example_plots.rst", "_autosummary/baybe.utils.plotting.indent.rst", "_autosummary/baybe.utils.plotting.to_string.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[21, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[31, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[32, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[33, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[61, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[62, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[63, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[64, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[65, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[66, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[67, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[68, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[69, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[70, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[71, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[72, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[73, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[74, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[75, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[76, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[77, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[78, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[79, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[84, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[91, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[92, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[93, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[95, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[96, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[97, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[99, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[100, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[101, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[102, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[104, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[105, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[106, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[111, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[116, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[121, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[126, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[152, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[154, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[155, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[156, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[157, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[158, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[159, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[160, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[163, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[176, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[199, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[204, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[240, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[241, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[249, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[257, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[259, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[277, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[279, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[285, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[303, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[300, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[340, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[341, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[365, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[61, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[62, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[63, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[64, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[65, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[66, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[67, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[68, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[69, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[70, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[71, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[72, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[73, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[74, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[75, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[76, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[77, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[78, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[79, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[133, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[134, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[136, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[340, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[160, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[21, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function_cls", false]], "acquisition_function_cls (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function_cls", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[21, "baybe.acquisition.base.AcquisitionFunction", false]], "active_values (baybe.parameters.categorical.taskparameter attribute)": [[129, "baybe.parameters.categorical.TaskParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[327, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[328, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[329, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[104, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[176, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[176, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[176, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[154, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[330, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[160, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[84, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[106, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[104, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[105, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[91, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[269, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[270, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[254, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[20, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[22, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[24, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[27, "module-baybe.campaign", false]], "baybe.constraints": [[29, "module-baybe.constraints", false]], "baybe.constraints.base": [[30, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[36, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[40, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[43, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[47, "module-baybe.constraints.discrete", false]], "baybe.constraints.validation": [[57, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[60, "module-baybe.exceptions", false]], "baybe.insights": [[80, "module-baybe.insights", false]], "baybe.insights.shap": [[81, "module-baybe.insights.shap", false]], "baybe.kernels": [[89, "module-baybe.kernels", false]], "baybe.kernels.base": [[90, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[94, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[103, "module-baybe.kernels.composite", false]], "baybe.objective": [[107, "module-baybe.objective", false]], "baybe.objectives": [[109, "module-baybe.objectives", false]], "baybe.objectives.base": [[110, "module-baybe.objectives.base", false]], "baybe.objectives.deprecation": [[113, "module-baybe.objectives.deprecation", false]], "baybe.objectives.desirability": [[115, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[118, "module-baybe.objectives.enum", false]], "baybe.objectives.single": [[120, "module-baybe.objectives.single", false]], "baybe.parameters": [[122, "module-baybe.parameters", false]], "baybe.parameters.base": [[123, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[127, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[130, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[132, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[137, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[140, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[143, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[146, "module-baybe.parameters.validation", false]], "baybe.priors": [[150, "module-baybe.priors", false]], "baybe.priors.base": [[151, "module-baybe.priors.base", false]], "baybe.priors.basic": [[153, "module-baybe.priors.basic", false]], "baybe.recommenders": [[161, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[162, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[164, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[165, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[167, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[172, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[174, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[175, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[177, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[178, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[180, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[182, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[184, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[185, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[187, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[192, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[195, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[196, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[198, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[203, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[209, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[213, "module-baybe.serialization", false]], "baybe.serialization.core": [[214, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[221, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[223, "module-baybe.serialization.utils", false]], "baybe.simulation": [[226, "module-baybe.simulation", false]], "baybe.simulation.core": [[227, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[229, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[231, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[233, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[235, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[236, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[238, "module-baybe.surrogates.base", false]], "baybe.surrogates.custom": [[242, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[245, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[246, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[248, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[252, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[253, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[256, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[258, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[260, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[262, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[264, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[266, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[268, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[272, "module-baybe.surrogates.validation", false]], "baybe.targets": [[275, "module-baybe.targets", false]], "baybe.targets.base": [[276, "module-baybe.targets.base", false]], "baybe.targets.binary": [[278, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[281, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[284, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[286, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[290, "module-baybe.telemetry", false]], "baybe.utils": [[295, "module-baybe.utils", false]], "baybe.utils.augmentation": [[296, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[299, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[314, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[318, "module-baybe.utils.chemistry", false]], "baybe.utils.conversion": [[323, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[326, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[339, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[344, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[346, "module-baybe.utils.numerical", false]], "baybe.utils.plotting": [[353, "module-baybe.utils.plotting", false]], "baybe.utils.random": [[357, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[360, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[364, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[366, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[369, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[283, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[287, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[154, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[154, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[279, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[215, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[216, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[285, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[345, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[28, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[31, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[271, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[133, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[128, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[341, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[315, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[280, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[303, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[350, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[351, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[365, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[125, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[128, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[129, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[142, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[204, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[124, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[125, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[126, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[128, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[129, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[142, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[204, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[204, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[176, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[92, "baybe.kernels.base.CompositeKernel", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[155, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[37, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[32, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[341, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[199, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[200, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[33, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[44, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[45, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[124, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[25, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[342, "baybe.utils.interval.convert_bounds", false]], "converter (in module baybe.serialization.core)": [[217, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[341, "baybe.utils.interval.Interval.create", false]], "create_example_plots() (in module baybe.utils.plotting)": [[354, "baybe.utils.plotting.create_example_plots", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[134, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[131, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[134, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "default_model() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.default_model", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[257, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[61, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[224, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[116, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[297, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[298, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[331, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[332, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[333, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[199, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[200, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[125, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[361, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[347, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[348, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[367, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[300, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[259, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[200, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[62, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[125, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[128, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[129, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[199, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[204, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[204, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[204, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[84, "baybe.insights.shap.SHAPInsight.explain", false]], "explainer (baybe.insights.shap.shapinsight attribute)": [[84, "baybe.insights.shap.SHAPInsight.explainer", false]], "explainers (in module baybe.insights.shap)": [[82, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[279, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[362, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[334, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[304, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[370, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[240, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[241, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[365, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[361, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[324, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[84, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[28, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[199, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[21, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[28, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[31, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[32, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[33, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[35, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[37, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[39, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[91, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[92, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[93, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[95, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[96, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[97, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[99, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[100, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[101, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[102, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[104, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[105, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[106, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[111, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[116, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[121, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[124, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[125, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[126, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[128, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[129, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[142, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[152, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[154, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[155, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[156, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[157, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[158, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[159, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[160, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[199, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[222, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[240, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[277, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[279, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[285, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[341, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[21, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[28, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[31, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[32, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[33, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[35, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[37, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[39, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[91, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[92, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[93, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[95, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[96, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[97, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[99, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[100, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[101, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[102, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[104, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[105, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[106, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[111, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[116, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[121, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[124, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[125, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[126, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[128, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[129, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[142, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[152, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[154, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[155, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[156, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[157, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[158, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[159, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[160, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[199, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[222, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[240, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[277, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[279, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[285, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[341, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[199, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[199, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[84, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[84, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[335, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[155, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[254, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[119, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[352, "baybe.utils.numerical.geom_mean", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[218, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[305, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[319, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[199, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[320, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_model_params_validator() (in module baybe.surrogates.validation)": [[273, "baybe.surrogates.validation.get_model_params_validator", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[199, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[144, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_subclasses() (in module baybe.utils.basic)": [[306, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[336, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[210, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[291, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[307, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[156, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[157, "baybe.priors.basic.HalfNormalPrior", false]], "hilberts_factory() (in module baybe.utils.basic)": [[308, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[200, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "incompatibilityerror": [[63, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[64, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[65, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[66, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[67, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "indent() (in module baybe.utils.plotting)": [[355, "baybe.utils.plotting.indent", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infiniteintervalerror": [[340, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[133, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[341, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[68, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[69, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[316, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[309, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[341, "baybe.utils.interval.Interval.is_bounded", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[31, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[32, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[33, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[35, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[124, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[125, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[126, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[128, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[129, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[142, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[341, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[31, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[32, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[33, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[35, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[124, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[125, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[126, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[128, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[129, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[142, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[292, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[341, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[341, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[126, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[341, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[124, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[125, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[126, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[128, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[129, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[341, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[87, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[166, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[93, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[249, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[96, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[97, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[100, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[101, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[102, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[96, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[97, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[100, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[101, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[102, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[283, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[288, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[95, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[158, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[159, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[158, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[230, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[341, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[88, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[255, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[365, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[282, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[310, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[96, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[282, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[119, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[28, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[204, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[166, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[282, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[285, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[70, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [20, "module-baybe.acquisition.base", false], [22, "module-baybe.acquisition.partial", false], [24, "module-baybe.acquisition.utils", false], [27, "module-baybe.campaign", false], [29, "module-baybe.constraints", false], [30, "module-baybe.constraints.base", false], [36, "module-baybe.constraints.conditions", false], [40, "module-baybe.constraints.continuous", false], [43, "module-baybe.constraints.deprecation", false], [47, "module-baybe.constraints.discrete", false], [57, "module-baybe.constraints.validation", false], [60, "module-baybe.exceptions", false], [80, "module-baybe.insights", false], [81, "module-baybe.insights.shap", false], [89, "module-baybe.kernels", false], [90, "module-baybe.kernels.base", false], [94, "module-baybe.kernels.basic", false], [103, "module-baybe.kernels.composite", false], [107, "module-baybe.objective", false], [109, "module-baybe.objectives", false], [110, "module-baybe.objectives.base", false], [113, "module-baybe.objectives.deprecation", false], [115, "module-baybe.objectives.desirability", false], [118, "module-baybe.objectives.enum", false], [120, "module-baybe.objectives.single", false], [122, "module-baybe.parameters", false], [123, "module-baybe.parameters.base", false], [127, "module-baybe.parameters.categorical", false], [130, "module-baybe.parameters.custom", false], [132, "module-baybe.parameters.enum", false], [137, "module-baybe.parameters.numerical", false], [140, "module-baybe.parameters.substance", false], [143, "module-baybe.parameters.utils", false], [146, "module-baybe.parameters.validation", false], [150, "module-baybe.priors", false], [151, "module-baybe.priors.base", false], [153, "module-baybe.priors.basic", false], [161, "module-baybe.recommenders", false], [162, "module-baybe.recommenders.base", false], [164, "module-baybe.recommenders.meta", false], [165, "module-baybe.recommenders.meta.base", false], [167, "module-baybe.recommenders.meta.sequential", false], [172, "module-baybe.recommenders.naive", false], [174, "module-baybe.recommenders.pure", false], [175, "module-baybe.recommenders.pure.base", false], [177, "module-baybe.recommenders.pure.bayesian", false], [178, "module-baybe.recommenders.pure.bayesian.base", false], [180, "module-baybe.recommenders.pure.bayesian.botorch", false], [182, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [184, "module-baybe.recommenders.pure.nonpredictive", false], [185, "module-baybe.recommenders.pure.nonpredictive.base", false], [187, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [192, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [195, "module-baybe.searchspace", false], [196, "module-baybe.searchspace.continuous", false], [198, "module-baybe.searchspace.core", false], [203, "module-baybe.searchspace.discrete", false], [209, "module-baybe.searchspace.validation", false], [213, "module-baybe.serialization", false], [214, "module-baybe.serialization.core", false], [221, "module-baybe.serialization.mixin", false], [223, "module-baybe.serialization.utils", false], [226, "module-baybe.simulation", false], [227, "module-baybe.simulation.core", false], [229, "module-baybe.simulation.lookup", false], [231, "module-baybe.simulation.scenarios", false], [233, "module-baybe.simulation.transfer_learning", false], [235, "module-baybe.surrogates", false], [236, "module-baybe.surrogates.bandit", false], [238, "module-baybe.surrogates.base", false], [242, "module-baybe.surrogates.custom", false], [245, "module-baybe.surrogates.gaussian_process", false], [246, "module-baybe.surrogates.gaussian_process.core", false], [248, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [252, "module-baybe.surrogates.gaussian_process.presets", false], [253, "module-baybe.surrogates.gaussian_process.presets.core", false], [256, "module-baybe.surrogates.gaussian_process.presets.default", false], [258, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [260, "module-baybe.surrogates.linear", false], [262, "module-baybe.surrogates.naive", false], [264, "module-baybe.surrogates.ngboost", false], [266, "module-baybe.surrogates.random_forest", false], [268, "module-baybe.surrogates.utils", false], [272, "module-baybe.surrogates.validation", false], [275, "module-baybe.targets", false], [276, "module-baybe.targets.base", false], [278, "module-baybe.targets.binary", false], [281, "module-baybe.targets.enum", false], [284, "module-baybe.targets.numerical", false], [286, "module-baybe.targets.transforms", false], [290, "module-baybe.telemetry", false], [295, "module-baybe.utils", false], [296, "module-baybe.utils.augmentation", false], [299, "module-baybe.utils.basic", false], [314, "module-baybe.utils.boolean", false], [318, "module-baybe.utils.chemistry", false], [323, "module-baybe.utils.conversion", false], [326, "module-baybe.utils.dataframe", false], [339, "module-baybe.utils.interval", false], [344, "module-baybe.utils.memory", false], [346, "module-baybe.utils.numerical", false], [353, "module-baybe.utils.plotting", false], [357, "module-baybe.utils.random", false], [360, "module-baybe.utils.sampling_algorithms", false], [364, "module-baybe.utils.scaling", false], [366, "module-baybe.utils.torch", false], [369, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.n_fits_done", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[124, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[125, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[126, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[128, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[129, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[142, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[277, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[279, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[285, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[321, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[71, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "non_inf_float() (in module baybe.utils.validation)": [[371, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[372, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[83, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[325, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[72, "baybe.exceptions.NoRecommendersLeftError", false]], "normalprior (class in baybe.priors.basic)": [[159, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[73, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[74, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[96, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[101, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[285, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[75, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[111, "baybe.objectives.base.Objective", false]], "objective() (in module baybe.objective)": [[108, "baybe.objective.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[99, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[99, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[133, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[39, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[76, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[106, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[106, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[126, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[206, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[207, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameterencoding (class in baybe.parameters.enum)": [[135, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[28, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[31, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[32, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[33, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[35, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[97, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[97, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[97, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[84, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[99, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[240, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[99, "baybe.kernels.basic.PolynomialKernel.power", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[337, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[152, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[105, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[176, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[361, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[155, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[100, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[163, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[173, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[176, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[186, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[188, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[189, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[190, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[193, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[194, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[163, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "refers_to() (in module baybe.utils.basic)": [[311, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[244, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[312, "baybe.utils.basic.register_hooks", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "rffkernel (class in baybe.kernels.basic)": [[101, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[102, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[363, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[117, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[116, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[119, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[156, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[157, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[158, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[159, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[106, "baybe.kernels.composite.ScaleKernel", false]], "searchspace (baybe.campaign.campaign attribute)": [[28, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[199, "baybe.searchspace.core.SearchSpace", false]], "searchspacetype (class in baybe.searchspace.core)": [[200, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[219, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[38, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[183, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[225, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[222, "baybe.serialization.mixin.SerialMixin", false]], "set_random_seed() (in module baybe.utils.random)": [[358, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[23, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[85, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[86, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[84, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[160, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[228, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[232, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[234, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[121, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[191, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[141, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[322, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[160, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[145, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[26, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[317, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[46, "baybe.constraints.deprecation.structure_constraints", false]], "structure_objective() (in module baybe.objectives.deprecation)": [[114, "baybe.objectives.deprecation.structure_objective", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[38, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[197, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[136, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[142, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[279, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[31, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[32, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[33, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[126, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[277, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[279, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[285, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[240, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[240, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[179, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[181, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[241, "baybe.surrogates.base.SurrogateProtocol", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[277, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[282, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[28, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[111, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[116, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[121, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[283, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[129, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[293, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[294, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[359, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[39, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[39, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[21, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[240, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[241, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[21, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[31, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[32, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[33, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[91, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[92, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[93, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[95, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[96, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[97, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[99, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[100, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[101, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[102, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[104, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[105, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[106, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[111, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[116, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[121, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[126, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[152, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[154, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[155, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[156, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[157, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[158, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[159, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[160, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[199, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[222, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[240, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[277, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[279, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[285, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[341, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[91, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[92, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[93, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[95, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[96, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[97, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[99, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[100, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[101, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[102, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[104, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[105, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[106, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[91, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[92, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[93, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[95, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[96, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[97, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[99, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[100, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[101, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[102, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[104, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[105, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[106, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[152, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[154, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[155, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[156, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[157, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[158, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[159, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[160, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[12, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[13, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[15, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[16, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[17, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[18, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[19, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[21, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[31, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[32, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[33, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[34, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[35, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[41, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[42, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[48, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[50, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[51, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[52, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[54, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[55, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[56, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[91, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[92, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[93, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[95, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[96, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[97, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[98, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[99, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[100, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[101, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[102, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[104, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[105, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[106, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[111, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[116, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[121, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[126, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[152, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[154, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[155, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[156, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[157, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[158, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[159, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[160, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[166, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[168, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[169, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[170, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[199, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[222, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[237, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[239, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[240, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[247, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[250, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[261, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[263, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[265, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[267, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[277, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[279, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[285, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[341, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[251, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[341, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[277, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[279, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[285, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[112, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[37, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[38, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[39, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[126, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[201, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.plotting)": [[356, "baybe.utils.plotting.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[124, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[138, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[341, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[338, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[341, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[313, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[28, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[39, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[111, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[116, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[121, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[125, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[128, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[129, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[142, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[197, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[199, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[205, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[277, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[279, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[285, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[365, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[285, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[283, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[289, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[171, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[199, "baybe.searchspace.core.SearchSpace.type", false]], "unidentifiedsubclasserror": [[77, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[78, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[301, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[302, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[220, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[79, "baybe.exceptions.UnusedObjectWarning", false]], "upper (baybe.utils.interval.interval attribute)": [[341, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[343, "baybe.utils.interval.use_fallback_constructor_hook", false]], "uses_shap_explainer (baybe.insights.shap.shapinsight property)": [[84, "baybe.insights.shap.SHAPInsight.uses_shap_explainer", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[58, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[243, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[28, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[59, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[274, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[147, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[148, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[373, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[211, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[212, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[202, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[208, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[149, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[49, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[125, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[128, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[129, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[131, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[139, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[142, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[95, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[95, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[349, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[368, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[116, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[136, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [27, 0, 0, "-", "campaign"], [29, 0, 0, "-", "constraints"], [60, 0, 0, "-", "exceptions"], [80, 0, 0, "-", "insights"], [89, 0, 0, "-", "kernels"], [107, 0, 0, "-", "objective"], [109, 0, 0, "-", "objectives"], [122, 0, 0, "-", "parameters"], [150, 0, 0, "-", "priors"], [161, 0, 0, "-", "recommenders"], [195, 0, 0, "-", "searchspace"], [213, 0, 0, "-", "serialization"], [226, 0, 0, "-", "simulation"], [235, 0, 0, "-", "surrogates"], [275, 0, 0, "-", "targets"], [290, 0, 0, "-", "telemetry"], [295, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [20, 0, 0, "-", "base"], [22, 0, 0, "-", "partial"], [24, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNoisyExpectedImprovement"], [13, 1, 1, "", "qNegIntegratedPosteriorVariance"], [14, 1, 1, "", "qNoisyExpectedImprovement"], [15, 1, 1, "", "qPosteriorStandardDeviation"], [16, 1, 1, "", "qProbabilityOfImprovement"], [17, 1, 1, "", "qSimpleRegret"], [18, 1, 1, "", "qThompsonSampling"], [19, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 2, 1, "", "get_integration_points"], [13, 3, 1, "", "sampling_fraction"], [13, 3, 1, "", "sampling_method"], [13, 3, 1, "", "sampling_n_points"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[13, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "n_mc_samples"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 3, 1, "", "beta"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.base": [[21, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.partial": [[23, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "botorch_acqf"], [23, 3, 1, "", "pin_discrete"], [23, 3, 1, "", "pinned_part"], [23, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[23, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[25, 5, 1, "", "convert_acqf"], [26, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[28, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "add_measurements"], [28, 3, 1, "", "allow_recommending_already_measured"], [28, 3, 1, "", "allow_recommending_already_recommended"], [28, 3, 1, "", "allow_recommending_pending_experiments"], [28, 2, 1, "", "from_config"], [28, 2, 1, "", "from_dict"], [28, 2, 1, "", "from_json"], [28, 2, 1, "", "get_surrogate"], [28, 6, 1, "", "measurements"], [28, 3, 1, "", "n_batches_done"], [28, 3, 1, "", "n_fits_done"], [28, 3, 1, "", "objective"], [28, 6, 1, "", "parameters"], [28, 2, 1, "", "posterior"], [28, 2, 1, "", "recommend"], [28, 3, 1, "", "recommender"], [28, 3, 1, "", "searchspace"], [28, 6, 1, "", "targets"], [28, 2, 1, "", "to_dict"], [28, 2, 1, "", "to_json"], [28, 2, 1, "", "toggle_discrete_candidates"], [28, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.add_measurements.params": [[28, 4, 1, "", "data"], [28, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[28, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[28, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[28, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_surrogate.params": [[28, 4, 1, "", "batch_size"], [28, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[28, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.recommend.params": [[28, 4, 1, "", "batch_size"], [28, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[28, 4, 1, "", "complement"], [28, 4, 1, "", "constraints"], [28, 4, 1, "", "dry_run"], [28, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.validate_config.params": [[28, 4, 1, "", "config_json"]], "baybe.constraints": [[30, 0, 0, "-", "base"], [36, 0, 0, "-", "conditions"], [40, 0, 0, "-", "continuous"], [43, 0, 0, "-", "deprecation"], [47, 0, 0, "-", "discrete"], [57, 0, 0, "-", "validation"]], "baybe.constraints.base": [[31, 1, 1, "", "CardinalityConstraint"], [32, 1, 1, "", "Constraint"], [33, 1, 1, "", "ContinuousConstraint"], [34, 1, 1, "", "ContinuousNonlinearConstraint"], [35, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "eval_during_augmentation"], [31, 3, 1, "", "eval_during_creation"], [31, 3, 1, "", "eval_during_modeling"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 6, 1, "", "is_continuous"], [31, 6, 1, "", "is_discrete"], [31, 3, 1, "", "max_cardinality"], [31, 3, 1, "", "min_cardinality"], [31, 3, 1, "", "numerical_only"], [31, 3, 1, "", "parameters"], [31, 2, 1, "", "summary"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[31, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[32, 2, 1, "", "__init__"], [32, 3, 1, "", "eval_during_augmentation"], [32, 3, 1, "", "eval_during_creation"], [32, 3, 1, "", "eval_during_modeling"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_json"], [32, 6, 1, "", "is_continuous"], [32, 6, 1, "", "is_discrete"], [32, 3, 1, "", "numerical_only"], [32, 3, 1, "", "parameters"], [32, 2, 1, "", "summary"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[32, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[32, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "eval_during_augmentation"], [33, 3, 1, "", "eval_during_creation"], [33, 3, 1, "", "eval_during_modeling"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_json"], [33, 6, 1, "", "is_continuous"], [33, 6, 1, "", "is_discrete"], [33, 3, 1, "", "numerical_only"], [33, 3, 1, "", "parameters"], [33, 2, 1, "", "summary"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[33, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[33, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 2, 1, "", "get_invalid"], [35, 2, 1, "", "get_invalid_polars"], [35, 2, 1, "", "get_valid"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[35, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[35, 4, 1, "", "df"]], "baybe.constraints.conditions": [[37, 1, 1, "", "Condition"], [38, 1, 1, "", "SubSelectionCondition"], [39, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[37, 2, 1, "", "evaluate"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"], [37, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[37, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[37, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "evaluate"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 6, 1, "", "selection"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"], [38, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[38, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[38, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "evaluate"], [39, 2, 1, "", "from_dict"], [39, 2, 1, "", "from_json"], [39, 3, 1, "", "operator"], [39, 3, 1, "", "threshold"], [39, 2, 1, "", "to_dict"], [39, 2, 1, "", "to_json"], [39, 2, 1, "", "to_polars"], [39, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[39, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[39, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[39, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[39, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[41, 1, 1, "", "ContinuousCardinalityConstraint"], [42, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[41, 2, 1, "", "__init__"], [41, 3, 1, "", "eval_during_augmentation"], [41, 3, 1, "", "eval_during_creation"], [41, 3, 1, "", "eval_during_modeling"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "is_continuous"], [41, 6, 1, "", "is_discrete"], [41, 3, 1, "", "max_cardinality"], [41, 3, 1, "", "min_cardinality"], [41, 3, 1, "", "numerical_only"], [41, 3, 1, "", "parameters"], [41, 2, 1, "", "sample_inactive_parameters"], [41, 2, 1, "", "summary"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[41, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[42, 2, 1, "", "__init__"], [42, 3, 1, "", "coefficients"], [42, 3, 1, "", "eval_during_augmentation"], [42, 3, 1, "", "eval_during_creation"], [42, 3, 1, "", "eval_during_modeling"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 6, 1, "", "is_continuous"], [42, 6, 1, "", "is_discrete"], [42, 6, 1, "", "is_eq"], [42, 3, 1, "", "numerical_only"], [42, 3, 1, "", "operator"], [42, 3, 1, "", "parameters"], [42, 3, 1, "", "rhs"], [42, 2, 1, "", "summary"], [42, 2, 1, "", "to_botorch"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[42, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[42, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[42, 4, 1, "", "idx_offset"], [42, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[44, 5, 1, "", "ContinuousLinearEqualityConstraint"], [45, 5, 1, "", "ContinuousLinearInequalityConstraint"], [46, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[48, 1, 1, "", "DiscreteCardinalityConstraint"], [49, 1, 1, "", "DiscreteCustomConstraint"], [50, 1, 1, "", "DiscreteDependenciesConstraint"], [51, 1, 1, "", "DiscreteExcludeConstraint"], [52, 1, 1, "", "DiscreteLinkedParametersConstraint"], [53, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [54, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [55, 1, 1, "", "DiscreteProductConstraint"], [56, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[48, 2, 1, "", "__init__"], [48, 3, 1, "", "eval_during_augmentation"], [48, 3, 1, "", "eval_during_creation"], [48, 3, 1, "", "eval_during_modeling"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "from_json"], [48, 2, 1, "", "get_invalid"], [48, 2, 1, "", "get_invalid_polars"], [48, 2, 1, "", "get_valid"], [48, 6, 1, "", "is_continuous"], [48, 6, 1, "", "is_discrete"], [48, 3, 1, "", "max_cardinality"], [48, 3, 1, "", "min_cardinality"], [48, 3, 1, "", "numerical_only"], [48, 3, 1, "", "parameters"], [48, 2, 1, "", "summary"], [48, 2, 1, "", "to_dict"], [48, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[48, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[48, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[48, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[48, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "eval_during_augmentation"], [49, 3, 1, "", "eval_during_creation"], [49, 3, 1, "", "eval_during_modeling"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_json"], [49, 2, 1, "", "get_invalid"], [49, 2, 1, "", "get_invalid_polars"], [49, 2, 1, "", "get_valid"], [49, 6, 1, "", "is_continuous"], [49, 6, 1, "", "is_discrete"], [49, 3, 1, "", "numerical_only"], [49, 3, 1, "", "parameters"], [49, 2, 1, "", "summary"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_json"], [49, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[49, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[49, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[49, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[49, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[50, 2, 1, "", "__init__"], [50, 3, 1, "", "affected_parameters"], [50, 3, 1, "", "conditions"], [50, 3, 1, "", "eval_during_augmentation"], [50, 3, 1, "", "eval_during_creation"], [50, 3, 1, "", "eval_during_modeling"], [50, 2, 1, "", "from_dict"], [50, 2, 1, "", "from_json"], [50, 2, 1, "", "get_invalid"], [50, 2, 1, "", "get_invalid_polars"], [50, 2, 1, "", "get_valid"], [50, 6, 1, "", "is_continuous"], [50, 6, 1, "", "is_discrete"], [50, 3, 1, "", "numerical_only"], [50, 3, 1, "", "parameters"], [50, 3, 1, "", "permutation_invariant"], [50, 2, 1, "", "summary"], [50, 2, 1, "", "to_dict"], [50, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[50, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[50, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[50, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[50, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "combiner"], [51, 3, 1, "", "conditions"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "dependencies"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "condition"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "condition"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.validation": [[58, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [59, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[58, 4, 1, "", "constraints"]], "baybe.exceptions": [[61, 7, 1, "", "DeprecationError"], [62, 7, 1, "", "EmptySearchSpaceError"], [63, 7, 1, "", "IncompatibilityError"], [64, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [65, 7, 1, "", "IncompatibleArgumentError"], [66, 7, 1, "", "IncompatibleExplainerError"], [67, 7, 1, "", "IncompatibleSearchSpaceError"], [68, 7, 1, "", "InvalidSurrogateModelError"], [69, 7, 1, "", "InvalidTargetValueError"], [70, 7, 1, "", "ModelNotTrainedError"], [71, 7, 1, "", "NoMCAcquisitionFunctionError"], [72, 7, 1, "", "NoRecommendersLeftError"], [73, 7, 1, "", "NotEnoughPointsLeftError"], [74, 7, 1, "", "NothingToSimulateError"], [75, 7, 1, "", "NumericalUnderflowError"], [76, 7, 1, "", "OptionalImportError"], [77, 7, 1, "", "UnidentifiedSubclassError"], [78, 7, 1, "", "UnmatchedAttributeError"], [79, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.insights": [[81, 0, 0, "-", "shap"]], "baybe.insights.shap": [[82, 8, 1, "", "EXPLAINERS"], [83, 8, 1, "", "NON_SHAP_EXPLAINERS"], [84, 1, 1, "", "SHAPInsight"], [85, 8, 1, "", "SHAP_EXPLAINERS"], [86, 8, 1, "", "SHAP_PLOTS"], [87, 5, 1, "", "is_shap_explainer"], [88, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[84, 2, 1, "", "__init__"], [84, 3, 1, "", "background_data"], [84, 2, 1, "", "explain"], [84, 3, 1, "", "explainer"], [84, 2, 1, "", "from_campaign"], [84, 2, 1, "", "from_recommender"], [84, 2, 1, "", "from_surrogate"], [84, 2, 1, "", "plot"], [84, 6, 1, "", "uses_shap_explainer"]], "baybe.insights.shap.SHAPInsight.explain.params": [[84, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[84, 4, 1, "", "campaign"], [84, 4, 1, "", "explainer_cls"], [84, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[84, 4, 1, "", "explainer_cls"], [84, 4, 1, "", "measurements"], [84, 4, 1, "", "objective"], [84, 4, 1, "", "recommender"], [84, 4, 1, "", "searchspace"], [84, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[84, 4, 1, "", "**kwargs"], [84, 4, 1, "", "data"], [84, 4, 1, "", "explanation_index"], [84, 4, 1, "", "plot_type"], [84, 4, 1, "", "show"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[88, 4, 1, "", "data"], [88, 4, 1, "", "explainer_cls"], [88, 4, 1, "", "surrogate"], [88, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[90, 0, 0, "-", "base"], [94, 0, 0, "-", "basic"], [103, 0, 0, "-", "composite"]], "baybe.kernels.base": [[91, 1, 1, "", "BasicKernel"], [92, 1, 1, "", "CompositeKernel"], [93, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "from_dict"], [91, 2, 1, "", "from_json"], [91, 2, 1, "", "to_dict"], [91, 2, 1, "", "to_factory"], [91, 2, 1, "", "to_gpytorch"], [91, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[91, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[91, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "from_dict"], [92, 2, 1, "", "from_json"], [92, 2, 1, "", "to_dict"], [92, 2, 1, "", "to_factory"], [92, 2, 1, "", "to_gpytorch"], [92, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[92, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[92, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "from_dict"], [93, 2, 1, "", "from_json"], [93, 2, 1, "", "to_dict"], [93, 2, 1, "", "to_factory"], [93, 2, 1, "", "to_gpytorch"], [93, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[93, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[93, 4, 1, "", "string"]], "baybe.kernels.basic": [[95, 1, 1, "", "LinearKernel"], [96, 1, 1, "", "MaternKernel"], [97, 1, 1, "", "PeriodicKernel"], [98, 1, 1, "", "PiecewisePolynomialKernel"], [99, 1, 1, "", "PolynomialKernel"], [100, 1, 1, "", "RBFKernel"], [101, 1, 1, "", "RFFKernel"], [102, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "from_dict"], [95, 2, 1, "", "from_json"], [95, 2, 1, "", "to_dict"], [95, 2, 1, "", "to_factory"], [95, 2, 1, "", "to_gpytorch"], [95, 2, 1, "", "to_json"], [95, 3, 1, "", "variance_initial_value"], [95, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[95, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[95, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[96, 2, 1, "", "__init__"], [96, 2, 1, "", "from_dict"], [96, 2, 1, "", "from_json"], [96, 3, 1, "", "lengthscale_initial_value"], [96, 3, 1, "", "lengthscale_prior"], [96, 3, 1, "", "nu"], [96, 2, 1, "", "to_dict"], [96, 2, 1, "", "to_factory"], [96, 2, 1, "", "to_gpytorch"], [96, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[96, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[96, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "from_dict"], [97, 2, 1, "", "from_json"], [97, 3, 1, "", "lengthscale_initial_value"], [97, 3, 1, "", "lengthscale_prior"], [97, 3, 1, "", "period_length_initial_value"], [97, 3, 1, "", "period_length_prior"], [97, 2, 1, "", "to_dict"], [97, 2, 1, "", "to_factory"], [97, 2, 1, "", "to_gpytorch"], [97, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[97, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[97, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "from_dict"], [98, 2, 1, "", "from_json"], [98, 3, 1, "", "lengthscale_initial_value"], [98, 3, 1, "", "lengthscale_prior"], [98, 3, 1, "", "q"], [98, 2, 1, "", "to_dict"], [98, 2, 1, "", "to_factory"], [98, 2, 1, "", "to_gpytorch"], [98, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[98, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[98, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "from_dict"], [99, 2, 1, "", "from_json"], [99, 3, 1, "", "offset_initial_value"], [99, 3, 1, "", "offset_prior"], [99, 3, 1, "", "power"], [99, 2, 1, "", "to_dict"], [99, 2, 1, "", "to_factory"], [99, 2, 1, "", "to_gpytorch"], [99, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[99, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[99, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[100, 2, 1, "", "__init__"], [100, 2, 1, "", "from_dict"], [100, 2, 1, "", "from_json"], [100, 3, 1, "", "lengthscale_initial_value"], [100, 3, 1, "", "lengthscale_prior"], [100, 2, 1, "", "to_dict"], [100, 2, 1, "", "to_factory"], [100, 2, 1, "", "to_gpytorch"], [100, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[100, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[100, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "from_dict"], [101, 2, 1, "", "from_json"], [101, 3, 1, "", "lengthscale_initial_value"], [101, 3, 1, "", "lengthscale_prior"], [101, 3, 1, "", "num_samples"], [101, 2, 1, "", "to_dict"], [101, 2, 1, "", "to_factory"], [101, 2, 1, "", "to_gpytorch"], [101, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[101, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[101, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "from_dict"], [102, 2, 1, "", "from_json"], [102, 3, 1, "", "lengthscale_initial_value"], [102, 3, 1, "", "lengthscale_prior"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "to_factory"], [102, 2, 1, "", "to_gpytorch"], [102, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[102, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[102, 4, 1, "", "string"]], "baybe.kernels.composite": [[104, 1, 1, "", "AdditiveKernel"], [105, 1, 1, "", "ProductKernel"], [106, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[104, 2, 1, "", "__init__"], [104, 3, 1, "", "base_kernels"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[105, 2, 1, "", "__init__"], [105, 3, 1, "", "base_kernels"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_factory"], [105, 2, 1, "", "to_gpytorch"], [105, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[105, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[106, 2, 1, "", "__init__"], [106, 3, 1, "", "base_kernel"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 3, 1, "", "outputscale_initial_value"], [106, 3, 1, "", "outputscale_prior"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_factory"], [106, 2, 1, "", "to_gpytorch"], [106, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[106, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[106, 4, 1, "", "string"]], "baybe.objective": [[108, 5, 1, "", "Objective"]], "baybe.objectives": [[110, 0, 0, "-", "base"], [113, 0, 0, "-", "deprecation"], [115, 0, 0, "-", "desirability"], [118, 0, 0, "-", "enum"], [120, 0, 0, "-", "single"]], "baybe.objectives.base": [[111, 1, 1, "", "Objective"], [112, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 6, 1, "", "targets"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_json"], [111, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[111, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[111, 4, 1, "", "allow_extra"], [111, 4, 1, "", "allow_missing"], [111, 4, 1, "", "df"]], "baybe.objectives.deprecation": [[114, 5, 1, "", "structure_objective"]], "baybe.objectives.desirability": [[116, 1, 1, "", "DesirabilityObjective"], [117, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "from_dict"], [116, 2, 1, "", "from_json"], [116, 3, 1, "", "scalarizer"], [116, 6, 1, "", "targets"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "to_json"], [116, 2, 1, "", "transform"], [116, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[116, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[116, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[116, 4, 1, "", "allow_extra"], [116, 4, 1, "", "allow_missing"], [116, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[117, 4, 1, "", "scalarizer"], [117, 4, 1, "", "values"], [117, 4, 1, "", "weights"]], "baybe.objectives.enum": [[119, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[119, 3, 1, "", "GEOM_MEAN"], [119, 3, 1, "", "MEAN"]], "baybe.objectives.single": [[121, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "from_dict"], [121, 2, 1, "", "from_json"], [121, 6, 1, "", "targets"], [121, 2, 1, "", "to_dict"], [121, 2, 1, "", "to_json"], [121, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[121, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[121, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[121, 4, 1, "", "allow_extra"], [121, 4, 1, "", "allow_missing"], [121, 4, 1, "", "df"]], "baybe.parameters": [[123, 0, 0, "-", "base"], [127, 0, 0, "-", "categorical"], [130, 0, 0, "-", "custom"], [132, 0, 0, "-", "enum"], [137, 0, 0, "-", "numerical"], [140, 0, 0, "-", "substance"], [143, 0, 0, "-", "utils"], [146, 0, 0, "-", "validation"]], "baybe.parameters.base": [[124, 1, 1, "", "ContinuousParameter"], [125, 1, 1, "", "DiscreteParameter"], [126, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[124, 2, 1, "", "__init__"], [124, 6, 1, "", "comp_rep_columns"], [124, 2, 1, "", "from_dict"], [124, 2, 1, "", "from_json"], [124, 6, 1, "", "is_continuous"], [124, 6, 1, "", "is_discrete"], [124, 2, 1, "", "is_in_range"], [124, 3, 1, "", "is_numerical"], [124, 3, 1, "", "name"], [124, 2, 1, "", "summary"], [124, 2, 1, "", "to_dict"], [124, 2, 1, "", "to_json"], [124, 2, 1, "", "to_searchspace"], [124, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[124, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[124, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[124, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[125, 2, 1, "", "__init__"], [125, 6, 1, "", "comp_df"], [125, 6, 1, "", "comp_rep_columns"], [125, 3, 1, "", "encoding"], [125, 2, 1, "", "from_dict"], [125, 2, 1, "", "from_json"], [125, 6, 1, "", "is_continuous"], [125, 6, 1, "", "is_discrete"], [125, 2, 1, "", "is_in_range"], [125, 3, 1, "", "is_numerical"], [125, 3, 1, "", "name"], [125, 2, 1, "", "summary"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "to_json"], [125, 2, 1, "", "to_searchspace"], [125, 2, 1, "", "to_subspace"], [125, 2, 1, "", "transform"], [125, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[125, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[125, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[125, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[125, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[126, 2, 1, "", "__init__"], [126, 6, 1, "", "comp_rep_columns"], [126, 2, 1, "", "from_dict"], [126, 2, 1, "", "from_json"], [126, 6, 1, "", "is_continuous"], [126, 6, 1, "", "is_discrete"], [126, 2, 1, "", "is_in_range"], [126, 3, 1, "", "is_numerical"], [126, 3, 1, "", "name"], [126, 2, 1, "", "summary"], [126, 2, 1, "", "to_dict"], [126, 2, 1, "", "to_json"], [126, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[126, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[126, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[126, 4, 1, "", "item"]], "baybe.parameters.categorical": [[128, 1, 1, "", "CategoricalParameter"], [129, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[128, 2, 1, "", "__init__"], [128, 6, 1, "", "comp_df"], [128, 6, 1, "", "comp_rep_columns"], [128, 3, 1, "", "encoding"], [128, 2, 1, "", "from_dict"], [128, 2, 1, "", "from_json"], [128, 6, 1, "", "is_continuous"], [128, 6, 1, "", "is_discrete"], [128, 2, 1, "", "is_in_range"], [128, 3, 1, "", "is_numerical"], [128, 3, 1, "", "name"], [128, 2, 1, "", "summary"], [128, 2, 1, "", "to_dict"], [128, 2, 1, "", "to_json"], [128, 2, 1, "", "to_searchspace"], [128, 2, 1, "", "to_subspace"], [128, 2, 1, "", "transform"], [128, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[128, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[128, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[128, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[128, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[129, 2, 1, "", "__init__"], [129, 3, 1, "", "active_values"], [129, 6, 1, "", "comp_df"], [129, 6, 1, "", "comp_rep_columns"], [129, 3, 1, "", "encoding"], [129, 2, 1, "", "from_dict"], [129, 2, 1, "", "from_json"], [129, 6, 1, "", "is_continuous"], [129, 6, 1, "", "is_discrete"], [129, 2, 1, "", "is_in_range"], [129, 3, 1, "", "is_numerical"], [129, 3, 1, "", "name"], [129, 2, 1, "", "summary"], [129, 2, 1, "", "to_dict"], [129, 2, 1, "", "to_json"], [129, 2, 1, "", "to_searchspace"], [129, 2, 1, "", "to_subspace"], [129, 2, 1, "", "transform"], [129, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[129, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[129, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[129, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[129, 4, 1, "", "series"]], "baybe.parameters.custom": [[131, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[131, 2, 1, "", "__init__"], [131, 6, 1, "", "comp_df"], [131, 6, 1, "", "comp_rep_columns"], [131, 3, 1, "", "data"], [131, 3, 1, "", "decorrelate"], [131, 3, 1, "", "encoding"], [131, 2, 1, "", "from_dict"], [131, 2, 1, "", "from_json"], [131, 6, 1, "", "is_continuous"], [131, 6, 1, "", "is_discrete"], [131, 2, 1, "", "is_in_range"], [131, 3, 1, "", "is_numerical"], [131, 3, 1, "", "name"], [131, 2, 1, "", "summary"], [131, 2, 1, "", "to_dict"], [131, 2, 1, "", "to_json"], [131, 2, 1, "", "to_searchspace"], [131, 2, 1, "", "to_subspace"], [131, 2, 1, "", "transform"], [131, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[131, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[131, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[131, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[131, 4, 1, "", "series"]], "baybe.parameters.enum": [[133, 1, 1, "", "CategoricalEncoding"], [134, 1, 1, "", "CustomEncoding"], [135, 1, 1, "", "ParameterEncoding"], [136, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[133, 3, 1, "", "INT"], [133, 3, 1, "", "OHE"], [133, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[134, 3, 1, "", "CUSTOM"], [134, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[136, 3, 1, "", "ATOMPAIR"], [136, 3, 1, "", "AUTOCORR"], [136, 3, 1, "", "AVALON"], [136, 3, 1, "", "BCUT2D"], [136, 3, 1, "", "E3FP"], [136, 3, 1, "", "ECFP"], [136, 3, 1, "", "ELECTROSHAPE"], [136, 3, 1, "", "ERG"], [136, 3, 1, "", "ESTATE"], [136, 3, 1, "", "FUNCTIONALGROUPS"], [136, 3, 1, "", "GETAWAY"], [136, 3, 1, "", "GHOSECRIPPEN"], [136, 3, 1, "", "KLEKOTAROTH"], [136, 3, 1, "", "LAGGNER"], [136, 3, 1, "", "LAYERED"], [136, 3, 1, "", "LINGO"], [136, 3, 1, "", "MACCS"], [136, 3, 1, "", "MAP"], [136, 3, 1, "", "MHFP"], [136, 3, 1, "", "MORDRED"], [136, 3, 1, "", "MORGAN_FP"], [136, 3, 1, "", "MORSE"], [136, 3, 1, "", "MQNS"], [136, 3, 1, "", "PATTERN"], [136, 3, 1, "", "PHARMACOPHORE"], [136, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [136, 3, 1, "", "PUBCHEM"], [136, 3, 1, "", "RDF"], [136, 3, 1, "", "RDKIT"], [136, 3, 1, "", "RDKIT2DDESCRIPTORS"], [136, 3, 1, "", "RDKITFINGERPRINT"], [136, 3, 1, "", "SECFP"], [136, 3, 1, "", "TOPOLOGICALTORSION"], [136, 3, 1, "", "USR"], [136, 3, 1, "", "USRCAT"], [136, 3, 1, "", "VSA"], [136, 3, 1, "", "WHIM"], [136, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[138, 1, 1, "", "NumericalContinuousParameter"], [139, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[138, 2, 1, "", "__init__"], [138, 3, 1, "", "bounds"], [138, 6, 1, "", "comp_rep_columns"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 6, 1, "", "is_continuous"], [138, 6, 1, "", "is_discrete"], [138, 2, 1, "", "is_in_range"], [138, 3, 1, "", "is_numerical"], [138, 3, 1, "", "name"], [138, 2, 1, "", "summary"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_json"], [138, 2, 1, "", "to_searchspace"], [138, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[138, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[138, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[138, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[139, 2, 1, "", "__init__"], [139, 6, 1, "", "comp_df"], [139, 6, 1, "", "comp_rep_columns"], [139, 3, 1, "", "encoding"], [139, 2, 1, "", "from_dict"], [139, 2, 1, "", "from_json"], [139, 6, 1, "", "is_continuous"], [139, 6, 1, "", "is_discrete"], [139, 2, 1, "", "is_in_range"], [139, 3, 1, "", "is_numerical"], [139, 3, 1, "", "name"], [139, 2, 1, "", "summary"], [139, 2, 1, "", "to_dict"], [139, 2, 1, "", "to_json"], [139, 2, 1, "", "to_searchspace"], [139, 2, 1, "", "to_subspace"], [139, 3, 1, "", "tolerance"], [139, 2, 1, "", "transform"], [139, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[139, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[139, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[139, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[139, 4, 1, "", "series"]], "baybe.parameters.substance": [[141, 3, 1, "", "Smiles"], [142, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[142, 2, 1, "", "__init__"], [142, 6, 1, "", "comp_df"], [142, 6, 1, "", "comp_rep_columns"], [142, 3, 1, "", "data"], [142, 3, 1, "", "decorrelate"], [142, 3, 1, "", "encoding"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 6, 1, "", "is_continuous"], [142, 6, 1, "", "is_discrete"], [142, 2, 1, "", "is_in_range"], [142, 3, 1, "", "is_numerical"], [142, 3, 1, "", "kwargs_conformer"], [142, 3, 1, "", "kwargs_fingerprint"], [142, 3, 1, "", "name"], [142, 2, 1, "", "summary"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_json"], [142, 2, 1, "", "to_searchspace"], [142, 2, 1, "", "to_subspace"], [142, 2, 1, "", "transform"], [142, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[142, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[142, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[142, 4, 1, "", "series"]], "baybe.parameters.utils": [[144, 5, 1, "", "get_parameters_from_dataframe"], [145, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[144, 4, 1, "", "df"], [144, 4, 1, "", "factory"], [144, 4, 1, "", "parameters"]], "baybe.parameters.validation": [[147, 5, 1, "", "validate_decorrelation"], [148, 5, 1, "", "validate_is_finite"], [149, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[151, 0, 0, "-", "base"], [153, 0, 0, "-", "basic"]], "baybe.priors.base": [[152, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_json"], [152, 2, 1, "", "to_dict"], [152, 2, 1, "", "to_gpytorch"], [152, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[152, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[152, 4, 1, "", "string"]], "baybe.priors.basic": [[154, 1, 1, "", "BetaPrior"], [155, 1, 1, "", "GammaPrior"], [156, 1, 1, "", "HalfCauchyPrior"], [157, 1, 1, "", "HalfNormalPrior"], [158, 1, 1, "", "LogNormalPrior"], [159, 1, 1, "", "NormalPrior"], [160, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[154, 2, 1, "", "__init__"], [154, 3, 1, "", "alpha"], [154, 3, 1, "", "beta"], [154, 2, 1, "", "from_dict"], [154, 2, 1, "", "from_json"], [154, 2, 1, "", "to_dict"], [154, 2, 1, "", "to_gpytorch"], [154, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[154, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[154, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[155, 2, 1, "", "__init__"], [155, 3, 1, "", "concentration"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 3, 1, "", "rate"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_gpytorch"], [155, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[155, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_json"], [156, 3, 1, "", "scale"], [156, 2, 1, "", "to_dict"], [156, 2, 1, "", "to_gpytorch"], [156, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[156, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[156, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "from_dict"], [157, 2, 1, "", "from_json"], [157, 3, 1, "", "scale"], [157, 2, 1, "", "to_dict"], [157, 2, 1, "", "to_gpytorch"], [157, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[157, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[157, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "from_dict"], [158, 2, 1, "", "from_json"], [158, 3, 1, "", "loc"], [158, 3, 1, "", "scale"], [158, 2, 1, "", "to_dict"], [158, 2, 1, "", "to_gpytorch"], [158, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[158, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[158, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "from_dict"], [159, 2, 1, "", "from_json"], [159, 3, 1, "", "loc"], [159, 3, 1, "", "scale"], [159, 2, 1, "", "to_dict"], [159, 2, 1, "", "to_gpytorch"], [159, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[159, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[159, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[160, 2, 1, "", "__init__"], [160, 3, 1, "", "a"], [160, 3, 1, "", "b"], [160, 2, 1, "", "from_dict"], [160, 2, 1, "", "from_json"], [160, 3, 1, "", "sigma"], [160, 2, 1, "", "to_dict"], [160, 2, 1, "", "to_gpytorch"], [160, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[160, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[160, 4, 1, "", "string"]], "baybe.recommenders": [[162, 0, 0, "-", "base"], [164, 0, 0, "-", "meta"], [172, 0, 0, "-", "naive"], [174, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[163, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[163, 4, 1, "", "batch_size"], [163, 4, 1, "", "measurements"], [163, 4, 1, "", "objective"], [163, 4, 1, "", "pending_experiments"], [163, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[165, 0, 0, "-", "base"], [167, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[166, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "from_dict"], [166, 2, 1, "", "from_json"], [166, 2, 1, "", "get_current_recommender"], [166, 2, 1, "", "get_next_recommender"], [166, 2, 1, "", "get_non_meta_recommender"], [166, 6, 1, "", "is_stateful"], [166, 2, 1, "", "recommend"], [166, 2, 1, "", "select_recommender"], [166, 2, 1, "", "to_dict"], [166, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[166, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[166, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[168, 1, 1, "", "BaseSequentialMetaRecommender"], [169, 1, 1, "", "SequentialMetaRecommender"], [170, 1, 1, "", "StreamingSequentialMetaRecommender"], [171, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "from_dict"], [168, 2, 1, "", "from_json"], [168, 2, 1, "", "get_current_recommender"], [168, 2, 1, "", "get_next_recommender"], [168, 2, 1, "", "get_non_meta_recommender"], [168, 6, 1, "", "is_stateful"], [168, 2, 1, "", "recommend"], [168, 2, 1, "", "select_recommender"], [168, 2, 1, "", "to_dict"], [168, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[168, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[168, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "from_dict"], [169, 2, 1, "", "from_json"], [169, 2, 1, "", "get_current_recommender"], [169, 2, 1, "", "get_next_recommender"], [169, 2, 1, "", "get_non_meta_recommender"], [169, 6, 1, "", "is_stateful"], [169, 3, 1, "", "mode"], [169, 2, 1, "", "recommend"], [169, 3, 1, "", "recommenders"], [169, 2, 1, "", "select_recommender"], [169, 2, 1, "", "to_dict"], [169, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[169, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[169, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 2, 1, "", "get_current_recommender"], [170, 2, 1, "", "get_next_recommender"], [170, 2, 1, "", "get_non_meta_recommender"], [170, 6, 1, "", "is_stateful"], [170, 2, 1, "", "recommend"], [170, 3, 1, "", "recommenders"], [170, 2, 1, "", "select_recommender"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[170, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 2, 1, "", "get_current_recommender"], [171, 2, 1, "", "get_next_recommender"], [171, 2, 1, "", "get_non_meta_recommender"], [171, 3, 1, "", "initial_recommender"], [171, 6, 1, "", "is_stateful"], [171, 2, 1, "", "recommend"], [171, 3, 1, "", "recommender"], [171, 3, 1, "", "remain_switched"], [171, 2, 1, "", "select_recommender"], [171, 3, 1, "", "switch_after"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[171, 4, 1, "", "string"]], "baybe.recommenders.naive": [[173, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[173, 2, 1, "", "__init__"], [173, 6, 1, "", "allow_recommending_already_measured"], [173, 6, 1, "", "allow_recommending_pending_experiments"], [173, 6, 1, "", "allow_repeated_recommendations"], [173, 3, 1, "", "compatibility"], [173, 3, 1, "", "cont_recommender"], [173, 3, 1, "", "disc_recommender"], [173, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[173, 4, 1, "", "batch_size"], [173, 4, 1, "", "measurements"], [173, 4, 1, "", "objective"], [173, 4, 1, "", "pending_experiments"], [173, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[175, 0, 0, "-", "base"], [177, 0, 0, "-", "bayesian"], [184, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[176, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[176, 2, 1, "", "__init__"], [176, 6, 1, "", "allow_recommending_already_measured"], [176, 6, 1, "", "allow_recommending_pending_experiments"], [176, 6, 1, "", "allow_repeated_recommendations"], [176, 3, 1, "", "compatibility"], [176, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[176, 4, 1, "", "batch_size"], [176, 4, 1, "", "measurements"], [176, 4, 1, "", "objective"], [176, 4, 1, "", "pending_experiments"], [176, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[178, 0, 0, "-", "base"], [180, 0, 0, "-", "botorch"], [182, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[179, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[179, 2, 1, "", "__init__"], [179, 3, 1, "", "acquisition_function"], [179, 3, 1, "", "acquisition_function_cls"], [179, 6, 1, "", "allow_recommending_already_measured"], [179, 6, 1, "", "allow_recommending_pending_experiments"], [179, 6, 1, "", "allow_repeated_recommendations"], [179, 3, 1, "", "compatibility"], [179, 2, 1, "", "get_surrogate"], [179, 2, 1, "", "recommend"], [179, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[179, 4, 1, "", "batch_size"], [179, 4, 1, "", "measurements"], [179, 4, 1, "", "objective"], [179, 4, 1, "", "pending_experiments"], [179, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[181, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[181, 2, 1, "", "__init__"], [181, 3, 1, "", "acquisition_function"], [181, 3, 1, "", "acquisition_function_cls"], [181, 6, 1, "", "allow_recommending_already_measured"], [181, 6, 1, "", "allow_recommending_pending_experiments"], [181, 6, 1, "", "allow_repeated_recommendations"], [181, 3, 1, "", "compatibility"], [181, 2, 1, "", "get_surrogate"], [181, 3, 1, "", "hybrid_sampler"], [181, 3, 1, "", "n_raw_samples"], [181, 3, 1, "", "n_restarts"], [181, 2, 1, "", "recommend"], [181, 3, 1, "", "sampling_percentage"], [181, 3, 1, "", "sequential_continuous"], [181, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[181, 4, 1, "", "batch_size"], [181, 4, 1, "", "measurements"], [181, 4, 1, "", "objective"], [181, 4, 1, "", "pending_experiments"], [181, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[183, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[185, 0, 0, "-", "base"], [187, 0, 0, "-", "clustering"], [192, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[186, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[186, 2, 1, "", "__init__"], [186, 6, 1, "", "allow_recommending_already_measured"], [186, 6, 1, "", "allow_recommending_pending_experiments"], [186, 6, 1, "", "allow_repeated_recommendations"], [186, 3, 1, "", "compatibility"], [186, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[186, 4, 1, "", "batch_size"], [186, 4, 1, "", "measurements"], [186, 4, 1, "", "objective"], [186, 4, 1, "", "pending_experiments"], [186, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[188, 1, 1, "", "GaussianMixtureClusteringRecommender"], [189, 1, 1, "", "KMeansClusteringRecommender"], [190, 1, 1, "", "PAMClusteringRecommender"], [191, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[188, 2, 1, "", "__init__"], [188, 6, 1, "", "allow_recommending_already_measured"], [188, 6, 1, "", "allow_recommending_pending_experiments"], [188, 6, 1, "", "allow_repeated_recommendations"], [188, 3, 1, "", "compatibility"], [188, 3, 1, "", "model_cluster_num_parameter_name"], [188, 3, 1, "", "model_params"], [188, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[188, 4, 1, "", "batch_size"], [188, 4, 1, "", "measurements"], [188, 4, 1, "", "objective"], [188, 4, 1, "", "pending_experiments"], [188, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[189, 2, 1, "", "__init__"], [189, 6, 1, "", "allow_recommending_already_measured"], [189, 6, 1, "", "allow_recommending_pending_experiments"], [189, 6, 1, "", "allow_repeated_recommendations"], [189, 3, 1, "", "compatibility"], [189, 3, 1, "", "model_cluster_num_parameter_name"], [189, 3, 1, "", "model_params"], [189, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[189, 4, 1, "", "batch_size"], [189, 4, 1, "", "measurements"], [189, 4, 1, "", "objective"], [189, 4, 1, "", "pending_experiments"], [189, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[190, 2, 1, "", "__init__"], [190, 6, 1, "", "allow_recommending_already_measured"], [190, 6, 1, "", "allow_recommending_pending_experiments"], [190, 6, 1, "", "allow_repeated_recommendations"], [190, 3, 1, "", "compatibility"], [190, 3, 1, "", "model_cluster_num_parameter_name"], [190, 3, 1, "", "model_params"], [190, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[190, 4, 1, "", "batch_size"], [190, 4, 1, "", "measurements"], [190, 4, 1, "", "objective"], [190, 4, 1, "", "pending_experiments"], [190, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[191, 2, 1, "", "__init__"], [191, 6, 1, "", "allow_recommending_already_measured"], [191, 6, 1, "", "allow_recommending_pending_experiments"], [191, 6, 1, "", "allow_repeated_recommendations"], [191, 3, 1, "", "compatibility"], [191, 3, 1, "", "model_cluster_num_parameter_name"], [191, 3, 1, "", "model_params"], [191, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[191, 4, 1, "", "batch_size"], [191, 4, 1, "", "measurements"], [191, 4, 1, "", "objective"], [191, 4, 1, "", "pending_experiments"], [191, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[193, 1, 1, "", "FPSRecommender"], [194, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[193, 2, 1, "", "__init__"], [193, 6, 1, "", "allow_recommending_already_measured"], [193, 6, 1, "", "allow_recommending_pending_experiments"], [193, 6, 1, "", "allow_repeated_recommendations"], [193, 3, 1, "", "compatibility"], [193, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[193, 4, 1, "", "batch_size"], [193, 4, 1, "", "measurements"], [193, 4, 1, "", "objective"], [193, 4, 1, "", "pending_experiments"], [193, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[194, 2, 1, "", "__init__"], [194, 6, 1, "", "allow_recommending_already_measured"], [194, 6, 1, "", "allow_recommending_pending_experiments"], [194, 6, 1, "", "allow_repeated_recommendations"], [194, 3, 1, "", "compatibility"], [194, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[194, 4, 1, "", "batch_size"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.searchspace": [[196, 0, 0, "-", "continuous"], [198, 0, 0, "-", "core"], [203, 0, 0, "-", "discrete"], [209, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[197, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[197, 2, 1, "", "__init__"], [197, 6, 1, "", "comp_rep_bounds"], [197, 6, 1, "", "comp_rep_columns"], [197, 6, 1, "", "constraints_cardinality"], [197, 3, 1, "", "constraints_lin_eq"], [197, 3, 1, "", "constraints_lin_ineq"], [197, 3, 1, "", "constraints_nonlin"], [197, 2, 1, "", "empty"], [197, 2, 1, "", "from_bounds"], [197, 2, 1, "", "from_dataframe"], [197, 2, 1, "", "from_dict"], [197, 2, 1, "", "from_json"], [197, 2, 1, "", "from_parameter"], [197, 2, 1, "", "from_product"], [197, 6, 1, "", "full_factorial"], [197, 2, 1, "", "get_parameters_by_name"], [197, 6, 1, "", "is_empty"], [197, 6, 1, "", "parameter_names"], [197, 3, 1, "", "parameters"], [197, 2, 1, "", "sample_from_full_factorial"], [197, 2, 1, "", "sample_uniform"], [197, 2, 1, "", "samples_full_factorial"], [197, 2, 1, "", "samples_random"], [197, 2, 1, "", "to_dict"], [197, 2, 1, "", "to_json"], [197, 2, 1, "", "to_searchspace"], [197, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[197, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[197, 4, 1, "", "df"], [197, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[197, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[197, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[197, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[197, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[197, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[197, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[199, 1, 1, "", "SearchSpace"], [200, 1, 1, "", "SearchSpaceType"], [201, 5, 1, "", "to_searchspace"], [202, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[199, 2, 1, "", "__init__"], [199, 6, 1, "", "comp_rep_bounds"], [199, 6, 1, "", "comp_rep_columns"], [199, 6, 1, "", "constraints"], [199, 6, 1, "", "constraints_augmentable"], [199, 3, 1, "", "continuous"], [199, 3, 1, "", "discrete"], [199, 2, 1, "", "estimate_product_space_size"], [199, 2, 1, "", "from_dataframe"], [199, 2, 1, "", "from_dict"], [199, 2, 1, "", "from_json"], [199, 2, 1, "", "from_parameter"], [199, 2, 1, "", "from_product"], [199, 2, 1, "", "get_comp_rep_parameter_indices"], [199, 2, 1, "", "get_parameters_by_name"], [199, 6, 1, "", "n_tasks"], [199, 6, 1, "", "parameter_names"], [199, 6, 1, "", "parameters"], [199, 6, 1, "", "task_idx"], [199, 2, 1, "", "to_dict"], [199, 2, 1, "", "to_json"], [199, 2, 1, "", "transform"], [199, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[199, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[199, 4, 1, "", "df"], [199, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[199, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[199, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[199, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[199, 4, 1, "", "constraints"], [199, 4, 1, "", "empty_encoding"], [199, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[199, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[199, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[199, 4, 1, "", "allow_extra"], [199, 4, 1, "", "allow_missing"], [199, 4, 1, "", "data"], [199, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[200, 3, 1, "", "CONTINUOUS"], [200, 3, 1, "", "DISCRETE"], [200, 3, 1, "", "EITHER"], [200, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[204, 1, 1, "", "MemorySize"], [205, 1, 1, "", "SubspaceDiscrete"], [206, 5, 1, "", "parameter_cartesian_prod_pandas"], [207, 5, 1, "", "parameter_cartesian_prod_polars"], [208, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[204, 2, 1, "", "__init__"], [204, 3, 1, "", "comp_rep_bytes"], [204, 6, 1, "", "comp_rep_human_readable"], [204, 3, 1, "", "comp_rep_shape"], [204, 3, 1, "", "exp_rep_bytes"], [204, 6, 1, "", "exp_rep_human_readable"], [204, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[205, 2, 1, "", "__init__"], [205, 3, 1, "", "comp_rep"], [205, 6, 1, "", "comp_rep_bounds"], [205, 6, 1, "", "comp_rep_columns"], [205, 3, 1, "", "constraints"], [205, 2, 1, "", "empty"], [205, 3, 1, "", "empty_encoding"], [205, 2, 1, "", "estimate_product_space_size"], [205, 3, 1, "", "exp_rep"], [205, 2, 1, "", "from_dataframe"], [205, 2, 1, "", "from_dict"], [205, 2, 1, "", "from_json"], [205, 2, 1, "", "from_parameter"], [205, 2, 1, "", "from_product"], [205, 2, 1, "", "from_simplex"], [205, 2, 1, "", "get_candidates"], [205, 2, 1, "", "get_parameters_by_name"], [205, 6, 1, "", "is_empty"], [205, 6, 1, "", "metadata"], [205, 6, 1, "", "parameter_names"], [205, 3, 1, "", "parameters"], [205, 2, 1, "", "to_dict"], [205, 2, 1, "", "to_json"], [205, 2, 1, "", "to_searchspace"], [205, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[205, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[205, 4, 1, "", "df"], [205, 4, 1, "", "empty_encoding"], [205, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[205, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[205, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[205, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[205, 4, 1, "", "boundary_only"], [205, 4, 1, "", "constraints"], [205, 4, 1, "", "max_nonzero"], [205, 4, 1, "", "max_sum"], [205, 4, 1, "", "min_nonzero"], [205, 4, 1, "", "product_parameters"], [205, 4, 1, "", "simplex_parameters"], [205, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[205, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[206, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[207, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[210, 5, 1, "", "get_transform_parameters"], [211, 5, 1, "", "validate_parameter_names"], [212, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[214, 0, 0, "-", "core"], [221, 0, 0, "-", "mixin"], [223, 0, 0, "-", "utils"]], "baybe.serialization.core": [[215, 5, 1, "", "block_deserialization_hook"], [216, 5, 1, "", "block_serialization_hook"], [217, 8, 1, "", "converter"], [218, 5, 1, "", "get_base_structure_hook"], [219, 5, 1, "", "select_constructor_hook"], [220, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[218, 4, 1, "", "base"], [218, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[220, 4, 1, "", "base"], [220, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[222, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[222, 2, 1, "", "from_dict"], [222, 2, 1, "", "from_json"], [222, 2, 1, "", "to_dict"], [222, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[222, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[222, 4, 1, "", "string"]], "baybe.serialization.utils": [[224, 5, 1, "", "deserialize_dataframe"], [225, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[227, 0, 0, "-", "core"], [229, 0, 0, "-", "lookup"], [231, 0, 0, "-", "scenarios"], [233, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[228, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[228, 4, 1, "", "batch_size"], [228, 4, 1, "", "campaign"], [228, 4, 1, "", "impute_mode"], [228, 4, 1, "", "initial_data"], [228, 4, 1, "", "lookup"], [228, 4, 1, "", "n_doe_iterations"], [228, 4, 1, "", "noise_percent"], [228, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[230, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[230, 4, 1, "", "impute_mode"], [230, 4, 1, "", "lookup"], [230, 4, 1, "", "queries"], [230, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[232, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[232, 4, 1, "", "batch_size"], [232, 4, 1, "", "groupby"], [232, 4, 1, "", "impute_mode"], [232, 4, 1, "", "initial_data"], [232, 4, 1, "", "lookup"], [232, 4, 1, "", "n_doe_iterations"], [232, 4, 1, "", "n_mc_iterations"], [232, 4, 1, "", "noise_percent"], [232, 4, 1, "", "random_seed"], [232, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[234, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[234, 4, 1, "", "batch_size"], [234, 4, 1, "", "campaign"], [234, 4, 1, "", "groupby"], [234, 4, 1, "", "lookup"], [234, 4, 1, "", "n_doe_iterations"], [234, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[236, 0, 0, "-", "bandit"], [238, 0, 0, "-", "base"], [242, 0, 0, "-", "custom"], [245, 0, 0, "-", "gaussian_process"], [260, 0, 0, "-", "linear"], [262, 0, 0, "-", "naive"], [264, 0, 0, "-", "ngboost"], [266, 0, 0, "-", "random_forest"], [268, 0, 0, "-", "utils"], [272, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[237, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[237, 2, 1, "", "__init__"], [237, 2, 1, "", "fit"], [237, 2, 1, "", "from_dict"], [237, 2, 1, "", "from_json"], [237, 2, 1, "", "posterior"], [237, 2, 1, "", "posterior_means"], [237, 2, 1, "", "posterior_modes"], [237, 3, 1, "", "prior"], [237, 3, 1, "", "supports_transfer_learning"], [237, 2, 1, "", "to_botorch"], [237, 2, 1, "", "to_dict"], [237, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[237, 4, 1, "", "measurements"], [237, 4, 1, "", "objective"], [237, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[237, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[237, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[237, 4, 1, "", "candidates"]], "baybe.surrogates.base": [[239, 1, 1, "", "IndependentGaussianSurrogate"], [240, 1, 1, "", "Surrogate"], [241, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[239, 2, 1, "", "__init__"], [239, 2, 1, "", "fit"], [239, 2, 1, "", "from_dict"], [239, 2, 1, "", "from_json"], [239, 2, 1, "", "posterior"], [239, 3, 1, "", "supports_transfer_learning"], [239, 2, 1, "", "to_botorch"], [239, 2, 1, "", "to_dict"], [239, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[239, 4, 1, "", "measurements"], [239, 4, 1, "", "objective"], [239, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[239, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[239, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[239, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate": [[240, 2, 1, "", "__init__"], [240, 2, 1, "", "fit"], [240, 2, 1, "", "from_dict"], [240, 2, 1, "", "from_json"], [240, 2, 1, "", "posterior"], [240, 3, 1, "", "supports_transfer_learning"], [240, 2, 1, "", "to_botorch"], [240, 2, 1, "", "to_dict"], [240, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[240, 4, 1, "", "measurements"], [240, 4, 1, "", "objective"], [240, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[240, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[240, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[240, 4, 1, "", "candidates"]], "baybe.surrogates.base.SurrogateProtocol": [[241, 2, 1, "", "__init__"], [241, 2, 1, "", "fit"], [241, 2, 1, "", "to_botorch"]], "baybe.surrogates.custom": [[243, 1, 1, "", "CustomONNXSurrogate"], [244, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[243, 2, 1, "", "__init__"], [243, 2, 1, "", "default_model"], [243, 2, 1, "", "fit"], [243, 2, 1, "", "from_dict"], [243, 2, 1, "", "from_json"], [243, 3, 1, "", "onnx_input_name"], [243, 3, 1, "", "onnx_str"], [243, 2, 1, "", "posterior"], [243, 3, 1, "", "supports_transfer_learning"], [243, 2, 1, "", "to_botorch"], [243, 2, 1, "", "to_dict"], [243, 2, 1, "", "to_json"], [243, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[243, 4, 1, "", "measurements"], [243, 4, 1, "", "objective"], [243, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[243, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[243, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[243, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[243, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[246, 0, 0, "-", "core"], [248, 0, 0, "-", "kernel_factory"], [252, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[247, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[247, 2, 1, "", "__init__"], [247, 2, 1, "", "fit"], [247, 2, 1, "", "from_dict"], [247, 2, 1, "", "from_json"], [247, 2, 1, "", "from_preset"], [247, 3, 1, "", "kernel_factory"], [247, 2, 1, "", "posterior"], [247, 3, 1, "", "supports_transfer_learning"], [247, 2, 1, "", "to_botorch"], [247, 2, 1, "", "to_dict"], [247, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[247, 4, 1, "", "measurements"], [247, 4, 1, "", "objective"], [247, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[247, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[247, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[247, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.kernel_factory": [[249, 1, 1, "", "KernelFactory"], [250, 1, 1, "", "PlainKernelFactory"], [251, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[249, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[250, 2, 1, "", "__init__"], [250, 2, 1, "", "from_dict"], [250, 2, 1, "", "from_json"], [250, 3, 1, "", "kernel"], [250, 2, 1, "", "to_dict"], [250, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[250, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[250, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[253, 0, 0, "-", "core"], [256, 0, 0, "-", "default"], [258, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[254, 1, 1, "", "GaussianProcessPreset"], [255, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[254, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[257, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[257, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[259, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[259, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[261, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[261, 2, 1, "", "__init__"], [261, 2, 1, "", "fit"], [261, 2, 1, "", "from_dict"], [261, 2, 1, "", "from_json"], [261, 3, 1, "", "model_params"], [261, 2, 1, "", "posterior"], [261, 3, 1, "", "supports_transfer_learning"], [261, 2, 1, "", "to_botorch"], [261, 2, 1, "", "to_dict"], [261, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[261, 4, 1, "", "measurements"], [261, 4, 1, "", "objective"], [261, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[261, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[261, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[261, 4, 1, "", "candidates"]], "baybe.surrogates.naive": [[263, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[263, 2, 1, "", "__init__"], [263, 2, 1, "", "fit"], [263, 2, 1, "", "from_dict"], [263, 2, 1, "", "from_json"], [263, 2, 1, "", "posterior"], [263, 3, 1, "", "supports_transfer_learning"], [263, 2, 1, "", "to_botorch"], [263, 2, 1, "", "to_dict"], [263, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[263, 4, 1, "", "measurements"], [263, 4, 1, "", "objective"], [263, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[263, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[263, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[263, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost": [[265, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[265, 2, 1, "", "__init__"], [265, 2, 1, "", "fit"], [265, 2, 1, "", "from_dict"], [265, 2, 1, "", "from_json"], [265, 3, 1, "", "model_params"], [265, 2, 1, "", "posterior"], [265, 3, 1, "", "supports_transfer_learning"], [265, 2, 1, "", "to_botorch"], [265, 2, 1, "", "to_dict"], [265, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[265, 4, 1, "", "measurements"], [265, 4, 1, "", "objective"], [265, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[265, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[265, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[265, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest": [[267, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[267, 2, 1, "", "__init__"], [267, 2, 1, "", "fit"], [267, 2, 1, "", "from_dict"], [267, 2, 1, "", "from_json"], [267, 3, 1, "", "model_params"], [267, 2, 1, "", "posterior"], [267, 3, 1, "", "supports_transfer_learning"], [267, 2, 1, "", "to_botorch"], [267, 2, 1, "", "to_dict"], [267, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[267, 4, 1, "", "measurements"], [267, 4, 1, "", "objective"], [267, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[267, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[267, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[267, 4, 1, "", "candidates"]], "baybe.surrogates.utils": [[269, 5, 1, "", "batchify_ensemble_predictor"], [270, 5, 1, "", "batchify_mean_var_prediction"], [271, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[269, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[271, 4, 1, "", "cls"], [271, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[273, 5, 1, "", "get_model_params_validator"], [274, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.get_model_params_validator.params": [[273, 4, 1, "", "model_init"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[274, 4, 1, "", "model_cls"]], "baybe.targets": [[276, 0, 0, "-", "base"], [278, 0, 0, "-", "binary"], [281, 0, 0, "-", "enum"], [284, 0, 0, "-", "numerical"], [286, 0, 0, "-", "transforms"]], "baybe.targets.base": [[277, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[277, 2, 1, "", "__init__"], [277, 2, 1, "", "from_dict"], [277, 2, 1, "", "from_json"], [277, 3, 1, "", "name"], [277, 2, 1, "", "summary"], [277, 2, 1, "", "to_dict"], [277, 2, 1, "", "to_json"], [277, 2, 1, "", "to_objective"], [277, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[277, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[277, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[277, 4, 1, "", "series"]], "baybe.targets.binary": [[279, 1, 1, "", "BinaryTarget"], [280, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[279, 2, 1, "", "__init__"], [279, 3, 1, "", "failure_value"], [279, 2, 1, "", "from_dict"], [279, 2, 1, "", "from_json"], [279, 3, 1, "", "name"], [279, 3, 1, "", "success_value"], [279, 2, 1, "", "summary"], [279, 2, 1, "", "to_dict"], [279, 2, 1, "", "to_json"], [279, 2, 1, "", "to_objective"], [279, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[279, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[279, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[279, 4, 1, "", "series"]], "baybe.targets.enum": [[282, 1, 1, "", "TargetMode"], [283, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[282, 3, 1, "", "MATCH"], [282, 3, 1, "", "MAX"], [282, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[283, 3, 1, "", "BELL"], [283, 3, 1, "", "LINEAR"], [283, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[285, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[285, 2, 1, "", "__init__"], [285, 3, 1, "", "bounds"], [285, 2, 1, "", "from_dict"], [285, 2, 1, "", "from_json"], [285, 3, 1, "", "mode"], [285, 3, 1, "", "name"], [285, 2, 1, "", "summary"], [285, 2, 1, "", "to_dict"], [285, 2, 1, "", "to_json"], [285, 2, 1, "", "to_objective"], [285, 2, 1, "", "transform"], [285, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[285, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[285, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[285, 4, 1, "", "series"]], "baybe.targets.transforms": [[287, 5, 1, "", "bell_transform"], [288, 5, 1, "", "linear_transform"], [289, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[287, 4, 1, "", "arr"], [287, 4, 1, "", "lower"], [287, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[288, 4, 1, "", "arr"], [288, 4, 1, "", "descending"], [288, 4, 1, "", "lower"], [288, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[289, 4, 1, "", "arr"], [289, 4, 1, "", "lower"], [289, 4, 1, "", "upper"]], "baybe.telemetry": [[291, 5, 1, "", "get_user_details"], [292, 5, 1, "", "is_enabled"], [293, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [294, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[293, 4, 1, "", "cached_recommendation"], [293, 4, 1, "", "measurements"], [293, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [293, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[294, 4, 1, "", "instrument_name"], [294, 4, 1, "", "value"]], "baybe.utils": [[296, 0, 0, "-", "augmentation"], [299, 0, 0, "-", "basic"], [314, 0, 0, "-", "boolean"], [318, 0, 0, "-", "chemistry"], [323, 0, 0, "-", "conversion"], [326, 0, 0, "-", "dataframe"], [339, 0, 0, "-", "interval"], [344, 0, 0, "-", "memory"], [346, 0, 0, "-", "numerical"], [353, 0, 0, "-", "plotting"], [357, 0, 0, "-", "random"], [360, 0, 0, "-", "sampling_algorithms"], [364, 0, 0, "-", "scaling"], [366, 0, 0, "-", "torch"], [369, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[297, 5, 1, "", "df_apply_dependency_augmentation"], [298, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[297, 4, 1, "", "affected"], [297, 4, 1, "", "causing"], [297, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[298, 4, 1, "", "column_groups"], [298, 4, 1, "", "df"]], "baybe.utils.basic": [[300, 1, 1, "", "Dummy"], [301, 8, 1, "", "UNSPECIFIED"], [302, 1, 1, "", "UnspecifiedType"], [303, 1, 1, "", "classproperty"], [304, 5, 1, "", "find_subclass"], [305, 5, 1, "", "get_baseclasses"], [306, 5, 1, "", "get_subclasses"], [307, 5, 1, "", "group_duplicate_values"], [308, 5, 1, "", "hilberts_factory"], [309, 5, 1, "", "is_all_instance"], [310, 5, 1, "", "match_attributes"], [311, 5, 1, "", "refers_to"], [312, 5, 1, "", "register_hooks"], [313, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[300, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[303, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[305, 4, 1, "", "abstract"], [305, 4, 1, "", "cls"], [305, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[306, 4, 1, "", "abstract"], [306, 4, 1, "", "cls"], [306, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[307, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[310, 4, 1, "", "callable_"], [310, 4, 1, "", "ignore"], [310, 4, 1, "", "object"], [310, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[312, 4, 1, "", "post_hooks"], [312, 4, 1, "", "pre_hooks"], [312, 4, 1, "", "target"]], "baybe.utils.boolean": [[315, 5, 1, "", "check_if_in"], [316, 5, 1, "", "is_abstract"], [317, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[315, 4, 1, "", "allowed"], [315, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[316, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[317, 4, 1, "", "val"]], "baybe.utils.chemistry": [[319, 5, 1, "", "get_canonical_smiles"], [320, 5, 1, "", "get_fingerprint_class"], [321, 5, 1, "", "name_to_smiles"], [322, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[320, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[321, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[322, 4, 1, "", "encoding"], [322, 4, 1, "", "kwargs_conformer"], [322, 4, 1, "", "kwargs_fingerprint"], [322, 4, 1, "", "prefix"], [322, 4, 1, "", "smiles"]], "baybe.utils.conversion": [[324, 5, 1, "", "fraction_to_float"], [325, 5, 1, "", "nonstring_to_tuple"]], "baybe.utils.conversion.fraction_to_float.params": [[324, 4, 1, "", "value"]], "baybe.utils.dataframe": [[327, 5, 1, "", "add_fake_measurements"], [328, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [329, 5, 1, "", "add_parameter_noise"], [330, 5, 1, "", "arrays_to_dataframes"], [331, 5, 1, "", "df_drop_single_value_columns"], [332, 5, 1, "", "df_drop_string_columns"], [333, 5, 1, "", "df_uncorrelated_features"], [334, 5, 1, "", "filter_df"], [335, 5, 1, "", "fuzzy_row_match"], [336, 5, 1, "", "get_transform_objects"], [337, 5, 1, "", "pretty_print_df"], [338, 5, 1, "", "to_tensor"]], "baybe.utils.dataframe.add_fake_measurements.params": [[327, 4, 1, "", "bad_intervals"], [327, 4, 1, "", "data"], [327, 4, 1, "", "good_intervals"], [327, 4, 1, "", "good_reference_values"], [327, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[328, 4, 1, "", "df"], [328, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[329, 4, 1, "", "data"], [329, 4, 1, "", "noise_level"], [329, 4, 1, "", "noise_type"], [329, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[330, 4, 1, "", "input_labels"], [330, 4, 1, "", "output_labels"], [330, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[331, 4, 1, "", "df"], [331, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[332, 4, 1, "", "df"], [332, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[333, 4, 1, "", "df"], [333, 4, 1, "", "exclude_list"], [333, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[334, 4, 1, "", "complement"], [334, 4, 1, "", "df"], [334, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[335, 4, 1, "", "left_df"], [335, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [335, 4, 1, "", "parameters"], [335, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[336, 4, 1, "", "allow_extra"], [336, 4, 1, "", "allow_missing"], [336, 4, 1, "", "df"], [336, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[337, 4, 1, "", "df"], [337, 4, 1, "", "max_columns"], [337, 4, 1, "", "max_colwidth"], [337, 4, 1, "", "max_rows"], [337, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[338, 4, 1, "", "*x"]], "baybe.utils.interval": [[340, 7, 1, "", "InfiniteIntervalError"], [341, 1, 1, "", "Interval"], [342, 5, 1, "", "convert_bounds"], [343, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[340, 2, 1, "", "__init__"], [340, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[341, 2, 1, "", "__init__"], [341, 6, 1, "", "center"], [341, 2, 1, "", "contains"], [341, 2, 1, "", "create"], [341, 2, 1, "", "from_dict"], [341, 2, 1, "", "from_json"], [341, 6, 1, "", "is_bounded"], [341, 6, 1, "", "is_degenerate"], [341, 6, 1, "", "is_fully_unbounded"], [341, 6, 1, "", "is_half_bounded"], [341, 6, 1, "", "is_left_bounded"], [341, 6, 1, "", "is_right_bounded"], [341, 3, 1, "", "lower"], [341, 2, 1, "", "to_dict"], [341, 2, 1, "", "to_json"], [341, 2, 1, "", "to_ndarray"], [341, 2, 1, "", "to_tensor"], [341, 2, 1, "", "to_tuple"], [341, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[341, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[341, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[341, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[342, 4, 1, "", "bounds"]], "baybe.utils.memory": [[345, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[345, 4, 1, "", "num"]], "baybe.utils.numerical": [[347, 3, 1, "", "DTypeFloatNumpy"], [348, 3, 1, "", "DTypeFloatONNX"], [349, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [350, 5, 1, "", "closer_element"], [351, 5, 1, "", "closest_element"], [352, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[350, 4, 1, "", "target"], [350, 4, 1, "", "x"], [350, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[351, 4, 1, "", "array"], [351, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[352, 4, 1, "", "arr"], [352, 4, 1, "", "weights"]], "baybe.utils.plotting": [[354, 5, 1, "", "create_example_plots"], [355, 5, 1, "", "indent"], [356, 5, 1, "", "to_string"]], "baybe.utils.plotting.create_example_plots.params": [[354, 4, 1, "", "ax"], [354, 4, 1, "", "base_name"], [354, 4, 1, "", "path"]], "baybe.utils.plotting.to_string.params": [[356, 4, 1, "", "*fields"], [356, 4, 1, "", "header"], [356, 4, 1, "", "single_line"]], "baybe.utils.random": [[358, 5, 1, "", "set_random_seed"], [359, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[358, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[359, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[361, 1, 1, "", "DiscreteSamplingMethod"], [362, 5, 1, "", "farthest_point_sampling"], [363, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[361, 3, 1, "", "FPS"], [361, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[362, 4, 1, "", "initialization"], [362, 4, 1, "", "n_samples"], [362, 4, 1, "", "points"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[363, 4, 1, "", "df"], [363, 4, 1, "", "method"], [363, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[365, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[365, 2, 1, "", "__init__"], [365, 2, 1, "", "fit"], [365, 3, 1, "", "mapping"], [365, 2, 1, "", "transform"]], "baybe.utils.torch": [[367, 8, 1, "", "DTypeFloatTorch"], [368, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[370, 5, 1, "", "finite_float"], [371, 5, 1, "", "non_inf_float"], [372, 5, 1, "", "non_nan_float"], [373, 5, 1, "", "validate_not_nan"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 181, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 308, 338, 341, 374, 377, 384, 388, 391, 392, 395, 396, 398, 399, 400, 401, 402, 408, 412, 413, 414, 417, 418, 419, 422, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438], "0": [8, 19, 31, 41, 42, 48, 96, 131, 139, 142, 160, 168, 169, 170, 181, 205, 228, 230, 287, 288, 289, 297, 298, 317, 328, 329, 333, 334, 348, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 398, 399, 401, 403, 405, 406, 407, 409, 410, 411, 413, 414, 417, 422, 423, 426, 430, 431, 433, 434, 435, 437, 440], "00": [407, 433], "000": [388, 409], "001": [328, 426], "001586691999989398": 391, "002536": 405, "005": [376, 377, 378, 380, 381], "006703": 399, "01": [160, 383, 384, 389, 392, 406, 407, 414], "011638": 405, "014538": 399, "02": 414, "020709": 403, "021": [259, 333], "023765": 407, "028712": 405, "029141": 405, "031807": 399, "03213": [259, 333], "035106": 399, "035576": 399, "037090": 405, "037961": 403, "040616": 399, "05": 414, "052373": 405, "053246": 406, "057": [376, 377, 378, 380, 381, 391], "06": [205, 271], "061044": 399, "069001": 403, "08": 414, "087427": 399, "090807": 399, "093163": 399, "09653736976391157": 401, "0f": 392, "1": [23, 28, 41, 96, 117, 131, 142, 171, 181, 197, 228, 230, 232, 234, 287, 288, 289, 294, 297, 298, 307, 317, 329, 334, 348, 352, 362, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 398, 399, 401, 403, 405, 406, 407, 409, 410, 411, 413, 414, 417, 418, 422, 425, 426, 430, 431, 433, 434, 435, 437, 440], "10": [181, 230, 259, 333, 375, 377, 381, 386, 387, 388, 389, 392, 395, 396, 398, 399, 401, 403, 405, 407, 409, 410, 411, 413, 414, 417, 424, 431, 435, 440], "100": [380, 381, 386, 387, 388, 389, 392, 395, 396, 398, 399, 403, 409, 414, 429, 430, 431, 435, 437, 440], "1000": 435, "1024": [136, 419, 431], "1038": [259, 333], "105": [376, 377, 378, 380, 381, 391, 403, 433], "107": 407, "108801": 403, "109239": 399, "11": [303, 398, 399, 418], "111": 409, "111911": 399, "1147": 388, "1148": 388, "1149": 388, "1150": 388, "12": [398, 399, 407, 420, 433], "120": [376, 377, 378, 380, 381, 386, 388, 391, 431], "120000": 406, "122": 409, "122614": 399, "122644": 407, "126": [386, 388, 389, 418], "1268824": [376, 377, 378], "128": 10, "13": [381, 398, 399, 413, 433], "1337": [392, 393, 440], "134892": 399, "139688": 405, "14": [398, 399, 433], "14448993259018328": 401, "1454": 419, "148": 380, "15": [230, 381, 388, 398, 413, 414, 417, 425, 433], "150": [386, 389, 426], "1500": 431, "151": 388, "153": [376, 377, 378, 380, 381, 391], "155162": 399, "157941": 399, "16": [337, 348, 398, 399], "160747": 399, "160808": 405, "161264": 399, "164": 407, "17": [398, 399], "170436": 399, "175": 407, "175415": 399, "176810": 407, "177": 409, "18": [398, 399, 425], "180": 386, "187594": 407, "188": 409, "189": 403, "19": [398, 399, 403], "190290": 405, "192": 388, "192362": 403, "198519": 399, "199519": 405, "1e": [205, 271], "2": [8, 19, 96, 98, 117, 230, 297, 298, 307, 327, 334, 352, 362, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 392, 393, 395, 396, 398, 399, 401, 403, 405, 406, 407, 409, 410, 411, 413, 414, 417, 422, 425, 426, 430, 431, 433, 434, 435, 437], "20": [142, 230, 375, 376, 377, 378, 392, 393, 398, 399, 403, 419, 431, 438, 440], "200": [377, 386, 388, 395, 396, 401, 409], "2004": 422, "2007": 438, "2021": 377, "2022": 417, "2025": 417, "203285": 399, "205626": 405, "209988": 399, "21": [398, 403, 410], "213": 403, "213799": 405, "216": [403, 406], "217": 403, "218": 403, "22": [380, 398, 399, 403], "221": [403, 419], "222": 409, "23": [381, 398, 399, 435], "235704": 399, "24": [380, 387, 398, 399, 433], "241": 431, "245": 403, "25": [392, 398, 399, 403, 413, 433], "250": 423, "257772": 403, "26": [398, 407, 433], "261122": 403, "27": [398, 433], "277": 403, "278": 403, "279": 403, "28": [398, 399], "280": 403, "280047": 405, "285128": 399, "285797": 399, "289362": 403, "29": [398, 417], "295385": 380, "3": [230, 297, 298, 303, 307, 334, 337, 355, 376, 377, 378, 381, 384, 386, 387, 388, 389, 391, 393, 396, 398, 399, 401, 403, 405, 406, 407, 409, 410, 413, 414, 417, 418, 420, 422, 425, 426, 429, 431, 433, 434, 435, 437, 438], "30": [375, 389, 393, 398, 431], "301549": 405, "3078f3": 419, "31": [398, 399, 403, 410], "310783": 399, "316289": 399, "317018": 399, "32": [387, 398, 431], "322556": 403, "324564": 405, "33": [387, 398, 403], "330577": 399, "330827": 399, "332210": 399, "333412": 399, "34": 387, "347064": 399, "35": [387, 398, 399], "351665": 405, "355786": 407, "36": 399, "366968": 380, "369": 381, "37": 399, "376605": 403, "381088": 399, "383026": 399, "39": [399, 431], "392611": 405, "397624": 381, "398561": 399, "3d": 393, "4": [136, 297, 298, 337, 383, 384, 386, 387, 388, 389, 393, 398, 399, 401, 403, 405, 406, 407, 417, 422, 425, 426, 431, 433], "40": [398, 403, 430, 431], "403669": 403, "404608": 381, "41": 399, "411091": 405, "42": 401, "420538": 399, "43": 399, "433968": 399, "439845": 405, "441112": 403, "447": 386, "448": 386, "448136": 399, "448710": 405, "449": 386, "45": [398, 399, 403, 437], "450": 386, "458606": 381, "459322": 405, "46": [399, 403], "468": 419, "471131": 405, "476271": 407, "476376": 399, "48": 403, "482677": 403, "491725": 399, "492416": 399, "494356": 399, "496849": 399, "5": [96, 142, 297, 298, 376, 378, 383, 386, 387, 388, 389, 392, 395, 396, 398, 399, 403, 405, 406, 407, 409, 410, 411, 413, 414, 417, 422, 423, 424, 425, 426, 431, 433, 435, 438, 440], "50": [389, 396, 398, 401, 413, 414, 422, 423, 431, 433, 437], "500": [393, 431], "5066666666666667": 401, "51": 403, "52": 403, "526283": 405, "528726": 399, "529777": 399, "529974": 403, "53": [399, 403], "530826": 399, "5313": 313, "532200": 403, "532902": 405, "54": [403, 417], "542793": 399, "55": [403, 437], "56": [403, 435], "560948": 407, "566987": 405, "569291": 399, "577294": 403, "579060": 407, "579897": 403, "59": [399, 409, 417], "590": 377, "593159": 399, "593666": 399, "6": [297, 298, 337, 376, 377, 378, 386, 387, 388, 389, 398, 399, 401, 403, 405, 406, 407, 409, 422, 426, 433], "60": [403, 430], "604327": 399, "606397": 403, "608444": 403, "61": 399, "612908": 399, "62": 401, "632281": 405, "634163": 399, "637962": 405, "64": 181, "644954": 407, "65": 401, "650825": 403, "661229": 403, "66368270ffd51418ec58bd793f2d9b1b": 438, "666139": 405, "668730": 407, "679610": 399, "679972": 405, "685287": 403, "69": [376, 377, 378, 403], "695804": 399, "7": [142, 297, 298, 333, 387, 389, 393, 398, 399, 403, 405, 413, 422, 431, 433], "70": 398, "706667": 406, "71": [403, 431], "711660": 405, "714670": 403, "72": 399, "720504": 403, "726779": 403, "737100": 403, "745": 440, "749778": 399, "75": [398, 433], "760057": 405, "766731": 403, "773003": 405, "778": 409, "779992": 405, "780824": 399, "784251": 399, "787422": 399, "79": 417, "794190": 403, "794436": 399, "794911": 399, "7gz": 431, "7hf": 431, "8": [298, 376, 378, 380, 386, 388, 389, 398, 399, 401, 403, 405, 417, 422, 426], "80": [399, 403, 426], "811777": 403, "835140": 405, "835201": 403, "8389": 313, "840117": 405, "841420": 399, "841609": 399, "8417": 313, "842832": 405, "855306": 399, "857": 388, "858435": 403, "859526": 407, "861": 389, "862": 389, "862795": 399, "863": 389, "864": 389, "864816": 403, "87": 409, "870180": 399, "878257": 399, "88": [403, 409], "885843": 399, "8859": 395, "889": 409, "89": [377, 403, 406, 409], "8jq": 431, "9": [389, 393, 395, 398, 399, 403, 405, 422, 425, 433, 434], "90": [376, 377, 378, 380, 381, 391, 409, 433], "900501": 399, "905300": 403, "912883": 403, "918131": 403, "921088": 399, "924877": 405, "93": 403, "934051": 399, "935566": 399, "944940": 405, "95": 403, "950576": 399, "953554": 405, "953875": 405, "954056": 399, "96": [377, 403, 406], "960000": 399, "962294": 399, "964583": 399, "97": 403, "99": 403, "994189": 403, "996677": 399, "998135": 407, "999": 426, "A": [0, 8, 19, 23, 28, 35, 37, 38, 39, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 67, 69, 70, 71, 72, 75, 77, 79, 84, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 114, 116, 117, 121, 125, 128, 129, 131, 139, 142, 144, 153, 154, 155, 156, 157, 158, 159, 160, 163, 169, 170, 171, 173, 176, 179, 181, 183, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 206, 207, 222, 223, 228, 230, 232, 234, 237, 239, 240, 243, 247, 249, 250, 257, 259, 261, 263, 265, 267, 273, 277, 279, 285, 287, 288, 289, 297, 303, 305, 306, 307, 310, 320, 327, 333, 334, 336, 345, 352, 360, 362, 365, 375, 387, 396, 398, 399, 401, 403, 410, 411, 416, 418, 419, 420, 422, 426, 428, 429, 431, 432, 433, 434, 437, 438], "AND": [51, 388, 422, 426], "AS": [417, 422], "And": 395, "As": [376, 377, 378, 393, 401, 403, 413, 414, 417, 418, 419, 426, 429, 432, 433, 435], "At": 437, "But": 437, "By": [84, 116, 129, 144, 205, 316, 334, 399, 420, 424, 427, 428, 432, 433], "FOR": 422, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 150, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 228, 234, 237, 239, 240, 241, 243, 247, 250, 257, 259, 261, 263, 265, 267, 277, 279, 285, 290, 312, 335, 341, 354, 365, 376, 377, 378, 380, 381, 387, 391, 392, 393, 398, 399, 401, 403, 407, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "If": [6, 13, 28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 84, 88, 111, 116, 117, 121, 144, 148, 149, 169, 170, 173, 197, 199, 205, 211, 212, 228, 230, 232, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 288, 293, 298, 305, 306, 310, 312, 315, 317, 320, 324, 327, 328, 329, 333, 334, 335, 336, 354, 356, 362, 363, 381, 383, 392, 398, 406, 407, 410, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 438, 440], "In": [28, 42, 54, 181, 199, 226, 228, 310, 337, 376, 377, 378, 380, 392, 393, 395, 398, 399, 401, 403, 406, 407, 410, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "It": [23, 163, 170, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 242, 263, 327, 376, 380, 381, 387, 396, 398, 401, 403, 407, 409, 410, 411, 413, 417, 424, 425, 426, 427, 428, 431, 432, 433, 435, 440], "Its": [230, 395], "No": [405, 416, 419], "Not": [422, 426], "OF": [417, 422], "OR": [417, 422], "Of": [381, 390, 415, 434], "On": [395, 401], "One": [133, 376, 378, 417], "Or": 427, "Such": [381, 426, 429, 435], "That": [199, 230, 237, 239, 240, 243, 247, 261, 263, 265, 267, 288, 381, 386, 398, 420, 433, 435, 438], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 84, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 117, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 150, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 217, 218, 220, 222, 226, 228, 230, 232, 237, 239, 240, 241, 243, 247, 250, 261, 263, 265, 267, 269, 271, 273, 274, 277, 279, 282, 285, 287, 288, 289, 291, 293, 294, 297, 298, 303, 305, 306, 307, 310, 312, 315, 316, 317, 320, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 341, 342, 345, 350, 351, 352, 354, 356, 358, 359, 362, 363, 376, 377, 378, 381, 386, 387, 388, 389, 391, 392, 393, 395, 396, 398, 403, 406, 407, 411, 413, 414, 416, 418, 419, 420, 422, 425, 426, 427, 429, 430, 431, 432, 433, 436, 437, 439, 440], "Then": 393, "There": [74, 271, 348, 398, 405, 417, 418, 420, 424, 428, 433], "These": [291, 374, 377, 378, 379, 382, 385, 390, 394, 397, 400, 402, 404, 408, 412, 420, 424, 426, 427, 431, 433], "To": [376, 381, 392, 393, 399, 401, 409, 413, 414, 417, 418, 420, 424, 425, 427, 428, 431, 435], "Will": 423, "With": [327, 392, 393, 398, 401, 413, 414, 417, 424, 426, 431, 434], "_": [148, 149, 202, 208, 215, 354, 383, 392, 414], "__class__": [391, 401], "__excepthook__": 418, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 237, 239, 240, 241, 243, 247, 249, 250, 257, 259, 261, 263, 265, 267, 277, 279, 285, 300, 303, 340, 341, 365, 433, 434], "__name__": [391, 401], "__new__": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 133, 134, 136, 340], "__str__": 419, "__version__": 419, "_amount": 398, "_arraylik": 330, "_c": 306, "_cumbest": 228, "_default_my_attribut": 420, "_fit": 274, "_has_switch": 171, "_iterbest": 228, "_label": 398, "_measur": 228, "_n_last_measur": [168, 169, 170], "_nbase": 322, "_nestedsequ": [117, 287, 288, 289, 351], "_no_tl": 413, "_option": 419, "_posterior": 274, "_step": [168, 169, 170], "_supportsarrai": [117, 287, 288, 289, 351], "_surrogate_model": [392, 393], "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 210, 218, 219, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 307, 308, 309, 325, 336, 341], "_target": 419, "_tparamet": 144, "_tsurrog": 270, "_u": 307, "_validate_my_attribut": 420, "_was_us": [168, 169, 170], "a1": 298, "a2": 298, "ab": [389, 398], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 304, 311, 419, 439], "abc": [21, 31, 32, 33, 34, 35, 37, 91, 92, 93, 111, 125, 126, 152, 166, 176, 179, 186, 191, 239, 240, 277, 316], "abil": [423, 428, 438], "abl": [393, 418, 424, 426, 431, 434, 440], "about": [23, 28, 126, 142, 277, 294, 376, 377, 378, 398, 406, 407, 417, 419, 420, 429, 431, 433], "abov": [271, 289, 316, 333, 375, 381, 388, 389, 391, 392, 399, 405, 417, 420, 422, 423, 424, 425, 426, 427, 428, 431, 434, 435, 438], "absenc": 430, "absolut": [139, 329, 417], "abstract": [21, 31, 32, 33, 34, 35, 37, 91, 92, 93, 111, 124, 125, 126, 152, 166, 176, 179, 186, 240, 277, 305, 306, 316, 419, 426, 438], "abstractli": 401, "acceler": [417, 419, 421, 438], "accept": [28, 169, 247, 330, 335, 392, 393, 419, 422, 427, 430, 431, 435, 437], "access": [197, 205, 237, 239, 240, 243, 247, 261, 263, 265, 267, 376, 377, 378, 386, 391, 414, 419, 426, 434], "accord": [41, 164, 399, 423, 426, 427, 432, 440], "accordingli": [181, 425, 428, 434], "account": 424, "accumul": [154, 401, 438], "accur": 425, "acet": [376, 377, 378, 380, 381], "aceton": 398, "achiev": [18, 205, 393, 398, 401, 417, 420, 423, 425, 426, 428], "ack": 417, "acq_funct": 381, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 392, 393, 401], "acqf1": 434, "acqf2": 434, "acqf_valu": 392, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 64, 71, 179, 181, 386, 387, 388, 389, 392, 393, 401, 403, 409, 417, 419, 423, 432, 434, 436], "acquisition_funct": [179, 181, 381, 401, 410, 411, 419], "acquisition_function_cl": [179, 181, 419], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 23, 25, 26, 179, 181, 401, 434], "across": [398, 401, 413, 424, 432, 438], "act": [398, 419, 422, 426, 435], "action": [18, 391, 401, 416, 419, 439], "activ": [13, 31, 129, 171, 392, 393, 401, 417, 418, 419, 420, 426, 427, 428, 429, 430, 432, 438, 439, 440], "active_dim": [91, 92, 93, 96, 98, 100, 101, 102], "active_valu": [129, 413, 414, 428, 438], "actual": [169, 199, 226, 406, 419, 429, 433, 435, 438, 440], "ad": [28, 205, 293, 297, 327, 362, 398, 399, 416, 420, 423, 427, 428, 430, 431, 436, 437, 439], "adapt": [170, 259, 317, 333], "add": [28, 220, 230, 327, 328, 381, 395, 396, 398, 403, 413, 417, 422, 424, 425, 426, 429, 433, 438, 440], "add_collection3d": 393, "add_fake_measur": [380, 381, 386, 387, 388, 389, 395, 396, 403, 419, 424, 435, 440], "add_fake_result": 419, "add_measur": [28, 380, 381, 383, 384, 386, 387, 388, 389, 393, 395, 396, 401, 403, 406, 407, 417, 419, 424, 425, 427, 428], "add_noise_to_perturb_degenerate_row": 419, "add_parameter_nois": [419, 440], "add_subplot": 393, "addendum": 422, "addit": [28, 84, 111, 116, 121, 169, 181, 199, 220, 228, 230, 232, 329, 376, 377, 378, 399, 406, 414, 417, 419, 421, 422, 425, 426, 427, 429, 430, 431, 433, 434, 435, 438, 440], "addition": [391, 399, 417, 429], "additiveexplain": [82, 85], "additivekernel": 419, "address": 435, "adher": [419, 420], "adjust": [170, 377, 381, 406, 419, 428], "adopt": 381, "adrian": [417, 421], "advanc": [170, 401, 418, 419, 427, 434, 438, 439], "advantag": [398, 420], "advic": 420, "advis": [422, 435], "affect": [28, 50, 181, 297, 391, 409, 416, 418, 426], "affected_paramet": [50, 386, 387, 388, 389, 398, 426], "affili": [417, 427], "afford": 425, "aforement": [199, 427], "after": [171, 312, 380, 381, 386, 387, 388, 389, 393, 403, 409, 417, 425, 429, 434], "afterward": 434, "again": [392, 424, 425, 426, 438], "against": [78, 293, 310, 398, 422, 428, 438], "agent": 399, "agraw": 421, "agre": [417, 422, 429], "agreement": 422, "ai": [89, 150, 348], "aim": [425, 429], "akin": 424, "al": [377, 417, 431], "aldrich": 421, "alex": 421, "alexand": [417, 421], "algorithm": [174, 181, 327, 360, 362, 375, 398, 403, 417, 419, 424, 429, 432], "alia": [141, 183, 431], "alias": 419, "align": [84, 197, 312, 392, 433, 438], "all": [20, 21, 30, 32, 37, 50, 52, 90, 91, 92, 93, 110, 111, 116, 123, 126, 129, 131, 135, 142, 151, 152, 162, 165, 166, 169, 175, 176, 178, 181, 185, 186, 199, 206, 207, 230, 237, 238, 240, 276, 277, 297, 309, 310, 327, 376, 377, 378, 381, 383, 384, 386, 387, 391, 392, 393, 398, 399, 401, 403, 405, 406, 413, 414, 417, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "allclos": [383, 384, 399], "alleg": 422, "allow": [18, 28, 31, 41, 48, 52, 111, 116, 121, 139, 144, 170, 199, 205, 232, 294, 315, 335, 336, 376, 377, 378, 381, 398, 399, 413, 414, 417, 419, 423, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 437, 440], "allow_": [419, 428], "allow_extra": [111, 116, 121, 197, 199, 205, 210, 336, 403, 419], "allow_miss": [111, 116, 121, 197, 199, 205, 210, 336, 419], "allow_recommending_already_measur": [28, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 401, 410, 411, 416, 419, 425], "allow_recommending_already_recommend": [28, 401, 410, 411, 416, 419, 425], "allow_recommending_pending_experi": [28, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 419, 425], "allow_repeated_recommend": [173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 419], "almost": 377, "alon": [419, 422], "along": [352, 422, 431, 438], "alongsid": 422, "alpha": [154, 393], "alphabet": [145, 419], "alreadi": [28, 205, 398, 407, 417, 419, 423, 424, 425, 428, 433, 435, 436, 438, 440], "also": [54, 84, 144, 237, 239, 240, 243, 247, 261, 263, 265, 267, 294, 310, 312, 327, 328, 329, 376, 383, 384, 392, 393, 395, 396, 398, 403, 406, 407, 409, 413, 414, 417, 419, 420, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "alter": [398, 419, 425, 428], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 271, 352, 391, 398, 399, 405, 417, 419, 428, 439, 440], "although": [398, 407, 410, 433, 435], "alwai": [13, 28, 37, 215, 216, 395, 398, 399, 417, 423, 425, 426, 435, 436, 438, 440], "ambigu": [139, 301, 302, 433], "amend": 426, "among": [31, 398, 417, 438], "amount": [298, 355, 363, 399, 413, 414, 424, 429, 431, 440], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 64, 65, 66, 68, 71, 76, 78, 79, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 112, 114, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 218, 220, 222, 226, 228, 230, 232, 237, 239, 240, 243, 244, 247, 250, 261, 263, 265, 267, 269, 270, 277, 279, 285, 297, 301, 302, 308, 310, 312, 315, 321, 325, 333, 334, 335, 337, 340, 341, 342, 351, 354, 356, 362, 363, 376, 378, 379, 381, 388, 389, 391, 392, 395, 396, 399, 403, 405, 409, 410, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "analog": [199, 327, 433, 434], "analogi": [164, 432], "analysi": [417, 429, 436], "analyt": [3, 4, 7, 8, 71, 435, 438], "analyz": [417, 420, 429], "angl": 393, "ani": [58, 59, 84, 117, 124, 125, 126, 128, 129, 131, 142, 144, 147, 148, 149, 215, 216, 220, 224, 225, 232, 261, 265, 267, 287, 288, 289, 294, 297, 309, 310, 312, 313, 315, 316, 335, 341, 343, 351, 356, 370, 371, 372, 373, 391, 398, 413, 414, 416, 417, 418, 419, 420, 422, 425, 427, 428, 431, 434, 435, 438], "annot": [312, 391, 422], "anonym": [417, 427], "anoth": [50, 342, 377, 387, 388, 395, 396, 398, 407, 420, 426, 438], "ansatz": 419, "answer": 425, "anti": 334, "anymor": [419, 438], "anyth": 317, "anywai": 436, "anywher": 383, "apach": [417, 422], "apart": [420, 425], "api": [417, 418, 434], "aplei": 429, "appar": 434, "appdata": 418, "appear": [310, 418, 419, 422, 434], "append": [393, 414], "appendix": 422, "appli": [28, 37, 38, 39, 54, 181, 199, 226, 228, 310, 321, 329, 365, 381, 382, 385, 386, 388, 389, 391, 392, 398, 413, 418, 419, 422, 426, 429, 430, 432, 433, 434, 435, 436, 437, 438], "applic": [356, 417, 420, 422, 431, 432, 435], "approach": [205, 392, 401, 417, 420, 423, 425, 428, 432, 434, 438], "appropri": [44, 45, 108, 205, 401, 420, 422, 428, 433], "approxim": [10, 18, 429], "ar": [6, 12, 14, 28, 31, 35, 37, 38, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 63, 72, 73, 74, 84, 111, 116, 117, 121, 129, 142, 144, 149, 163, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 228, 230, 232, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 289, 291, 293, 294, 297, 298, 305, 306, 307, 309, 310, 312, 316, 317, 327, 328, 330, 331, 335, 336, 354, 362, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 391, 392, 393, 396, 398, 399, 401, 403, 405, 406, 409, 410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "arang": [383, 393, 431], "arbitrari": [170, 199, 343, 419, 426, 431, 432, 435, 438, 440], "arbitrarili": [430, 434], "architectur": [274, 419, 436, 438], "ard_num_dim": [91, 92, 93, 96, 98, 100, 101, 102], "area": 393, "arg": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 95, 97, 99, 104, 105, 106, 152, 154, 155, 156, 157, 158, 159, 160, 163, 183, 241, 244, 249, 340, 420], "argu": 398, "argument": [65, 79, 84, 89, 142, 144, 150, 166, 168, 169, 170, 171, 197, 205, 241, 312, 334, 381, 396, 403, 419, 426, 429, 431, 432, 433, 434, 435, 438], "aris": [53, 398, 419, 422, 426, 434, 440], "arithmet": [119, 430], "arizona": 421, "arm": [236, 237, 415, 421], "arm_index": 401, "around": [190, 232, 234, 403, 419, 432, 434, 440], "arr": [287, 288, 289, 352], "arrai": [117, 287, 288, 289, 300, 330, 338, 347, 351, 352, 362, 393, 419, 432, 436], "arrays_to_datafram": [383, 384, 393, 406, 407, 413, 414, 419, 435], "arriv": [417, 428], "artifici": 440, "aryl": [376, 377, 378, 380, 417, 431], "ascend": 403, "ask": [398, 417, 419, 420, 425, 428], "aspect": [379, 383, 384, 407, 424, 427], "assembl": [398, 434], "assembli": 439, "assert": [59, 386, 387, 388, 389, 395, 396, 398, 399, 405, 409, 419, 422, 425, 426, 434], "assess": 435, "assign": [327, 392, 399, 405, 431], "associ": [199, 401, 422, 425, 427, 430, 438], "assum": [23, 42, 242, 312, 336, 376, 377, 378, 381, 383, 384, 386, 387, 388, 389, 395, 396, 398, 401, 403, 406, 407, 409, 417, 422, 426, 428, 431, 434, 436, 437, 440], "assumpt": 435, "assur": 426, "asynchron": [417, 425, 439], "atol": [383, 384], "atompair": 136, "atompairfingerprint": 136, "attach": [23, 312, 391, 392, 393, 422], "attempt": [70, 76, 242, 354, 401, 418, 419, 424, 426, 429, 432], "attent": 171, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 237, 239, 240, 243, 247, 250, 257, 259, 261, 263, 265, 267, 277, 279, 285, 310, 313, 341, 365, 373, 419], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 78, 81, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 119, 121, 124, 125, 126, 128, 129, 131, 133, 134, 136, 138, 139, 140, 142, 144, 147, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 200, 204, 205, 214, 218, 220, 237, 239, 240, 243, 247, 250, 254, 257, 259, 261, 263, 265, 267, 274, 277, 278, 279, 282, 283, 285, 299, 302, 310, 325, 336, 341, 346, 361, 365, 366, 369, 370, 371, 372, 373, 405, 419, 420, 422, 432, 434, 436, 437], "audit": [417, 419, 420], "augment": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 199, 269, 270, 271, 419, 425], "author": 422, "authorship": 422, "auto": [12, 14, 419, 421], "auto_tutori": 348, "autocorr": 136, "autocorrfingerprint": 136, "autodoc": 419, "automat": [28, 114, 181, 247, 335, 375, 393, 406, 418, 419, 420, 429, 430, 432, 433, 438, 439], "avail": [2, 119, 131, 133, 134, 136, 142, 169, 170, 228, 230, 254, 282, 283, 294, 361, 362, 363, 378, 380, 383, 384, 398, 403, 406, 407, 417, 418, 419, 420, 422, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 438, 439], "available_acq_funct": 381, "avalon": 136, "avalonfingerprint": 136, "averag": [263, 392, 393, 414, 431, 435], "avoid": [199, 313, 352, 419, 420, 424, 425, 431, 433], "awai": 437, "awar": [398, 413, 414, 419, 423, 428, 434], "ax": [84, 354, 375, 377, 392, 393, 413, 414], "axes3d": [354, 393], "axi": [197, 228, 352, 375, 383, 384, 389, 392, 393, 398, 399, 401, 403, 406, 407, 413, 414, 433], "azim": 393, "azur": 419, "b": [53, 160, 259, 297, 307, 333, 334, 377, 387, 396, 401, 410, 411, 416, 417, 420, 422, 425, 428, 431, 434], "b1": 298, "b2": 298, "back": [0, 409, 416, 419, 420, 428], "backend": 294, "background": [84, 88, 429], "background_data": 84, "backport": 418, "backtest": [226, 227, 233, 376, 377, 378, 392, 412, 415, 417, 419, 432, 435], "backtick": 420, "backward": [107, 113, 182, 183, 199, 419], "bad": [403, 425, 427, 437], "bad_interv": 327, "badg": 419, "bai": 417, "baird": 421, "balanc": [116, 401, 417], "banana": 420, "bandit": [237, 381, 415, 417, 419, 421], "banner": 419, "bar": [84, 86, 395, 396, 398, 409, 410, 411, 417, 419, 429, 436], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 119, 121, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 167, 168, 169, 170, 171, 173, 176, 179, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 199, 200, 204, 205, 218, 220, 222, 237, 239, 240, 241, 242, 243, 247, 249, 250, 254, 257, 259, 261, 263, 265, 267, 271, 273, 277, 279, 282, 283, 285, 300, 302, 303, 304, 305, 306, 330, 334, 341, 354, 361, 362, 365, 375, 380, 381, 392, 393, 395, 397, 401, 415, 417, 419, 422, 423, 425, 426, 427, 429, 431, 432, 433, 434, 436], "base1": 399, "base2": 399, "base_data": 392, "base_kernel": [104, 105, 106], "base_nam": [354, 375, 377, 392, 393, 413, 414], "base_predictor": 269, "base_smil": 392, "basefingerprinttransform": 320, "baselin": [375, 377, 413, 417, 431], "basesequentialmetarecommend": [169, 170], "bashrc": 427, "basi": [100, 417, 422, 429], "basic": [91, 95, 96, 97, 98, 99, 100, 101, 102, 154, 155, 156, 157, 158, 159, 160, 228, 300, 302, 303, 376, 377, 378, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 403, 406, 407, 408, 409, 412, 415, 419, 420, 428, 430, 431, 435, 439], "basic_transfer_learn": 414, "basickernel": [95, 96, 97, 98, 99, 100, 101, 102, 419], "batch": [28, 163, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 231, 269, 270, 381, 386, 387, 388, 389, 393, 403, 406, 407, 409, 413, 414, 419, 424, 428, 432, 435], "batch_quant": 419, "batch_shap": [91, 92, 93, 96, 98, 100, 101, 102], "batch_siz": [28, 41, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 228, 232, 234, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 399, 401, 403, 406, 407, 409, 410, 413, 414, 417, 419, 424, 425, 427, 428, 435], "batchnr": 403, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 119, 121, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 200, 204, 205, 222, 237, 239, 240, 241, 243, 247, 249, 250, 254, 257, 259, 261, 263, 265, 267, 277, 279, 282, 283, 285, 300, 302, 303, 341, 361, 365, 374, 375, 376, 377, 378, 379, 381, 383, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "baybe_cach": 427, "baybe_cache_dir": [419, 427], "baybe_deactivate_polar": [419, 427], "baybe_debug_fake_hosthash": 419, "baybe_debug_fake_userhash": 419, "baybe_numpy_use_single_precis": [349, 419, 427], "baybe_telemetry_en": [417, 427], "baybe_telemetry_endpoint": [419, 427], "baybe_telemetry_host": 419, "baybe_telemetry_hostnam": [419, 427], "baybe_telemetry_usernam": [419, 427], "baybe_telemetry_vpn_check": [419, 427], "baybe_telemetry_vpn_check_timeout": [419, 427], "baybe_torch_use_single_precis": [368, 419, 427], "bayesian": [0, 173, 179, 181, 226, 228, 232, 234, 242, 261, 401, 419, 423, 425, 429, 436, 439], "bayesian_recommend": 393, "bayesianlinearmodel": 396, "bayesianlinearsurrog": [381, 436], "bayesianrecommend": [173, 181, 242, 419, 432], "bayesianridg": 395, "bcut2d": [136, 419], "bcut2dfingerprint": 136, "bcw07": 438, "becaus": [74, 139, 199, 205, 234, 316, 391, 392, 398, 414, 420, 423, 425, 426, 427, 428, 429, 430, 431, 434, 435, 438], "becom": [199, 398, 419, 423, 425, 426, 434, 437, 440], "been": [23, 70, 71, 169, 237, 239, 240, 243, 247, 261, 263, 265, 267, 335, 376, 377, 417, 418, 419, 422, 424, 425, 432, 438], "beeswarm": [84, 86, 429], "befor": [70, 171, 228, 237, 239, 240, 243, 247, 261, 263, 265, 267, 312, 375, 378, 381, 387, 392, 417, 419, 420, 427, 428, 431, 433], "begin": [169, 386, 388, 405, 409, 432], "behalf": 422, "behav": [393, 409, 434], "behavior": [181, 417, 419, 427, 430, 432, 433, 438], "behind": [430, 434, 435, 437], "being": [106, 327, 354, 401, 418, 419, 426, 427, 431, 433], "bell": [283, 287, 403, 437], "belong": [391, 434], "below": [171, 271, 289, 388, 391, 392, 398, 420, 422, 423, 425, 426, 430, 434, 436, 437, 438], "benchmark": [417, 419, 421], "benefici": [422, 423, 427], "benefit": [426, 438], "benzo": 438, "bernoulli": [237, 400, 415, 421], "besid": [417, 430, 437], "best": [12, 14, 228, 230, 232, 378, 401, 417, 427, 432], "bet": 425, "beta": [8, 19, 154, 237, 381, 419, 423], "betabernoullimultiarmedbanditsurrog": [381, 401, 419], "betaprior": [237, 419], "better": [10, 327, 377, 419, 425, 426, 428, 431], "between": [31, 50, 139, 170, 197, 205, 257, 334, 391, 393, 398, 401, 403, 407, 413, 414, 417, 419, 420, 424, 425, 426, 427, 431, 432, 433, 434, 437, 438], "beyond": [417, 429], "bias": 431, "bin": 398, "binar": 419, "binari": [279, 409, 418, 419, 434], "binarytarget": [280, 401, 419], "bind": [391, 393, 422], "bit": [419, 431], "black": [226, 435, 438], "blackbox": [374, 375, 415], "blank": 420, "blob": 259, "block": [392, 398, 417, 418, 419, 427, 434], "bodi": 391, "bonilla": 438, "bool": [6, 12, 14, 23, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 87, 88, 111, 116, 117, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 210, 237, 239, 240, 243, 247, 261, 263, 265, 267, 279, 280, 287, 288, 289, 292, 293, 305, 306, 310, 311, 316, 317, 330, 334, 335, 336, 341, 351, 356, 401], "boolean": [31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 88, 124, 125, 126, 128, 129, 131, 138, 139, 142, 166, 168, 169, 170, 171, 336, 425, 427], "boost": [265, 414], "both": [10, 144, 199, 205, 234, 289, 312, 375, 387, 392, 395, 398, 399, 401, 403, 413, 414, 417, 420, 423, 426, 429, 431, 433, 434, 437, 440], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 42, 173, 181, 183, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 383, 384, 393, 407, 413, 414, 419, 427, 432], "botorch_acqf": [23, 392, 393], "botorch_function_wrapp": 419, "botorchrecommend": [173, 183, 381, 386, 387, 388, 389, 392, 393, 395, 396, 401, 403, 407, 409, 410, 411, 417, 419, 424, 425, 428, 432], "bottom": 425, "bound": [8, 19, 31, 138, 144, 160, 197, 199, 205, 210, 270, 285, 286, 306, 312, 336, 341, 342, 375, 381, 383, 384, 393, 399, 403, 405, 406, 407, 413, 414, 419, 431, 434, 437, 439, 440], "boundari": [205, 287, 288, 403], "boundary_onli": [205, 398], "bounded": 419, "bounds_transform_func": 419, "box": [160, 226, 435, 438], "brain": [435, 438], "branch": [417, 420], "break": [242, 434], "brettpho": [376, 377, 378, 380, 381], "briefli": [435, 438], "bring": [417, 419], "bro": 259, "broad": 434, "brute": [181, 432], "bu": [376, 377, 378, 380, 381], "bucket": 398, "budget": 425, "bug": [419, 420], "build": [197, 205, 242, 392, 398, 418, 419, 420, 426, 429, 434, 438, 439, 440], "built": [205, 395, 417, 420, 425, 432], "builtin": 303, "bump": 419, "button": 419, "butyl": [376, 377, 378, 380, 381], "butylphenylphosphin": [376, 377, 378, 380, 381], "butyornitril": [376, 377, 378, 380, 381], "bypass": [144, 392], "byte": [117, 204, 243, 287, 288, 289, 345, 351, 419, 440], "c": [53, 297, 307, 376, 377, 378, 380, 381, 386, 387, 388, 389, 396, 398, 410, 411, 417, 418, 422, 425, 428, 431, 433, 434], "c1": [376, 377, 378, 380, 381, 386, 387, 388, 389, 431], "c1c2": [376, 377, 378, 380, 381], "c1ccccc1": [376, 377, 378, 386, 388], "c1ccoc1": 426, "c2": [376, 377, 378, 380, 381, 386, 388, 389], "c2ccccc2": [376, 377, 378], "c2oc": [376, 377, 378, 380, 381], "c2p": [376, 377, 378, 380, 381], "c3": [376, 377, 378, 380, 381, 386, 388], "c3c": [376, 377, 378], "c3ccccc3": [376, 377, 378, 380, 381], "c4": [376, 377, 378, 386, 388], "c4ccccc4": [376, 377, 378, 380, 381], "c5": [386, 388], "c6": [386, 388], "c_g2_min": 399, "c_g3_max": 399, "c_i": 426, "c_total_sum": 399, "cach": [293, 419, 434, 439], "cached_recommend": 293, "calcul": [293, 352, 383, 393, 413, 427, 431, 433], "calibr": 438, "call": [42, 79, 166, 168, 169, 170, 171, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 293, 294, 312, 330, 376, 377, 378, 391, 396, 398, 399, 410, 411, 417, 418, 419, 423, 425, 426, 427, 431, 434, 435, 438, 439], "callabl": [49, 65, 78, 144, 218, 226, 228, 230, 232, 234, 269, 270, 273, 274, 303, 308, 310, 312, 330, 375, 391, 419, 439], "callable_": 310, "campaign": [84, 228, 231, 232, 234, 327, 329, 379, 380, 388, 390, 393, 401, 411, 413, 414, 415, 416, 417, 419, 423, 424, 426, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440], "campaign1": 435, "campaign2": 435, "campaign_json": 425, "campaign_oh": 377, "campaign_rand": [376, 377, 378], "campaign_recr": 409, "campaign_stop": 392, "campaign_with_hook": 392, "campaignstoppedexcept": 392, "can": [13, 18, 23, 28, 31, 37, 38, 39, 53, 84, 125, 131, 139, 142, 163, 170, 173, 174, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 226, 230, 237, 239, 240, 241, 242, 243, 247, 261, 263, 265, 267, 271, 280, 292, 294, 310, 312, 316, 327, 329, 330, 335, 348, 375, 376, 377, 378, 381, 382, 385, 386, 387, 388, 391, 392, 393, 395, 396, 398, 399, 401, 403, 405, 406, 407, 410, 413, 414, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "canada": 421, "candid": [12, 14, 28, 191, 193, 197, 205, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 392, 414, 419, 423, 432, 433, 439], "candidates_comp_rep": 392, "cannot": [13, 77, 78, 84, 242, 243, 271, 317, 354, 401, 419, 422, 424, 426, 427, 431, 432, 434, 436, 438], "canon": [319, 434], "capabl": [374, 400, 402, 408, 412, 414, 419, 421, 425, 438], "captur": 431, "cardin": [31, 41, 48, 58, 59, 197, 419, 421], "cardinalityconstraint": [41, 48, 419], "care": [46, 398, 420, 426, 429, 430], "carefulli": 427, "carlo": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 71, 232, 375, 377, 378, 392, 401, 413, 414, 419, 424, 435], "carri": [312, 391, 422], "cartesian": [199, 205, 206, 207, 417, 419, 428, 433], "case": [170, 234, 271, 312, 327, 337, 392, 397, 398, 406, 407, 410, 417, 418, 420, 423, 424, 425, 426, 427, 428, 431, 434, 435, 437, 438, 440], "cast": [42, 419], "cat": 334, "cat_1": 403, "cat_1_22": 403, "cat_1_33": 403, "cat_2": 403, "catch_constant_target": 419, "categor": [28, 128, 129, 133, 205, 212, 335, 417, 419, 428, 431, 433, 437], "categori": [377, 392, 417, 419, 434, 437], "categorical_1": [403, 425], "categorical_2": [403, 425], "categorical_paramet": 434, "categorical_parameter_json": 434, "categorical_parameter_reconstruct": 434, "categoricalencod": [128, 129, 386, 387, 388, 389, 403, 409], "categoricalparamet": [129, 205, 377, 386, 387, 388, 389, 396, 401, 403, 409, 410, 411, 417, 419, 428, 429, 433, 434, 439], "cattr": [217, 218, 220, 411, 418, 419, 420], "cauchi": 156, "caus": [139, 297, 303, 419, 422], "caution": 438, "cc": [376, 377, 378, 380, 381, 386, 388, 389, 398, 431, 438], "cc1": [376, 377, 378, 380, 381, 431], "ccc": [386, 388, 396, 417], "cccc": [376, 377, 378, 380, 381, 386, 388], "ccccc": [386, 388, 410, 411], "cccccc": [386, 388], "cccccccco": [426, 431], "ccccoc": [376, 377, 378, 380, 381], "cco": 398, "ccoccoccn": [410, 411], "cdot": [426, 430], "ceil": 392, "cell": [395, 431, 435, 438], "cell_lin": 438, "center": [287, 289, 341, 403, 425], "central": [419, 425], "certain": [28, 50, 78, 171, 218, 220, 226, 294, 309, 327, 355, 387, 392, 401, 417, 420, 426, 428, 429, 432, 434, 438, 440], "cesium": [376, 377, 378, 380, 381], "ch": 355, "chai": 438, "chain": [35, 166, 168, 169, 170, 171, 303, 426], "challeng": [420, 434], "chanc": 418, "chang": [50, 169, 327, 328, 329, 381, 398, 406, 417, 418, 420, 422, 425, 427, 429, 431, 433, 438], "charact": 422, "characterist": 303, "charg": 422, "check": [28, 124, 125, 126, 128, 129, 131, 138, 139, 142, 293, 309, 311, 314, 315, 316, 317, 335, 341, 350, 406, 407, 409, 417, 419, 420, 427, 429, 433, 434], "checker": 419, "checkout": 420, "chem": [417, 419, 431], "chemic": [321, 377, 380, 398, 419, 421, 426, 429, 431, 438], "cheminformat": [142, 417, 419], "chemistri": [131, 386, 388, 389], "child": [188, 189, 190, 191, 420], "chocol": 420, "choic": [228, 230, 362, 391, 398, 401, 407, 419, 426, 428, 430, 431, 432, 433, 434, 437], "choos": [164, 398, 399, 401, 403, 405, 406, 407, 416, 417, 422, 423, 425, 432, 436, 437], "chose": [406, 434], "chosen": [68, 173, 228, 230, 234, 358, 359, 381, 401, 419, 423, 426, 431, 433], "christoph": 438, "ci": [384, 413, 414, 419, 420], "circular": 431, "circumv": [418, 434], "cl": [46, 114, 215, 219, 271, 305, 306, 311, 316, 343], "claim": 422, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 77, 81, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 218, 220, 221, 222, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 299, 300, 302, 303, 304, 305, 306, 311, 316, 320, 339, 341, 356, 360, 361, 364, 365, 381, 391, 392, 395, 401, 410, 419, 425, 426, 429, 430, 431, 432, 433, 434, 436], "classic": [401, 430], "classifi": 431, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 303, 341, 419], "classvalidationerror": [411, 418], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 237, 239, 240, 243, 247, 261, 263, 265, 267], "clean": [331, 332, 333, 418, 419, 420], "clear": [348, 438], "click": [401, 431], "clone": 420, "close": [228, 234, 282, 375, 392, 413, 414, 435], "closer": [350, 431], "closest": [293, 335, 351], "closest_el": 419, "closur": [226, 435], "cluster": [188, 189, 190, 191, 381, 419, 421, 439], "clustering_x": 419, "cmap": 393, "cn": [376, 377, 378, 380, 381], "co": 398, "co1": [376, 377, 378], "co2": [376, 377, 378], "co3": [376, 377, 378], "coars": [396, 409, 410, 411, 417], "coc": [396, 410, 411, 417], "cococ": [410, 411], "code": [242, 377, 396, 401, 406, 410, 411, 417, 418, 419, 422, 426, 427, 431, 435, 438, 440], "coeffici": [42, 44, 45, 383, 384, 399, 426], "coerc": 419, "collect": [28, 58, 59, 94, 104, 105, 144, 145, 153, 169, 171, 197, 205, 211, 212, 223, 230, 295, 297, 299, 309, 310, 327, 336, 360, 362, 375, 381, 393, 398, 401, 413, 414, 417, 419, 425, 427], "color": 393, "column": [37, 38, 39, 84, 111, 116, 117, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 228, 230, 232, 234, 297, 298, 328, 330, 331, 332, 333, 334, 336, 337, 365, 377, 380, 386, 387, 388, 389, 392, 398, 403, 409, 413, 414, 419, 425, 433, 434, 435], "column_group": 298, "com": [259, 313, 333, 417, 419], "comb": 398, "combin": [51, 144, 199, 205, 206, 207, 303, 321, 376, 377, 378, 386, 388, 391, 392, 398, 403, 417, 418, 422, 426, 428, 429, 430, 432, 433, 435, 438, 440], "combinatori": 440, "combine_func": 108, "come": [401, 417, 425, 429, 434, 438, 440], "command": 418, "comment": 419, "commerci": 422, "commit": [417, 419, 420], "common": [153, 395, 399, 419, 420, 422, 425, 426, 431, 434], "commonli": 430, "commun": [422, 430, 438], "comp_df": [125, 128, 129, 131, 139, 142, 419], "comp_rep": [205, 393, 395, 419, 433], "comp_rep_bound": [197, 199, 205, 419], "comp_rep_byt": [204, 440], "comp_rep_column": [124, 125, 126, 128, 129, 131, 138, 139, 142, 197, 199, 205, 419], "comp_rep_human_read": [204, 440], "comp_rep_shap": [204, 440], "comp_rep_tensor": [392, 393], "compar": [144, 169, 375, 398, 399, 401, 413, 417, 419, 420, 428, 431, 437], "comparison": [392, 413, 414, 432, 434], "compat": [107, 113, 144, 173, 176, 179, 181, 182, 183, 186, 188, 189, 190, 191, 193, 194, 199, 200, 230, 243, 312, 336, 373, 381, 386, 387, 388, 389, 391, 393, 403, 409, 419, 432], "compens": 419, "compil": [418, 422], "complain": 420, "complaint": 420, "complement": [28, 334, 428], "complet": [393, 398, 424, 426, 428, 430, 434], "complex": [117, 287, 288, 289, 351, 398, 409, 413, 414, 420, 423, 424, 426, 428, 435, 438], "compli": 422, "complianc": 417, "complic": [398, 438], "compon": [63, 398, 399, 420, 423, 425, 426, 427, 428, 434, 438], "compos": [103, 419, 434], "composit": [92, 104, 105, 106], "compositekernel": [104, 105, 106, 419], "compound": 321, "comprehens": [417, 436], "compress": 434, "comput": [23, 28, 75, 84, 88, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 197, 199, 204, 205, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 271, 277, 279, 285, 322, 352, 386, 387, 388, 389, 391, 398, 399, 403, 409, 419, 422, 423, 425, 427, 431, 433, 434, 435, 439, 440], "computation": 181, "concat": [383, 384, 392, 393, 403, 406, 407, 413, 414], "concentr": [154, 155, 376, 377, 378, 380, 381, 386, 391, 392, 426], "concentrati": 386, "concentration_valu": 392, "concept": [297, 398, 430, 431, 434], "concis": 419, "concret": [419, 434], "conda": 419, "condit": [31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 327, 334, 377, 383, 387, 388, 389, 398, 417, 419, 422, 438, 439], "conduct": [28, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 232, 237, 239, 240, 243, 247, 261, 263, 265, 267, 376, 377, 378, 417, 420, 425, 438], "confid": [8, 19, 381], "config": [395, 396, 408, 415, 419, 439], "config_json": 28, "configur": [28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 73, 74, 163, 170, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 226, 228, 234, 237, 239, 240, 241, 243, 247, 253, 261, 263, 265, 267, 327, 354, 362, 379, 380, 398, 404, 407, 411, 417, 418, 419, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 435, 437, 438, 439, 440], "confirm": 393, "conflict": [417, 420, 430], "conform": [142, 322, 431], "confront": [401, 417, 428], "conjunct": 436, "connect": [54, 327, 419, 427, 431, 437], "consequ": [378, 418, 426, 427, 432, 433, 435], "consequenti": 422, "consid": [8, 19, 28, 31, 32, 33, 34, 35, 38, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 116, 129, 169, 199, 232, 293, 327, 335, 336, 375, 398, 401, 403, 413, 414, 417, 419, 420, 424, 426, 428, 429, 430, 431, 434, 440], "consider": [199, 424], "consist": [164, 204, 393, 420, 422, 429], "consol": 418, "consolid": [419, 432], "consortium": 421, "conspicu": 422, "constant": [263, 271, 288, 403, 419, 420, 431, 433], "constitut": 422, "constrain": [419, 426, 437, 438], "constraint": [28, 31, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 126, 197, 199, 205, 300, 395, 396, 403, 409, 410, 411, 415, 417, 419, 421, 427, 431, 439], "constraint_1": 388, "constraint_2": 388, "constraint_3": 388, "constraints_augment": 199, "constraints_cardin": 197, "constraints_lin_eq": 197, "constraints_lin_ineq": 197, "constraints_nonlin": 197, "constru": 422, "construct": [28, 197, 199, 205, 243, 273, 375, 405, 413, 414, 417, 419, 423, 429, 434, 439], "constructor": [188, 189, 190, 191, 199, 219, 261, 265, 267, 398, 405, 410, 411, 419, 423, 425, 428, 430, 431, 439, 440], "consult": 417, "consum": [169, 391], "consumpt": 427, "cont_ind": 407, "cont_indic": [406, 407], "cont_paramet": 407, "cont_recommend": [173, 407], "contact": [417, 421], "contain": [28, 31, 37, 38, 39, 59, 62, 67, 84, 111, 116, 117, 121, 125, 128, 129, 131, 139, 142, 144, 148, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 206, 207, 211, 226, 228, 230, 232, 237, 239, 240, 243, 247, 261, 263, 265, 267, 277, 279, 285, 287, 288, 289, 297, 298, 312, 322, 327, 329, 334, 341, 352, 354, 356, 362, 377, 378, 392, 393, 399, 401, 407, 413, 414, 418, 419, 420, 422, 425, 426, 428, 429, 432, 433, 434, 435, 440], "content": [144, 169, 199, 230, 328, 363, 419, 422, 434], "context": [166, 168, 169, 170, 171, 226, 241, 359, 391, 401, 405, 413, 414, 419, 425, 428, 429, 431, 434, 435, 438, 440], "contextu": 438, "continu": [10, 13, 23, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 67, 124, 125, 126, 128, 129, 131, 138, 139, 142, 173, 181, 197, 199, 200, 205, 206, 207, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 381, 383, 386, 387, 388, 389, 399, 403, 404, 407, 409, 415, 417, 419, 425, 427, 428, 432, 434, 435, 439], "continuous_subspac": 433, "continuouscardinalityconstraint": [58, 197, 419], "continuousconstraint": [34, 42, 197, 419, 426, 428], "continuouslinearconstraint": [197, 383, 384, 399, 419, 439], "continuouslinearequalityconstraint": 419, "continuouslinearinequalityconstraint": 419, "continuousnonlinearconstraint": [41, 197, 419], "continuousparamet": [138, 197, 419], "contract": 422, "contrast": [205, 316, 399, 401, 424, 428], "contribut": [417, 419, 422, 440], "contributor": [417, 422], "contributori": 422, "control": [13, 18, 144, 154, 181, 197, 205, 336, 403, 406, 417, 419, 422, 423, 427, 430, 431, 432, 437, 439], "convei": 434, "conveni": [419, 433, 434], "convent": 199, "converg": 429, "convers": [28, 170, 395, 405, 419, 422, 429, 439], "convert": [25, 112, 201, 214, 313, 317, 321, 324, 325, 337, 338, 342, 345, 348, 396, 410, 411, 419, 425, 427, 434, 435], "convert_sklearn": 395, "convert_sklearn_bayesian_ridg": 395, "cooki": 420, "coordin": 362, "copi": [392, 417, 419, 422, 440], "copyright": [417, 422], "core": [28, 197, 199, 200, 205, 232, 234, 237, 239, 240, 241, 243, 247, 254, 261, 263, 265, 267, 381, 417, 419, 428, 437], "coregion": 438, "coretest": [419, 420], "corpu": 431, "correct": [28, 274, 393, 417, 419, 420, 434], "correctli": [398, 407, 419], "correl": [131, 142, 333, 431, 438], "correspond": [23, 28, 41, 111, 116, 121, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 218, 226, 228, 230, 237, 239, 240, 243, 247, 261, 263, 265, 267, 287, 293, 312, 315, 317, 320, 321, 327, 330, 336, 337, 375, 380, 381, 398, 401, 407, 413, 414, 417, 419, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "correspondingli": 28, "corrupt": 329, "cost": [377, 401], "costli": [199, 202, 208, 425], "could": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 139, 324, 381, 391, 392, 398, 399, 414, 419, 424, 426, 431, 435, 437, 438], "count": [294, 392, 398, 426], "counterclaim": 422, "counterpart": [312, 433], "coupl": 393, "cours": [413, 414, 420, 434, 438], "cov": [419, 420], "cover": [316, 327, 428], "coverag": [419, 420], "cp": [376, 377, 378], "craft": 435, "crash": [418, 419], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 84, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 206, 207, 222, 230, 237, 239, 240, 241, 243, 247, 250, 255, 261, 263, 265, 267, 277, 279, 285, 327, 330, 341, 354, 356, 362, 380, 391, 392, 393, 398, 399, 407, 408, 415, 416, 417, 418, 419, 420, 426, 427, 428, 429, 434, 435, 436, 437, 439, 440], "create_example_plot": [375, 377, 392, 393, 413, 414], "create_from_config": [395, 396], "create_pi_plot": 393, "creation": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 144, 202, 205, 208, 387, 389, 395, 396, 433, 434, 439], "criteria": 393, "criterion": [392, 423], "critic": 419, "cross": [413, 422], "crucial": [417, 437], "cube": 426, "cuda": 418, "cultur": [431, 438], "curran": 438, "current": [10, 28, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 232, 234, 242, 292, 348, 392, 393, 398, 423, 425, 426, 427, 428, 431, 435, 437, 438, 440], "curv": [287, 393, 403, 426, 437], "custom": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 124, 125, 126, 128, 129, 131, 134, 138, 139, 142, 144, 243, 274, 277, 279, 285, 312, 337, 374, 381, 385, 392, 401, 407, 415, 417, 419, 426, 431, 432, 435, 438, 439, 440], "custom_blackbox": 375, "custom_conversion_funct": 395, "custom_filt": 426, "custom_funct": 386, "customari": 422, "customconstraint": 386, "customdiscreteparamet": [419, 429, 439], "customencod": 131, "customonnxsurrog": [381, 395, 419], "cycl": [169, 417, 419, 428], "cyclic": 169, "d": [23, 53, 117, 297, 307, 352, 362, 393, 396, 410, 411, 413, 414, 417, 422, 433, 438], "d401": 386, "damag": 422, "daniel": 421, "darmstadt": [417, 421, 427], "dashboard": 419, "data": [13, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 66, 84, 88, 116, 121, 131, 139, 142, 163, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 228, 232, 234, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 279, 285, 294, 296, 300, 327, 329, 335, 347, 348, 363, 367, 374, 375, 380, 381, 383, 384, 386, 387, 388, 389, 392, 396, 398, 403, 406, 409, 410, 411, 413, 414, 415, 416, 417, 419, 423, 424, 425, 426, 427, 429, 431, 432, 434, 435, 436, 439, 440], "data_typ": 395, "databas": [28, 403, 417, 434], "dataclass": [391, 401], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 88, 111, 116, 121, 125, 128, 129, 131, 139, 142, 144, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 206, 207, 210, 224, 225, 228, 230, 232, 234, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 279, 285, 293, 297, 298, 321, 322, 363, 375, 376, 380, 381, 386, 387, 388, 389, 392, 393, 395, 396, 398, 399, 403, 406, 409, 413, 414, 419, 424, 425, 426, 428, 431, 439, 440], "datapoint": 419, "dataset": [169, 226, 435], "datatyp": 419, "date": 422, "dditiv": 429, "de": [217, 408, 417, 418, 419, 420, 425, 426, 432, 439], "deactiv": [417, 419, 427], "deal": [378, 424, 431, 435], "debug": 419, "decid": [139, 335, 398, 401, 407, 423], "declar": [50, 54, 59, 191, 387, 420, 426], "decod": 395, "decor": [106, 271, 303, 330, 391, 419, 420, 435], "decorrel": [131, 142, 147, 410, 411, 431], "decreas": [169, 288, 403, 434, 438], "deduc": [383, 384, 406], "dedupl": 419, "deep": 392, "deepcopi": 419, "deeper": 429, "def": [375, 386, 391, 392, 393, 398, 401, 413, 420, 426, 435], "default": [39, 84, 116, 129, 131, 142, 144, 173, 188, 189, 190, 191, 197, 199, 205, 217, 237, 254, 257, 334, 375, 376, 378, 381, 396, 403, 407, 417, 419, 420, 425, 427, 429, 430, 431, 439], "default_campaign": 375, "default_model": 243, "defaultkernelfactori": [381, 386, 387, 388, 389, 403, 409], "defaultscal": 419, "defend": 422, "defin": [23, 28, 38, 42, 49, 134, 163, 169, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 205, 226, 247, 249, 250, 274, 329, 333, 334, 365, 376, 377, 378, 380, 386, 387, 388, 389, 395, 396, 401, 405, 419, 420, 422, 425, 426, 428, 431, 434, 435, 437], "definit": [197, 205, 316, 399, 417, 419, 422, 430, 433], "degener": [328, 341, 419], "degr": 409, "degre": 434, "degree_c": [395, 396, 409], "deliber": 422, "delici": 420, "deliveri": 431, "demand": [28, 414], "demo": 419, "demonstr": [374, 375, 376, 379, 382, 385, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 404, 408, 409, 412, 413, 414, 419, 430, 433, 434, 438], "denot": 23, "densiti": 393, "depend": [50, 54, 76, 108, 199, 205, 226, 288, 297, 377, 381, 385, 398, 399, 405, 415, 416, 418, 419, 420, 426, 427, 428, 429, 433, 435, 437, 438, 440], "dependenciesconstraint": 419, "deprec": [61, 136, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 205, 210, 244, 303, 386, 388, 389], "deprecationwarn": [386, 388, 389, 392], "depth": 433, "deriv": [188, 189, 190, 191, 205, 316, 422, 426, 433], "descend": 288, "describ": [129, 188, 189, 190, 191, 237, 239, 240, 243, 247, 261, 263, 265, 267, 381, 386, 391, 392, 399, 401, 403, 420, 422, 424, 425, 426, 430, 431, 434, 435], "descript": 420, "descriptor": [142, 322, 419, 429, 431, 438], "deseri": [215, 219, 224, 409, 418, 419, 425, 439], "deserialize_datafram": 434, "design": [0, 18, 23, 228, 330, 391, 395, 398, 401, 422, 423, 428, 429, 430, 432, 434], "desir": [108, 116, 119, 402, 403, 415, 417, 419, 423, 425, 427, 429, 430, 432, 434, 437, 440], "desirabilityobject": [28, 403, 417, 419, 434, 436, 439], "desktop": 419, "despit": 419, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 150, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 228, 232, 237, 239, 240, 241, 243, 247, 250, 257, 259, 261, 263, 265, 267, 277, 279, 285, 290, 291, 334, 341, 365, 376, 378, 383, 384, 403, 407, 416, 417, 418, 419, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438], "detect": [300, 335, 418, 420], "determin": [28, 84, 114, 171, 205, 316, 334, 345, 350, 362, 376, 398, 401, 422, 427, 432], "determinist": 362, "detriment": 431, "dev": [417, 419, 420], "develop": [417, 419, 424, 431, 435], "deviat": [6, 15, 271, 395, 419], "df": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 111, 116, 121, 144, 197, 199, 205, 210, 225, 230, 297, 298, 321, 328, 331, 332, 333, 334, 336, 337, 363, 375, 386, 401, 417, 426, 433, 434, 435], "dfa": [297, 298], "di": [376, 377, 378, 380, 381, 421], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 114, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 188, 189, 190, 191, 197, 199, 202, 205, 208, 218, 219, 220, 222, 232, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 291, 307, 310, 322, 327, 341, 365, 392, 395, 413, 414, 419], "dict_bas": [376, 377, 378, 380, 381], "dict_ligand": [376, 377, 378, 380, 381], "dict_solv": [376, 377, 378, 380, 381, 386, 387, 388, 389, 398, 426], "dictat": [111, 116, 121, 199, 413, 414], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 218, 220, 222, 232, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 271, 277, 279, 285, 307, 310, 327, 341, 376, 377, 378, 380, 431, 435], "diff": 420, "differ": [52, 116, 181, 197, 199, 200, 205, 226, 234, 293, 298, 327, 329, 365, 377, 386, 391, 398, 401, 403, 406, 407, 413, 414, 417, 419, 420, 422, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 437, 438], "differenti": [435, 438], "difficult": 438, "digit": 337, "dilemma": 401, "dim": [23, 383, 384, 393, 395, 406, 407, 413, 414], "dimens": [23, 362, 375, 383, 384, 393, 395, 405, 406, 413, 414, 419, 431, 433, 438], "dimension": [117, 124, 125, 126, 128, 129, 131, 138, 139, 142, 257, 330, 362, 375, 413, 414, 419], "dimethylisoxazol": 438, "direct": [376, 377, 378, 380, 417, 419, 422, 428, 431, 440], "directli": [316, 414, 417, 419, 426, 430, 434, 436], "directori": [354, 407, 419], "disabl": [292, 386, 388, 389, 419, 425, 428], "disadvantag": 434, "disappear": 419, "disc_ind": 407, "disc_indic": [406, 407], "disc_paramet": 407, "disc_recommend": [173, 407], "discard": 398, "disclaim": 422, "discourag": 425, "discret": [13, 23, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 67, 124, 125, 126, 128, 129, 131, 138, 139, 142, 173, 181, 188, 189, 190, 191, 193, 197, 199, 200, 204, 205, 234, 361, 380, 383, 389, 392, 393, 395, 403, 404, 407, 409, 414, 415, 417, 419, 423, 428, 429, 432, 434, 435, 439, 440], "discrete_param": [393, 413, 414], "discrete_spac": [383, 384, 407], "discrete_subspac": 433, "discretecardinalityconstraint": 419, "discreteconstraint": [28, 48, 49, 50, 51, 52, 53, 54, 55, 56, 205, 419, 426, 428], "discretecust": 386, "discretecustomconstraint": [386, 419, 439], "discretedep": 387, "discretedependenciesconstraint": [54, 59, 387, 398, 439], "discreteexcl": 388, "discreteexcludeconstraint": [388, 419, 428, 439], "discretelinkedparametersconstraint": [419, 439], "discretenolabelduplicatesconstraint": [54, 398, 419, 439], "discreteparamet": [128, 131, 139, 142, 205, 419], "discretepermutationinvarianceconstraint": [398, 439], "discreteprod": 389, "discreteproductconstraint": [389, 419, 439], "discretesamplingmethod": [13, 181, 363, 419, 423], "discretesumc": 389, "discretesumconstraint": [383, 389, 398, 419, 439], "discuss": [403, 422, 426, 433, 435], "disjoint": 205, "disk": [419, 439], "dispatch": 107, "displai": [337, 392, 422], "distanc": [139, 293, 335, 362], "distinct": [391, 425, 432], "distinguish": [328, 398, 419, 426, 431, 438], "distribut": [28, 150, 153, 237, 239, 240, 243, 247, 261, 263, 265, 267, 398, 403, 407, 417, 419, 422, 423, 424], "distutil": 317, "div": 395, "divers": 436, "divid": 399, "divis": 352, "dll": 418, "dmac": [376, 377, 378, 380, 381], "dmf": 426, "do": [199, 205, 242, 391, 395, 396, 398, 401, 407, 409, 410, 411, 413, 416, 417, 418, 422, 424, 426, 427, 428, 429, 431, 432, 434, 438, 439, 440], "do_baybe_work": 427, "doc": [89, 150, 303, 386, 388, 389, 417, 419], "doc101": 420, "doc103": 420, "docstr": 419, "doctest": 419, "document": [348, 395, 417, 419, 420, 421, 422, 425, 429, 435], "doe": [27, 28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 181, 226, 228, 230, 232, 237, 239, 240, 242, 243, 247, 261, 263, 265, 267, 274, 312, 321, 348, 378, 381, 392, 395, 396, 398, 410, 411, 413, 414, 419, 420, 422, 426, 430, 432, 435, 436, 438, 440], "doi": [259, 333], "domain": [237, 239, 240, 243, 247, 261, 263, 265, 267, 375, 417, 433, 435], "don": [416, 428], "done": [28, 334, 378, 380, 386, 387, 388, 389, 395, 396, 403, 409, 419, 423, 425, 426, 427, 428], "doubl": [348, 420, 427], "down": [434, 440], "downsid": 170, "draft": 419, "dramat": 438, "drastic": 431, "draw": [10, 101, 197, 399, 401, 405], "draw_arm": 401, "drawn": [18, 181], "drive": [393, 438], "driven": [327, 423], "driver": 418, "drop": [331, 332, 333, 392, 419, 426], "dry_run": 28, "dtype": [117, 287, 288, 289, 351], "due": [294, 414, 417, 419, 423, 426, 427, 431, 432, 433, 434, 437], "duplic": [54, 149, 300, 307, 419, 426], "dure": [28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 199, 205, 226, 310, 362, 398, 401, 413, 414, 417, 418, 419, 420, 421, 425, 426, 427, 428, 429, 433, 434, 435, 436], "dynam": [401, 419, 434, 439], "d\u00fcbendorf": 421, "e": [18, 23, 28, 31, 50, 52, 53, 67, 84, 87, 131, 144, 171, 199, 205, 226, 294, 300, 305, 306, 322, 327, 334, 335, 341, 370, 376, 377, 378, 396, 398, 399, 401, 417, 418, 419, 420, 423, 424, 426, 427, 429, 431, 432, 433, 434, 435, 438, 440], "e3fp": 136, "e3fpfingerprint": 136, "each": [18, 28, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 111, 116, 121, 144, 163, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 199, 228, 230, 232, 234, 242, 298, 322, 327, 328, 354, 375, 377, 378, 381, 393, 398, 399, 401, 403, 407, 413, 414, 420, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 440], "eagerli": 419, "earli": [392, 419], "earlier": [28, 416, 418], "earn": 401, "earned_reward": 401, "easi": [321, 420, 434], "easier": [420, 440], "easiest": [417, 420], "easili": [392, 417, 420, 425, 428, 431, 433, 434, 438], "ecfp": [136, 377, 419, 431], "ecfpfingerprint": 136, "ecosystem": 434, "edbo": [257, 259, 333, 419], "edbokernelfactori": [257, 419], "edit": [417, 420], "editor": 438, "editori": 422, "edwin": 438, "effect": [52, 166, 168, 169, 170, 171, 234, 391, 392, 401, 414, 419, 423, 426, 431, 432, 435, 438, 440], "effici": [205, 398, 417, 419, 433], "effortlessli": 435, "ei": [3, 381], "either": [23, 28, 200, 228, 234, 247, 271, 377, 388, 403, 407, 417, 422, 430, 431, 432, 433, 435], "elabor": 422, "elaps": 391, "elapsedtimeprint": 391, "electron": [421, 422], "electroshap": 136, "electroshapefingerprint": 136, "eleg": [413, 434], "element": [37, 38, 39, 49, 234, 293, 300, 309, 315, 335, 350, 351, 356, 398, 413, 414, 419, 426, 435], "elev": 393, "elif": [406, 407], "elimin": [420, 423], "els": [316, 317, 375, 376, 377, 378, 383, 384, 386, 387, 389, 392, 393, 401, 406, 407, 413, 414], "elsewher": 395, "emd": 421, "emdgroup": [290, 417], "emelin": 421, "emerg": 425, "empir": 401, "emploi": [28, 401, 432], "employe": [417, 427], "empow": 436, "empti": [88, 197, 199, 205, 212, 298, 312, 321, 334, 337, 398, 403, 407, 409, 419, 433], "empty_encod": [199, 205], "emptysearchspaceerror": 212, "emul": [18, 418, 419], "en": [89, 150], "enabl": [170, 292, 293, 376, 377, 378, 398, 413, 417, 418, 419, 425, 426, 427, 428, 429, 430, 432, 434, 435, 437, 438], "encod": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 138, 139, 142, 199, 205, 237, 239, 240, 243, 247, 261, 263, 265, 267, 320, 322, 376, 377, 378, 380, 381, 386, 387, 388, 389, 392, 396, 398, 401, 403, 409, 410, 411, 413, 414, 417, 419, 426, 433, 434, 438], "encompass": 425, "encount": [166, 168, 169, 170, 171, 362, 418, 419, 420, 430], "end": [0, 289, 341, 392, 396, 401, 403, 409, 422, 426, 434], "endeavor": 423, "endpoint": [419, 427], "enforc": [349, 368, 419, 420], "engin": [418, 432, 434, 435, 440], "enhanc": [23, 417], "enlarg": 431, "enough": [197, 434], "ensembl": 269, "ensur": [144, 376, 377, 378, 398, 399, 417, 426, 434, 435], "enter": [69, 205, 433], "entir": [293, 341, 363, 419, 420, 423, 427, 440], "entiti": 422, "entri": [28, 35, 38, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 220, 237, 239, 240, 243, 247, 261, 263, 265, 267, 293, 298, 327, 335, 363, 378, 386, 387, 388, 389, 398, 416, 419, 426, 427, 428, 429, 437, 440], "enum": [119, 133, 134, 135, 136, 200, 254, 282, 283, 302, 361, 419, 434], "enumer": [118, 132, 281, 393, 413, 414, 430], "env": [419, 420], "envar_nam": 427, "environ": [292, 349, 368, 375, 376, 377, 378, 384, 386, 387, 389, 392, 393, 395, 401, 413, 414, 417, 418, 419, 420, 439], "envvar": 290, "envvar_nam": 427, "eq": [386, 398], "equal": [42, 116, 171, 197, 401, 403, 409, 419, 426, 430, 433, 434, 437], "equat": [42, 426, 435], "equidist": 431, "equip": 426, "equival": [18, 31, 54, 384, 405, 423, 426, 435], "erg": 136, "ergfingerprint": 136, "erron": 419, "error": [169, 179, 181, 228, 230, 232, 244, 310, 352, 378, 396, 401, 418, 419, 426, 430, 431, 432], "esian": 417, "especi": 420, "essenti": [425, 432], "establish": [392, 413, 414, 438], "estat": 136, "estatefingerprint": 136, "ester": [376, 377, 378, 380, 381], "estim": [199, 204, 205, 237, 401, 419, 436, 439], "estimate_product_space_s": [199, 205, 440], "estimated_win_r": 401, "estimation_bia": 401, "estimation_vari": 401, "et": [377, 417, 431], "etc": [37, 38, 39, 126, 199, 277, 438], "ethanol": [398, 426], "euclidean": 362, "eval_during_augment": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56], "eval_during_cr": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56], "eval_during_model": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56], "evalu": [23, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 269, 270, 317, 406, 407, 419, 425, 427, 432, 435, 438], "even": [171, 271, 332, 413, 414, 422, 424, 425, 427, 431, 435, 436, 438, 440], "event": [28, 293, 392, 422], "everi": [424, 440], "everyth": [420, 426], "evolv": [393, 420], "ex": 429, "exabyt": 440, "exact": [28, 335, 391, 418, 419, 426, 431], "exactexplain": [82, 85, 429], "exactli": [111, 116, 121, 199, 398, 419, 424, 425, 433, 434], "exampl": [144, 230, 297, 298, 307, 316, 334, 374, 375, 379, 382, 385, 390, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 404, 405, 408, 412, 413, 414, 418, 419, 420, 421, 422, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "example_input_nam": 395, "exceed": 392, "exceedingli": 435, "except": [312, 321, 325, 339, 340, 376, 377, 378, 392, 396, 410, 411, 417, 418, 419, 422, 428], "excepthook": 418, "exceptiongroup": 419, "excess": 440, "exclud": [28, 53, 331, 386, 387, 388, 389, 403, 409, 419, 422, 426, 439], "exclude_list": 333, "exclus": [51, 385, 415, 419, 422, 426, 435, 439], "execut": [28, 61, 228, 312, 375, 377, 418, 419, 420, 422, 427, 434, 435, 438], "exemplari": 425, "exercis": 422, "exhaust": [169, 429, 432], "exist": [106, 199, 293, 303, 312, 398, 418, 419, 420, 423, 425, 426, 428, 434, 438], "exp_rep": [205, 386, 387, 388, 389, 398, 433], "exp_rep_byt": [204, 440], "exp_rep_human_read": [204, 440], "exp_rep_shap": [204, 440], "expect": [3, 4, 9, 11, 12, 14, 49, 241, 249, 312, 330, 381, 387, 393, 395, 398, 399, 401, 411, 419, 420, 425, 426, 429, 430, 431, 434, 435, 437, 440], "expens": [10, 181, 383, 435], "experi": [0, 28, 163, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 228, 237, 239, 240, 243, 247, 261, 263, 265, 267, 376, 377, 378, 380, 381, 406, 407, 419, 423, 425, 426, 428, 430, 431, 432, 437, 438, 439], "experiment": [28, 88, 111, 116, 121, 125, 128, 129, 131, 139, 142, 163, 166, 167, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 199, 204, 205, 226, 237, 239, 240, 243, 247, 261, 263, 265, 267, 277, 279, 285, 327, 329, 386, 387, 388, 389, 393, 403, 409, 417, 419, 423, 424, 426, 430, 431, 433, 434, 435, 437, 438, 439, 440], "experimentalist": 416, "explain": [66, 83, 84, 85, 87, 88, 393, 419, 421, 436, 439], "explainer_cl": [84, 88, 429], "explan": [84, 88, 419, 425, 436], "explanation_index": [84, 429], "explicit": [144, 170, 391, 392, 396, 398, 405, 410, 411, 419, 420, 434, 438, 439], "explicitli": [197, 205, 391, 407, 414, 422, 428, 433, 438], "exploit": [8, 18, 19, 401, 419], "explor": [8, 19, 28, 401, 423, 432, 433, 438], "exploratori": 423, "exponenti": 205, "expos": [28, 391, 419], "exposur": 419, "expr": [35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56], "express": [35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 417, 419, 422, 426], "extend": [428, 431, 438], "extens": [419, 432], "extra": [377, 418, 419], "extract": [28, 166, 168, 169, 170, 171, 336, 393, 413, 429, 439], "extract_pi": 393, "f": [317, 375, 376, 377, 378, 383, 384, 386, 387, 388, 389, 391, 392, 393, 398, 399, 403, 405, 406, 407, 413, 414, 440], "f1": 435, "f2": 435, "fabian": 421, "face": [237, 239, 240, 243, 247, 261, 263, 265, 267, 399, 401], "facilit": 432, "fact": [18, 393, 398, 416, 426, 430], "factor": [144, 425, 440], "factori": [144, 197, 247, 248, 249, 250, 251, 257, 259, 308, 381, 386, 387, 388, 389, 403, 409, 419], "fail": [407, 411, 418, 419], "failur": [279, 422], "failure_valu": 279, "fairli": 430, "fake": [230, 327, 380, 381, 395, 396, 403, 419, 424, 435, 439], "fall": [171, 392, 425, 437], "fallback": [114, 205, 343, 354, 395, 419, 433], "fals": [6, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 88, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 168, 169, 170, 171, 181, 197, 199, 205, 210, 237, 243, 261, 263, 265, 267, 279, 288, 293, 305, 306, 310, 316, 317, 330, 334, 335, 336, 356, 381, 386, 387, 388, 389, 403, 409, 410, 411, 417, 419, 427], "famili": 426, "familiar": [376, 377, 378, 381, 383, 384, 386, 387, 388, 389, 395, 396, 403, 406, 407, 409], "fang": 421, "fantasi": 10, "far": 425, "farthest": [193, 361, 362, 381, 417, 419, 421, 423, 432], "farthest_point_sampl": 419, "fashion": [287, 289], "fast": [386, 388, 389, 433, 437], "faster": 205, "fault": 79, "faulti": 418, "favicon": 419, "favor": 419, "fc": [376, 377, 378], "feasibl": [425, 429], "featur": [84, 101, 142, 333, 417, 418, 420, 426, 429, 436, 438], "fed": [417, 429], "feder": 421, "fee": 422, "feed": [416, 417, 428, 438], "feedback": 421, "feel": 392, "few": [375, 401, 419, 420, 423, 431, 434, 438, 440], "field": [219, 325, 356, 419, 438, 439], "fifti": 422, "fig": 393, "figur": [354, 393], "file": [354, 376, 377, 378, 395, 396, 407, 417, 419, 422, 427, 434, 438], "filenotfounderror": [376, 377, 378, 392], "fill": [28, 230, 393], "filler": 426, "filter": [28, 35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 199, 205, 331, 334, 386, 398, 419, 426, 428, 433, 438, 440], "filter_attribut": 419, "filter_df": [28, 419], "filterwarn": 392, "final": [375, 377, 380, 392, 398, 414], "find": [199, 310, 351, 354, 417, 423, 425, 426, 438], "fine": [396, 409, 410, 411, 417], "finer": [144, 417], "fingerprint": [136, 142, 320, 322, 417, 419, 421, 431], "finish": 424, "finit": [169, 226, 234, 340, 370, 401, 431, 435], "first": [199, 232, 350, 362, 375, 377, 380, 381, 386, 391, 392, 395, 396, 398, 403, 407, 411, 413, 414, 417, 418, 419, 425, 426, 430, 431, 432, 433, 438, 440], "fit": [28, 191, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 363, 365, 376, 377, 378, 386, 387, 388, 389, 395, 403, 409, 419, 422, 426, 431, 436], "fit_gpytorch_ml": 419, "fit_gpytorch_mll_torch": 419, "fitnr": 403, "fitzner": [417, 421], "fix": [226, 250, 392, 393, 398, 401, 406, 407, 420, 425, 431, 435, 438, 440], "flag": [23, 28, 50, 84, 88, 111, 116, 121, 181, 199, 200, 205, 330, 335, 336, 416, 419, 425, 427, 428, 429, 432], "flake8": 419, "flexibl": [391, 405, 419, 434, 435], "flexibli": 432, "float": [8, 13, 19, 39, 42, 44, 45, 95, 96, 97, 98, 99, 100, 101, 102, 106, 108, 116, 117, 131, 138, 139, 142, 147, 148, 154, 155, 156, 157, 158, 159, 160, 181, 204, 205, 228, 232, 237, 271, 279, 280, 287, 288, 289, 294, 324, 327, 328, 329, 333, 341, 345, 347, 348, 350, 351, 352, 367, 370, 371, 372, 391, 393, 395, 401, 403, 419, 420, 439], "float64": 367, "floattensortyp": 395, "fly": [170, 434], "fn": 303, "focu": [8, 19, 425], "focus": [121, 407, 417], "folder": [377, 417, 420, 427, 436], "follow": [166, 168, 169, 170, 171, 199, 228, 230, 232, 376, 377, 378, 381, 383, 384, 386, 387, 388, 389, 391, 392, 396, 401, 403, 407, 410, 411, 413, 414, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "footprint": [10, 199], "forbid": 373, "forc": [84, 86, 181, 419, 420, 429, 432], "forest": [266, 267], "forgiv": 437, "fork": 420, "form": [205, 226, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 327, 416, 417, 422, 423, 425, 430, 431, 432, 433, 434, 435, 440], "formal": [399, 416], "format": [42, 291, 337, 342, 345, 395, 396, 409, 410, 417, 418, 419, 420, 425, 427, 434, 435], "format_except": 418, "former": [398, 419], "formul": 438, "formula": 398, "forrest": 419, "found": [77, 144, 197, 205, 310, 320, 348, 351, 354, 392, 398, 403, 417, 418, 420, 425, 426, 432, 438], "foundat": 432, "four": 398, "fourier": 101, "fourth": 426, "fp": [361, 419, 423], "fp_size": [136, 431], "fpsrecommend": [381, 395, 396, 409, 410, 411, 417, 424, 432], "frac": [414, 430], "frac1": 387, "fraction": [13, 96, 324, 392, 423, 426, 427], "fraction1": 387, "fraction_1": 426, "fraction_2": 426, "fraction_3": 426, "frame": [329, 429, 440], "frame1": 387, "frame2": 387, "frame_1": 426, "frame_2": 426, "framea": 387, "framea_a": 387, "frameb": 387, "framework": [425, 431], "free": [420, 422, 427], "freedom": 434, "freeli": 398, "frequenc": 101, "frequent": 401, "fresh": 392, "frictionless": 434, "friendli": 419, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 136, 138, 139, 142, 144, 150, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 222, 230, 232, 234, 237, 239, 240, 243, 247, 250, 255, 259, 261, 263, 265, 267, 271, 277, 279, 285, 288, 289, 312, 316, 317, 321, 329, 330, 331, 333, 341, 352, 354, 363, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 398, 399, 401, 403, 405, 406, 407, 408, 409, 411, 413, 414, 415, 416, 418, 420, 422, 423, 424, 426, 428, 429, 430, 431, 432, 435, 437, 438, 439, 440], "from_bound": [197, 419, 433], "from_campaign": [84, 429], "from_config": [28, 410, 411, 425], "from_datafram": [197, 199, 205, 419, 428, 433, 434, 440], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 341, 395], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 341, 395, 396, 409, 425, 434], "from_paramet": [197, 199, 205, 419], "from_preset": 247, "from_product": [197, 199, 205, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 398, 399, 403, 405, 406, 407, 409, 410, 411, 413, 414, 417, 419, 426, 428, 433, 434, 435], "from_recommend": [84, 429], "from_record": [434, 435], "from_simplex": [205, 398, 419, 428, 433, 440], "from_surrog": [84, 429], "frozenset": 398, "fsspec": 419, "fulfil": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 392, 398, 399], "full": [23, 197, 348, 374, 415, 419, 425, 428, 429, 431, 438, 439], "full_factori": 197, "full_lik": 393, "full_lookup": [376, 377, 378], "fulli": [398, 417, 419, 427, 428, 435], "fulltest": 420, "func": 420, "func_nam": 413, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 36, 42, 43, 49, 57, 64, 71, 79, 81, 84, 100, 107, 110, 113, 115, 120, 143, 146, 179, 181, 182, 198, 203, 209, 213, 214, 222, 223, 226, 227, 229, 231, 232, 233, 238, 242, 248, 253, 268, 272, 273, 276, 283, 286, 287, 288, 289, 290, 293, 294, 296, 299, 314, 318, 323, 326, 329, 336, 337, 339, 344, 346, 353, 354, 357, 360, 369, 380, 386, 387, 388, 389, 391, 393, 398, 401, 409, 413, 414, 417, 418, 419, 423, 425, 426, 428, 430, 432, 433, 435, 436, 437, 438, 440], "function_nam": [413, 414], "functionalgroup": 136, "functionalgroupsfingerprint": 136, "fundament": [431, 434], "furo": 419, "further": [398, 399, 409, 417, 424, 428, 432, 433, 436, 438, 439], "furthermor": 403, "furyl": [376, 377, 378], "futur": [54, 199, 242, 386, 388, 389, 392, 413, 428, 429, 437], "fuzzi": 293, "fuzzy_row_match": 293, "g": [50, 52, 53, 67, 84, 87, 131, 144, 199, 205, 300, 322, 335, 401, 417, 418, 419, 420, 423, 424, 426, 427, 429, 431, 432, 433, 435, 440], "g1": 399, "g2": 399, "g3": 399, "gain": [205, 425, 429], "gamma": 155, "gammaprior": 419, "garbag": 419, "gather": [171, 413, 414, 423, 438], "gaussian": [89, 188, 239, 245, 246, 247, 248, 252, 253, 254, 256, 257, 258, 259, 287, 381, 403, 419, 426, 432, 438], "gaussian_kd": 393, "gaussian_process": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 247, 249, 250, 254, 257, 259, 381, 419], "gaussianmixtureclusteringrecommend": 432, "gaussianprocesspreset": [247, 255], "gaussianprocesssurrog": [255, 381, 386, 387, 388, 389, 393, 403, 409, 410, 411, 419, 436], "gcf": [376, 378], "ge": 384, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 135, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 237, 239, 240, 243, 247, 250, 257, 259, 261, 263, 265, 267, 277, 279, 285, 291, 316, 322, 328, 341, 357, 365, 375, 381, 391, 398, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 434, 435, 436, 437, 438, 439, 440], "geom_mean": [108, 116, 119, 403, 430], "geometr": [119, 352, 403, 430], "germani": [417, 421, 427], "get": [28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 179, 181, 197, 247, 327, 381, 392, 398, 406, 407, 416, 417, 419, 424, 439, 440], "get_candid": [205, 392], "get_cmap": 393, "get_comp_rep_parameter_indic": [199, 419], "get_current_recommend": [166, 168, 169, 170, 171, 419], "get_integration_point": 13, "get_invalid": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56], "get_invalid_polar": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56], "get_lin": 392, "get_next_recommend": [166, 168, 169, 170, 171, 419], "get_non_meta_recommend": [166, 168, 169, 170, 171, 419], "get_parameters_by_nam": [197, 199, 205], "get_parameters_from_datafram": [197, 205], "get_subclass": 381, "get_surrog": [28, 84, 179, 181, 419, 429, 436], "get_transform_object": 419, "get_transform_paramet": 419, "get_valid": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 419], "getawai": 136, "getawayfingerprint": 136, "ghosecrippen": 136, "ghosecrippenfingerprint": 136, "git": [417, 420], "github": [259, 290, 313, 333, 395, 419, 420, 421], "give": [395, 396, 398, 414, 422, 425, 430, 434], "given": [26, 28, 31, 37, 38, 39, 59, 77, 84, 87, 88, 111, 116, 121, 129, 142, 144, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 211, 226, 230, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 271, 282, 294, 298, 305, 306, 310, 311, 312, 315, 316, 319, 320, 324, 327, 330, 336, 341, 342, 350, 352, 355, 356, 362, 365, 386, 387, 388, 389, 392, 398, 401, 403, 407, 413, 414, 425, 433, 435], "glass_transition_tempc": 431, "global": [13, 358, 419, 439, 440], "gmean": 352, "gmm": 188, "go": [297, 398, 417], "goal": [375, 401, 430, 438], "goe": 436, "good": [327, 392, 403, 425, 427, 437], "good_interv": 327, "good_reference_valu": 327, "goodwil": 422, "googl": [419, 420], "govern": 417, "gp": [237, 239, 240, 243, 247, 261, 263, 265, 267, 419], "gpytorch": [89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 150, 152, 154, 155, 156, 157, 158, 159, 160, 419], "grab": 416, "gradient": [10, 181, 265, 419, 427, 432], "grant": [419, 422], "granular": [396, 409, 410, 411, 417], "granularity_coar": 409, "granularity_fin": 409, "great": [401, 434], "greater": 171, "greatli": 420, "greedi": [181, 419, 432], "grid": [413, 414], "grid_d": [413, 414], "grossli": 422, "group": [298, 307, 365, 399, 417, 419, 425, 429], "groupbi": [232, 234], "grow": 440, "gt": [389, 398], "gu16": 431, "guarante": [419, 426, 427, 432], "guid": [380, 417, 418, 419, 420, 423, 425, 428, 430, 433, 435, 438], "guidelin": [419, 420, 423], "ha": [28, 50, 70, 71, 84, 169, 197, 199, 205, 237, 239, 240, 243, 247, 261, 263, 265, 267, 297, 310, 312, 316, 328, 335, 362, 363, 377, 381, 386, 387, 388, 389, 398, 403, 407, 409, 417, 419, 420, 422, 424, 425, 426, 429, 431, 433, 434, 435, 437, 438], "had": [226, 426, 431, 435], "half": [139, 156, 157, 341, 407, 424], "halfcauchyprior": 419, "halfnormalprior": 419, "hamster": 438, "hand": [42, 142, 399, 401, 413, 414, 417, 425, 434], "handl": [84, 126, 228, 230, 271, 339, 386, 387, 401, 403, 419, 425, 430, 440], "happen": [169, 403, 407, 414, 418, 419, 420, 433, 434, 438], "happili": 430, "hard": [419, 438, 440], "harmless": 422, "hartmann": [393, 413, 414], "hasattr": [383, 384, 406, 407], "hash": [291, 417, 427, 431], "hashabledict": 419, "have": [23, 28, 35, 37, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 111, 116, 121, 142, 191, 199, 226, 242, 274, 298, 307, 310, 327, 335, 336, 348, 376, 377, 380, 381, 386, 387, 391, 393, 398, 399, 401, 403, 406, 407, 413, 414, 417, 418, 419, 420, 422, 423, 424, 425, 426, 428, 430, 431, 432, 434, 435, 436, 438, 440], "head": 419, "header": 356, "heart": 438, "heatmap": [84, 86], "help": [401, 434, 435, 438], "helper": [391, 393, 395, 398, 434], "henc": [321, 398, 401, 409, 426, 431, 440], "here": [53, 348, 376, 378, 380, 383, 384, 391, 392, 396, 398, 399, 406, 407, 409, 413, 414, 416, 417, 418, 424, 426, 428, 430, 431, 432, 433, 434, 435, 437, 438], "herebi": 422, "herein": [422, 425], "heurist": 181, "hierarch": 434, "hierarchi": [77, 419, 420, 425, 434], "high": [257, 375, 401, 419, 420, 423, 425, 426, 431, 434], "higher": [8, 19, 142, 401, 418, 426, 429, 432], "highest": [423, 434], "highlight": 438, "hint": 420, "histogram": 294, "histori": 420, "hold": [41, 307, 422, 434], "home": [386, 388, 389], "homepag": [417, 419], "hood": 431, "hook": [46, 114, 205, 214, 218, 312, 415, 418, 419, 420], "hopp": [417, 421], "host": [417, 419, 427], "hostnam": [291, 427], "hot": [133, 377, 401, 417, 419, 431], "how": [51, 228, 230, 362, 375, 376, 378, 379, 380, 381, 382, 385, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 407, 409, 410, 411, 414, 417, 425, 426, 427, 430, 435, 436, 437, 438], "howev": [144, 205, 242, 312, 391, 398, 401, 406, 407, 416, 418, 420, 422, 423, 424, 425, 426, 427, 429, 431, 433, 434, 435, 436, 438, 440], "hrovatin": 421, "html": [89, 150, 290, 303, 348, 395, 419], "http": [89, 150, 259, 290, 303, 313, 333, 348, 417, 419, 422, 438], "hue": [375, 376, 377, 378, 392, 413, 414], "human": [204, 345, 409, 419, 421, 434], "hybrid": [22, 23, 67, 172, 173, 181, 194, 199, 200, 381, 382, 386, 387, 388, 389, 403, 404, 409, 415, 417, 419, 432, 433], "hybrid_recommend": 407, "hybrid_sampl": [181, 432], "hyperrectangl": [197, 433], "hypothesi": [417, 419, 420], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 66, 67, 69, 70, 71, 72, 74, 84, 87, 88, 103, 106, 117, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 212, 226, 228, 230, 232, 234, 237, 239, 240, 241, 242, 243, 247, 257, 261, 263, 265, 267, 271, 274, 282, 287, 288, 289, 292, 293, 294, 298, 301, 302, 303, 305, 306, 310, 312, 313, 315, 316, 317, 320, 321, 327, 328, 329, 330, 334, 335, 336, 337, 340, 341, 348, 350, 351, 354, 356, 362, 363, 370, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 398, 399, 401, 403, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "ideal": [424, 426, 435], "ident": [144, 297, 298, 428, 431, 434, 438], "identif": 401, "identifi": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 232, 307, 321, 335, 336, 392, 419, 426, 429, 431, 433, 434, 435, 438], "idx_offset": 42, "ignor": [111, 116, 121, 169, 181, 199, 206, 207, 228, 230, 232, 310, 333, 378, 392, 407, 419, 426, 434, 440], "ignore_exampl": 419, "ignore_list": 332, "ii": 422, "iii": 422, "illustr": [405, 428], "iloc": 424, "imag": [401, 419], "imagin": [398, 401], "immedi": [354, 391, 425], "immut": 419, "impact": [377, 414, 427], "imperfect": 329, "implement": [18, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 117, 163, 174, 234, 241, 314, 386, 392, 398, 413, 419, 420, 421, 423, 429, 432, 433, 435, 438], "impli": [398, 417, 422, 426, 431], "implicitli": 434, "import": [76, 84, 116, 230, 392, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "impos": [398, 399, 426], "imposs": [417, 427, 428, 434], "improv": [3, 4, 7, 9, 11, 12, 14, 16, 381, 384, 390, 392, 415, 417, 419, 422, 427], "imput": [228, 230, 374, 378, 415, 417], "impute_mod": [228, 230, 232, 378, 435], "inabl": [417, 422], "inaccuraci": 417, "inact": 41, "inc": 438, "incident": 422, "includ": [59, 111, 116, 121, 171, 228, 305, 306, 332, 376, 387, 396, 398, 410, 411, 414, 419, 420, 422, 423, 424, 426, 428, 440], "inclus": 422, "incom": 434, "incompat": [63, 64, 65, 66, 67, 88, 243, 388, 426], "incompatibilityerror": 28, "incompatibleacquisitionfunctionerror": 424, "incompatibleexplainererror": 429, "incomplet": 419, "inconsist": 419, "incorpor": [422, 424, 436, 440], "incorrect": 419, "incorrectli": 419, "increas": [10, 169, 232, 288, 289, 403, 413, 414, 419, 423, 431, 438], "increment": 205, "incur": 422, "indefinit": [169, 228], "indemn": 422, "indemnifi": 422, "indent": 356, "independ": [173, 239, 263, 395, 419, 432, 435], "independentgaussiansurrog": [243, 261, 263, 265, 419], "index": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 199, 232, 297, 298, 334, 335, 395, 396, 403, 407, 409, 419, 429, 431, 433, 435], "indexkernel": 419, "indic": [28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 79, 84, 87, 124, 125, 126, 128, 129, 131, 138, 139, 142, 166, 168, 169, 170, 171, 199, 297, 298, 301, 302, 330, 362, 398, 407, 419, 422, 428, 432, 435, 436], "indirect": [305, 306, 422], "indistinguish": 398, "individu": [50, 51, 104, 105, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 228, 337, 392, 399, 422, 425, 428, 430, 432, 438], "induc": 401, "industri": 438, "ineffici": 205, "inequ": [42, 197, 433], "inf": [386, 387, 388, 389, 409], "infeas": 428, "infer": [144, 243, 413, 414, 419, 433], "inferencesess": 243, "infin": 148, "infinit": [169, 170, 308, 340, 370, 371, 419, 431], "influenti": 438, "info": [294, 419], "inform": [23, 126, 277, 336, 376, 377, 378, 393, 398, 406, 407, 414, 417, 419, 420, 422, 424, 427, 428, 431, 433, 438, 439], "infring": 422, "ingest": [205, 228, 431, 432], "ingredi": [398, 399, 426], "inher": [18, 398], "inherit": 420, "init": 273, "initi": [95, 96, 97, 98, 99, 100, 101, 102, 106, 171, 173, 181, 188, 189, 190, 191, 193, 205, 228, 232, 293, 362, 374, 386, 387, 388, 389, 392, 393, 403, 409, 414, 415, 419, 421, 425, 427, 431, 432, 434, 435, 438], "initial_data": [228, 232, 376, 414, 435], "initial_recommend": [171, 381, 392, 393, 395, 396, 401, 409, 410, 411, 417, 432], "initial_recommender_cl": 419, "initial_strategi": 419, "initial_typ": 395, "inject": 434, "inner": [164, 334, 429, 432, 434], "inplac": [377, 413, 414, 440], "input": [37, 38, 39, 117, 125, 128, 129, 131, 139, 142, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 277, 279, 285, 287, 307, 324, 325, 329, 330, 334, 335, 341, 343, 350, 362, 375, 395, 403, 413, 414, 419, 434, 435, 438], "input_dim": 395, "input_label": 330, "inputtransform": 365, "insid": [392, 395, 396, 418, 434], "insight": [84, 392, 417, 419, 421, 439], "inspect": [316, 391, 398], "instabl": [419, 426], "instal": [419, 420, 427, 429, 431, 440], "instanc": [37, 38, 39, 50, 53, 84, 171, 199, 327, 387, 392, 398, 399, 417, 418, 420, 424, 425, 426, 427, 429, 431, 433, 434, 435, 440], "instanti": [243, 392, 425], "instead": [166, 168, 169, 170, 171, 293, 321, 330, 386, 388, 389, 417, 418, 419, 425, 426, 430, 431, 434, 435, 437, 438, 440], "institut": [421, 422], "instruct": [417, 419, 437, 439], "instrument_nam": 294, "int": [10, 13, 18, 28, 31, 41, 42, 48, 84, 91, 92, 93, 96, 98, 99, 100, 101, 102, 117, 133, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 228, 232, 234, 279, 280, 287, 288, 289, 294, 337, 351, 355, 358, 359, 362, 363, 365, 386, 388, 389, 398, 401, 403, 414, 420, 431], "integ": [31, 133, 199, 232, 407, 419, 420, 431], "integr": [13, 419, 420, 423, 425], "intend": [380, 391, 413, 420, 432], "intens": 431, "intention": 422, "interact": [27, 28, 380, 417, 418, 425, 428, 434], "interchang": 398, "interconnect": 425, "interest": [429, 430, 440], "interfac": [163, 241, 249, 391, 393, 419, 422, 425, 428, 429], "intermedi": [191, 362], "intern": [28, 42, 54, 169, 375, 392, 403, 419, 426, 427, 431, 432, 433, 434], "internet": 417, "internship": 421, "interplai": 419, "interpol": [96, 257, 419], "interpret": [199, 226, 324, 396, 398, 410, 411, 414, 427, 433, 435], "interrupt": 61, "intersect": 407, "interv": [138, 285, 287, 288, 289, 403, 419, 425, 431, 434, 437], "intrins": 438, "introduc": [418, 419, 426, 431, 432, 435], "intuit": [425, 429], "invalid": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 68, 205, 321, 335, 363, 396, 410, 418, 425, 426, 433], "invalid_config": 411, "invalid_surrogate_model": 396, "invalid_typ": 411, "invari": [50, 53, 54, 297, 298, 426], "invers": [218, 434], "invert": [28, 334], "investig": [226, 435, 436], "invok": [435, 439, 440], "involv": [28, 205, 391, 398, 417, 427, 429, 430, 431, 434, 438], "io": 290, "irrelev": [398, 419, 426], "irrespect": [293, 335], "irrevoc": 422, "is_bound": [341, 419], "is_continu": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142], "is_degener": 341, "is_discret": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142], "is_empti": [197, 205, 419], "is_eq": 42, "is_finit": 419, "is_fully_unbound": 341, "is_half_bound": 341, "is_in_rang": [124, 125, 126, 128, 129, 131, 138, 139, 142], "is_left_bound": 341, "is_mc": 419, "is_numer": [124, 125, 126, 128, 129, 131, 138, 139, 142, 419], "is_right_bound": 341, "is_stat": [166, 168, 169, 170, 171, 419, 428], "iso": 395, "isoxazol": 438, "issu": [242, 303, 313, 419, 422, 435, 440], "item": [38, 124, 125, 126, 128, 129, 131, 138, 139, 142, 398, 401, 413, 414, 431], "iter": [28, 138, 169, 170, 199, 228, 242, 285, 308, 329, 342, 376, 386, 387, 388, 389, 392, 393, 401, 413, 414, 417, 419, 423, 425, 431, 432, 435, 436, 440], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 197, 199, 205, 222, 234, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 294, 297, 304, 312, 316, 327, 341, 345, 375, 381, 391, 393, 398, 399, 401, 414, 417, 418, 420, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440], "itself": [391, 413, 418, 438], "j": [377, 417, 431, 438], "jackiepho": [376, 377, 378], "januari": 422, "javadi": 421, "jin": 421, "join": [334, 418], "joint": 425, "jointli": 425, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 341, 354, 395, 396, 409, 410, 419, 439], "json_str": 434, "juli": 421, "julian": 421, "jump": [419, 438], "jupyt": 395, "just": [401, 416, 420, 434], "k": [139, 189, 362, 375, 376, 377, 378, 380, 381, 383, 384, 392, 398, 405, 406, 407, 419, 428, 432, 440], "karin": 421, "kde": 393, "keep": [49, 142, 197, 205, 392, 419, 420], "kei": [307, 327, 377, 420, 429], "kept": [334, 431, 436], "kernel": [91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 247, 248, 249, 250, 251, 257, 259, 381, 386, 387, 388, 389, 403, 409, 419, 426, 438], "kernel_factori": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 247, 249, 250], "kernel_or_factori": 247, "kernelexplain": [82, 84, 85, 88, 429], "kernelfactori": [247, 250, 251, 257, 259, 419], "keyword": [84, 142, 378, 381, 407, 414, 419, 424, 426, 433, 435], "kgaa": [417, 421, 427], "kian": 438, "kickstart": 434, "kind": [181, 417, 419, 422, 426, 431, 432], "kiter": [386, 387, 388, 389, 403], "klekotaroth": 136, "klekotarothfingerprint": 136, "kmean": 381, "kmeansclusteringrecommend": [381, 432], "knob": 417, "know": [401, 410, 417, 418, 434, 438], "knowledg": [10, 417, 419, 438], "known": [426, 428, 438], "koller": 438, "kwarg": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 95, 97, 99, 104, 105, 106, 152, 154, 155, 156, 157, 158, 159, 160, 163, 183, 241, 244, 249, 322, 340], "kwargs_conform": [142, 322, 431], "kwargs_fingerprint": [142, 322, 431], "l0": 31, "l1": 431, "l664": 259, "label": [53, 54, 131, 142, 294, 330, 398, 399, 417, 419, 426, 431, 433, 435], "labelpad": 393, "laggner": 136, "laggnerfingerprint": 136, "lambda": [386, 388, 389, 392, 398, 413, 436], "lanat": 429, "land": 419, "languag": [303, 399, 417], "larg": [142, 205, 383, 384, 399, 419, 427, 431, 435, 440], "larger": [96, 139, 363, 381, 388, 425, 426, 434, 438], "largest": [362, 401, 423], "last": [169, 401, 420, 425, 432], "last_call_tim": 391, "lastli": 393, "latent": 431, "later": [139, 418, 425, 434], "latest": [170, 417, 420, 425], "latter": [18, 28, 297, 316, 392, 398, 425, 438], "law": [417, 422], "lawsuit": 422, "layer": 136, "layeredfingerprint": 136, "layout": 419, "lazi": [207, 366, 419], "lazili": [419, 427], "lazyfram": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 207], "le": 384, "le_method": 420, "lead": [75, 403, 419, 434], "lean": 420, "learn": [13, 233, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 381, 386, 387, 388, 389, 401, 403, 409, 413, 415, 417, 419, 426, 429, 431, 436, 437, 439], "least": [169, 399, 417, 422, 424, 425], "leav": 434, "lee": 421, "left": [72, 73, 160, 228, 328, 335, 341, 387, 419, 430], "left_df": 335, "leftov": 419, "legal": 422, "legend": [376, 378], "len": [387, 392, 393, 398, 399, 401], "length": [97, 169, 170, 237], "lengthi": 425, "lengthscal": [96, 97, 98, 100, 101, 102], "lengthscale_initial_valu": [96, 97, 98, 100, 101, 102], "lengthscale_prior": [96, 97, 98, 100, 101, 102], "leq": 31, "less": [298, 392, 393, 401, 425, 440], "let": [375, 377, 391, 392, 393, 395, 396, 398, 399, 405, 414, 417, 426, 430, 434], "level": [329, 419, 420, 424, 425, 426, 432, 434], "leverag": [392, 425, 432], "li": 431, "liabil": 422, "liabl": 422, "lib": [386, 388, 389, 418], "librari": 418, "licensor": 422, "lie": [28, 237, 239, 240, 243, 247, 261, 263, 265, 267, 327], "liebig": 421, "life": [417, 420, 421, 440], "lifecycl": 425, "ligand": [376, 377, 378, 380, 381, 392, 417, 429, 431], "ligand_data": 392, "ligand_smil": 392, "like": [191, 232, 300, 393, 398, 401, 417, 418, 419, 420, 424, 425, 426, 428, 431, 434, 435, 438, 440], "likelihood": 237, "lime": [84, 87, 429], "limetabular": [82, 83, 429], "limit": [257, 294, 393, 417, 421, 422, 426, 433, 439], "line": [341, 356, 376, 378, 392, 401, 419, 420, 423, 425, 431, 435, 438], "linear": [42, 95, 197, 261, 283, 288, 381, 382, 403, 415, 419, 420, 429, 433, 437], "linear_model": 395, "linear_regressor": 395, "linearkernel": 419, "linearli": [257, 288, 289, 403, 419], "lineplot": [375, 376, 377, 378, 392, 413, 414], "lingo": 136, "lingofingerprint": 136, "link": [52, 418, 419, 422, 431], "linspac": [386, 387, 388, 389, 393, 395, 396, 398, 406, 407, 409, 413, 414, 440], "lint": [417, 419, 420], "linter": [419, 420], "list": [31, 32, 33, 34, 35, 38, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 108, 129, 144, 149, 169, 170, 197, 199, 205, 206, 207, 210, 211, 212, 228, 232, 234, 293, 305, 306, 307, 315, 322, 327, 331, 332, 333, 335, 336, 362, 376, 381, 386, 387, 388, 389, 393, 398, 399, 401, 403, 406, 407, 414, 417, 420, 422, 426, 430, 431, 432, 433, 435], "liter": [84, 108, 169, 228, 230, 232, 329, 362, 420], "literatur": 419, "litig": 422, "littl": 418, "liver": [435, 438], "ll": 428, "load": [354, 366, 392, 395, 410, 411, 418, 419], "loc": [158, 159, 376, 378], "local": [418, 420, 427, 429, 439], "locat": [158, 159, 424, 427, 438], "lockfil": 419, "log": [158, 294, 381, 417, 427], "logarithm": [4, 11, 12, 352], "logei": [4, 419], "logic": [164, 327, 330, 375, 419, 426, 432, 435, 440], "lognormalprior": 419, "logo": 419, "long": [425, 434, 435], "longer": 419, "look": [230, 381, 398, 401, 418, 423, 425, 426, 428, 429, 434, 435, 437], "look_up_target": 228, "lookup": [226, 228, 232, 234, 330, 335, 374, 375, 393, 406, 415, 419, 429, 439], "lookup_df": 230, "lookup_test_task": 414, "lookup_training_task": 414, "lookup_valu": [383, 384, 393, 406, 407], "lookup_withmiss": 378, "loop": [226, 228, 234, 386, 387, 388, 389, 392, 403, 419, 424, 429, 435, 440], "loss": 422, "lost": 434, "lot": 405, "low": [257, 401, 418, 419, 429, 431, 434], "lower": [160, 287, 288, 289, 341, 376, 378, 393, 403, 413, 414, 431, 437], "lower_bound": 433, "lst_exclud": 331, "lt": 418, "luxuri": 425, "m": 398, "m1": 418, "mac": 418, "macc": 136, "maccsfingerprint": 136, "machin": [401, 417, 418, 420, 423, 427, 431, 437, 438], "machineri": [18, 181, 418, 420, 428, 438, 440], "made": [76, 228, 362, 378, 417, 418, 422, 426, 427, 428, 435], "magic": 438, "magnitud": [328, 329, 440], "mai": [28, 111, 116, 121, 199, 312, 416, 417, 422, 425, 428, 434, 435], "mail": 422, "main": [27, 28, 417, 419], "maintain": [271, 420, 428], "major": [419, 435], "make": [8, 19, 54, 181, 269, 270, 271, 303, 328, 330, 376, 378, 381, 383, 398, 399, 417, 418, 420, 422, 424, 425, 426, 428, 429, 431, 434, 438, 440], "make_explainer_for_surrog": 84, "malfunct": 422, "manag": [27, 197, 198, 199, 205, 359, 419, 422, 435], "mandatori": [416, 419, 437], "mani": [363, 398, 406, 407, 417, 425, 431, 434, 437, 438], "manipul": [419, 427], "manner": 427, "manual": [407, 418, 419, 434], "map": [131, 136, 142, 230, 232, 287, 288, 289, 310, 330, 365, 376, 377, 378, 403, 435, 437], "mapfingerprint": 136, "mapl": [82, 83, 84, 87, 429], "margin": 419, "mark": [422, 425, 438, 439], "markdown": [396, 410, 411, 419], "marker": [375, 376, 377, 378, 392, 413, 414, 419], "markers": [375, 377, 392, 413, 414], "market": 401, "marketplac": 419, "martin": [417, 421], "mask_bad1": 386, "mask_bad2": 386, "mask_bad3": 386, "mask_good": [386, 426], "mass": 154, "master": 259, "match": [28, 78, 125, 128, 129, 131, 139, 142, 144, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 277, 279, 282, 285, 293, 310, 312, 335, 336, 391, 393, 403, 407, 417, 419, 424, 425, 428, 430, 434, 435, 439], "match_attribut": 419, "match_targeta": 437, "match_targetb": 437, "materi": [401, 421, 438], "matern": 96, "maternkernel": 419, "math": [392, 398], "mathemat": 419, "matmin": 418, "matplotlib": [376, 378, 393, 419], "matter": [398, 405, 420, 430], "max": [230, 282, 328, 376, 377, 378, 380, 381, 386, 387, 388, 389, 392, 393, 395, 396, 401, 403, 409, 410, 411, 417, 419, 430, 434, 435, 439], "max_cardin": [31, 41, 48], "max_column": [337, 398], "max_colwidth": 337, "max_nonzero": 205, "max_row": [337, 398], "max_sum": [205, 398, 433], "max_target": 437, "max_yield": [376, 378], "maxim": [6, 282, 380, 393, 401, 403, 417, 419, 429, 437], "maximum": [6, 31, 41, 48, 142, 197, 199, 205, 287, 337, 398, 399, 403, 419, 426, 431, 433], "mc": [401, 424], "md": 419, "me2pph": [376, 377, 378], "mean": [5, 8, 18, 19, 28, 54, 108, 119, 189, 226, 228, 230, 232, 237, 263, 271, 352, 378, 381, 395, 401, 403, 419, 420, 422, 423, 424, 425, 426, 428, 430, 431, 432, 434, 436, 439], "meaning": 430, "meaningless": [398, 423], "meanpredictionsurrog": [271, 381, 436], "meantim": [420, 426], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 84, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 228, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 277, 279, 285, 293, 327, 335, 376, 377, 378, 381, 383, 384, 386, 387, 388, 389, 391, 392, 393, 403, 406, 407, 409, 416, 417, 419, 420, 423, 424, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439], "mechan": [8, 19, 28, 61, 116, 117, 119, 226, 229, 230, 234, 312, 334, 343, 362, 375, 391, 392, 393, 413, 414, 419, 422, 428, 429, 433, 434, 438, 439], "mechanist": 417, "media": [422, 431, 438], "mediocr": 437, "medium": [396, 409, 417, 422, 431], "medoid": [190, 419, 432], "meet": [327, 422], "mem_estim": 440, "member": [316, 426, 431], "memori": [10, 199, 204, 205, 419, 427, 439], "memorys": [199, 205, 440], "mention": 423, "merchant": 422, "merck": [417, 421, 427], "mere": [422, 430], "merg": 420, "meshgrid": [413, 414], "messag": 392, "meta": [28, 72, 166, 168, 169, 170, 171, 174, 386, 387, 388, 389, 403, 409, 417, 419, 439], "metadata": [28, 197, 205, 291, 419], "metarecommend": [168, 169, 170, 171, 419, 428], "methanol": 398, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 79, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 222, 237, 239, 240, 241, 243, 247, 249, 250, 257, 259, 261, 263, 265, 267, 270, 273, 274, 277, 279, 285, 300, 303, 312, 316, 341, 354, 361, 362, 363, 365, 393, 396, 410, 411, 416, 419, 421, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438], "methodtyp": [391, 392, 393], "methyldiphenylphosphin": [376, 377, 378], "methylisoxazol": 438, "metric": [401, 417, 427, 431], "mhfp": 136, "mhfpfingerprint": 136, "micromamba": 419, "middl": 428, "midpoint": 437, "might": [50, 54, 142, 199, 377, 381, 383, 387, 407, 414, 418, 424, 425, 426, 427, 429, 433, 435, 438, 440], "mimic": [89, 150, 426], "min": [282, 328, 375, 383, 384, 393, 403, 406, 407, 413, 414, 417, 419, 430, 434, 439], "min_cardin": [31, 41, 48], "min_nonzero": 205, "min_target": 437, "mind": [401, 436], "miniconda": 419, "minim": [6, 282, 403, 413, 414, 419, 433, 437], "minimum": [31, 41, 48, 139, 197, 199, 205], "minor": 419, "mirror": [425, 434], "miss": [28, 228, 230, 378, 419, 420], "mistak": 420, "mix": [234, 398, 399, 417, 426, 431, 434, 438], "mixin": 222, "mixtur": [188, 415, 419, 426, 431, 432, 438, 440], "mobil": 419, "mode": [108, 131, 142, 169, 228, 237, 282, 285, 288, 310, 327, 374, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 392, 393, 395, 396, 406, 407, 409, 410, 411, 413, 414, 415, 417, 418, 419, 430, 432, 434, 439], "model": [13, 28, 31, 32, 33, 34, 35, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 68, 70, 84, 88, 89, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 237, 239, 240, 241, 242, 243, 247, 261, 263, 265, 267, 271, 273, 274, 348, 383, 384, 394, 413, 414, 417, 419, 421, 423, 424, 425, 426, 431, 432, 434, 435, 437, 438, 439], "model_cl": 274, "model_cluster_num_parameter_nam": [188, 189, 190, 191], "model_from_config": 395, "model_from_python": 395, "model_init": 273, "model_json": 395, "model_param": [188, 189, 190, 191, 261, 265, 267, 396, 419], "modelnottrainederror": [237, 239, 240, 243, 247, 261, 263, 265, 267], "modif": [418, 422], "modifi": [28, 170, 230, 271, 327, 328, 329, 419, 422, 440], "modul": [0, 1, 29, 80, 81, 89, 109, 122, 140, 150, 161, 164, 174, 177, 184, 195, 213, 214, 226, 235, 245, 252, 275, 278, 295, 299, 346, 366, 369, 417, 418, 419, 420], "modular": 420, "molecul": [52, 142, 321, 398, 431], "molecular": [322, 431], "moment": [234, 257, 420, 437], "monitor": [419, 427], "monkeypatch": 418, "mont": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 71, 232, 375, 377, 378, 392, 401, 413, 414, 419, 424, 435], "monte_carlo_run": [232, 392], "mordr": [136, 142, 376, 377, 378, 380, 381, 387, 392, 396, 398, 410, 411, 417, 419, 426, 431], "mordredcommun": 419, "mordredfingerprint": [136, 431], "more": [8, 10, 19, 54, 59, 73, 142, 169, 170, 197, 199, 205, 212, 228, 271, 290, 293, 316, 356, 378, 381, 393, 398, 399, 413, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 430, 431, 433, 434, 435, 437, 440], "morgan": 431, "morgan_fp": [136, 419], "mors": 136, "morsefingerprint": 136, "most": [205, 228, 379, 401, 417, 420, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440], "motiv": 419, "move": [419, 434], "mpl_toolkit": 393, "mplot3d": 393, "mqn": 136, "mqnsfingerprint": 136, "mse": 401, "mu": [158, 159], "much": [377, 430, 431], "multi": [236, 237, 415, 419, 421, 424, 438], "multiarmedbandit": 401, "multipl": [37, 116, 231, 232, 329, 376, 377, 378, 387, 398, 401, 417, 419, 424, 426, 430, 437, 438, 439], "multipli": 105, "multitask": 419, "must": [50, 111, 116, 121, 199, 205, 230, 234, 312, 329, 381, 391, 392, 398, 401, 403, 419, 420, 422, 423, 426, 427, 428, 430, 431, 435], "mutual": 435, "my_attribut": 420, "my_valu": 427, "mypi": [303, 313, 417, 419, 420], "mystr": 420, "n": [23, 237, 298, 317, 362, 376, 377, 378, 380, 381, 386, 387, 388, 389, 396, 398, 401, 403, 406, 407, 409], "n_arm": 401, "n_batches_don": 28, "n_cluster": [189, 190], "n_combin": 398, "n_combinations_actu": 398, "n_combinations_expect": 398, "n_compon": 188, "n_doe_iter": [228, 232, 234, 375, 376, 377, 378, 392, 393, 413, 414, 435], "n_duplic": 398, "n_estim": 396, "n_fits_don": 28, "n_interrupted_campaign": 392, "n_iter": [383, 384, 386, 387, 388, 389, 401, 403], "n_mc_iter": [232, 234, 375, 377, 378, 392, 413, 414, 435], "n_mc_run": 401, "n_mc_sampl": 18, "n_permut": 398, "n_pis_ov": 392, "n_pis_over_requir": 392, "n_point": [197, 363], "n_raw_sampl": [181, 419, 432], "n_restart": [181, 419, 432], "n_sampl": 362, "n_task": 199, "n_task_param": 419, "n_wrong_sum": 398, "naiv": [173, 263, 271, 381, 419, 433], "naivehybridrecommend": 419, "naivehybridspacerecommend": [407, 419, 432], "nake": [293, 427], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 41, 59, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 145, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 211, 220, 232, 243, 277, 279, 285, 297, 304, 310, 311, 312, 321, 322, 327, 331, 336, 349, 354, 356, 368, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 398, 399, 401, 403, 405, 406, 407, 409, 410, 411, 413, 414, 417, 419, 420, 422, 424, 426, 427, 430, 433, 434, 435, 436, 437, 438, 440], "name_or_abbr": [304, 311], "namedtupl": 401, "namespac": [182, 419, 420], "nan": [28, 148, 237, 370, 372, 373, 403], "nativ": [395, 419], "natur": [265, 377, 420, 426, 432, 434, 437], "navig": [417, 425], "nbase": 322, "nbviewer": 395, "nd": 417, "ndarrai": [117, 287, 288, 289, 330, 338, 341, 352, 362, 393, 401, 419, 435], "ne": 398, "nearli": 437, "necessari": [336, 391, 419, 420, 425, 426, 430, 431, 433, 435], "necessarili": [422, 425, 426, 433, 438], "need": [23, 28, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 234, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 312, 335, 336, 376, 377, 378, 381, 386, 389, 391, 393, 395, 398, 401, 403, 413, 414, 416, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 440], "neg": [13, 419], "negat": [6, 42, 414, 419, 438], "neglig": 422, "neither": [234, 329], "neq": 31, "nest": [356, 425, 439], "neural": 438, "neurip": 438, "never": 388, "nevertheless": [316, 418], "new": [28, 44, 45, 108, 169, 171, 197, 230, 242, 287, 288, 289, 297, 333, 334, 380, 392, 393, 409, 417, 419, 420, 425, 426, 436, 438], "new_measur": 429, "new_rec": 425, "newli": [417, 420, 427, 428, 438], "next": [28, 375, 391, 393, 398, 399, 409, 413, 414, 417, 423, 424, 425, 432, 434], "ngboost": [265, 381, 419], "ngboostmodel": 396, "ngboostsurrog": [381, 396, 436], "nice": [393, 418], "nicknam": 321, "nintern": 403, "no_duplicates_constraint": 398, "no_grad": 393, "no_tl": 413, "nois": [228, 328, 329, 414, 419, 439], "noise_level": 329, "noise_perc": [228, 232, 435], "noise_ratio": 328, "noise_std": [413, 414], "noise_typ": 329, "noisi": [12, 14, 413, 417, 419, 438], "non": [28, 58, 59, 83, 111, 116, 121, 166, 168, 169, 170, 171, 173, 199, 228, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 310, 312, 316, 328, 363, 370, 371, 372, 398, 413, 417, 419, 422, 424, 428, 429, 433, 434], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 39, 44, 45, 54, 58, 59, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 106, 108, 116, 121, 125, 138, 139, 144, 147, 148, 149, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 202, 205, 208, 211, 212, 215, 216, 218, 220, 228, 230, 232, 234, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 273, 274, 279, 285, 293, 294, 301, 302, 312, 322, 327, 331, 332, 333, 337, 341, 342, 354, 365, 370, 371, 372, 373, 381, 386, 387, 388, 389, 391, 392, 393, 395, 396, 403, 409, 433, 437, 439], "nonetheless": 438, "nonlinear": [34, 197], "nonpredict": [186, 188, 189, 190, 191, 193, 194], "nonpredictiverecommend": [191, 193, 194, 419], "nonzero": [31, 205, 419], "noqa": [386, 420], "nor": [329, 416], "norecommenderslefterror": [169, 170], "noreturn": [173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 244], "normal": [157, 158, 159, 386, 388, 389, 403, 418, 422, 430, 433], "normaliz": 430, "normalprior": 419, "not_a_param": 396, "notabl": [419, 428], "note": [28, 31, 54, 199, 228, 232, 234, 242, 243, 327, 328, 329, 376, 377, 378, 381, 387, 391, 395, 396, 398, 403, 406, 407, 409, 410, 411, 416, 417, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438], "notebook": 395, "noteworthi": 425, "noth": [13, 28, 31, 39, 41, 42, 48, 74, 116, 129, 142, 171, 173, 179, 181, 188, 189, 190, 191, 197, 199, 205, 237, 247, 261, 265, 267, 285, 422, 431], "notic": [391, 420, 422, 434], "notimplementederror": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 117, 212, 215, 216, 234, 237, 239, 240, 242, 243, 247, 261, 263, 265, 267], "notwithstand": 422, "now": [375, 376, 377, 378, 380, 381, 386, 388, 391, 392, 393, 398, 399, 401, 403, 405, 409, 410, 413, 414, 416, 417, 419, 438, 440], "np": [117, 383, 384, 386, 387, 388, 389, 393, 395, 396, 398, 399, 401, 405, 406, 407, 409, 413, 414, 426, 431, 435, 440], "nrecommend": [380, 381, 403, 406, 407], "nu": 96, "num": [334, 345], "num_disc_1": [403, 425], "num_disc_2": 403, "num_experi": [228, 375, 376, 377, 378, 392, 413, 414], "num_fantasi": 10, "num_parameter_1": 389, "num_parameter_2": 389, "num_parameter_3": 389, "num_parameter_4": 389, "num_parameter_5": 389, "num_parameter_6": 389, "num_sampl": 101, "num_valu": [386, 387, 388, 389, 403, 409, 433], "number": [10, 13, 18, 28, 41, 101, 142, 163, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 228, 232, 234, 237, 337, 341, 345, 357, 362, 363, 376, 377, 378, 383, 384, 386, 387, 388, 389, 393, 398, 401, 406, 413, 414, 417, 418, 419, 423, 425, 426, 427, 430, 431, 433, 434, 435, 440], "numer": [28, 31, 32, 33, 34, 35, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 75, 124, 125, 126, 128, 129, 131, 138, 139, 142, 197, 205, 230, 285, 293, 328, 329, 335, 363, 375, 380, 383, 398, 399, 419, 426, 427, 429, 430, 431, 433, 435, 437], "numerical_measurements_must_be_within_toler": [28, 293, 335, 419, 425], "numerical_onli": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56], "numericalcontinuousparamet": [42, 197, 375, 383, 384, 399, 405, 407, 414, 433, 435, 439], "numericaldiscreteparamet": [205, 376, 377, 378, 380, 381, 383, 386, 387, 388, 389, 391, 392, 393, 395, 396, 398, 403, 406, 407, 409, 410, 411, 413, 414, 417, 433, 434, 435, 439, 440], "numericaltarget": [230, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 392, 393, 395, 396, 403, 406, 407, 409, 410, 411, 413, 414, 417, 419, 430, 434, 435, 439], "numericcontinu": 407, "numparam1": 389, "numparam2": 389, "numparam3": 389, "numparam4": 389, "numparam5": 389, "numparam6": 389, "numpi": [330, 338, 341, 347, 349, 383, 384, 386, 387, 388, 389, 393, 395, 396, 398, 399, 401, 405, 406, 407, 409, 413, 414, 419, 426, 435, 440], "nuniqu": 398, "nyou": [406, 407], "o": [375, 376, 377, 378, 380, 381, 384, 386, 387, 388, 389, 392, 393, 396, 398, 401, 413, 414, 417, 426, 427, 431], "o2": [376, 377, 378], "obj": [147, 148, 149, 216], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 116, 119, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 206, 207, 216, 217, 220, 222, 237, 239, 240, 241, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 300, 303, 310, 312, 329, 335, 336, 341, 354, 365, 375, 380, 391, 392, 393, 395, 396, 401, 405, 407, 410, 411, 418, 419, 420, 422, 425, 426, 428, 429, 432, 433, 435, 436, 437, 439, 440], "objective_json": 434, "oblig": 422, "observ": [226, 401, 435, 437], "obsolet": 419, "obtain": [228, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 377, 393, 401, 414, 417, 419, 425, 429, 434, 438], "oc": [376, 377, 378, 380, 381], "oc1": [376, 377, 378], "occur": [53, 420], "occurr": 426, "octanol": [426, 431], "off": [8, 19, 234, 317, 387, 417, 419, 426, 427, 437], "offer": [312, 393, 398, 401, 406, 416, 417, 418, 422, 423, 428, 431, 432, 434, 435, 436, 438, 440], "offset": [42, 99], "offset_initial_valu": 99, "offset_prior": 99, "often": [399, 401, 418, 423, 426, 427, 428, 429, 431, 434, 440], "oftentim": [434, 435], "oh": [128, 133, 377, 387, 396, 401, 403, 409, 410, 411, 417, 433, 434], "ok": 403, "old": 438, "omit": [232, 312, 391, 417, 433, 434], "onc": [232, 392, 431, 435], "one": [18, 28, 59, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 154, 163, 164, 169, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 199, 212, 230, 247, 271, 297, 298, 356, 376, 377, 378, 381, 383, 398, 401, 403, 411, 413, 414, 416, 417, 418, 419, 420, 422, 424, 425, 426, 428, 430, 431, 433, 434, 435, 436, 437, 438], "onehot": 377, "ones": [199, 293, 335, 377, 407, 419, 424, 438], "ongo": [392, 438], "onli": [8, 10, 19, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 84, 96, 111, 116, 121, 142, 199, 205, 230, 234, 271, 293, 294, 312, 313, 316, 327, 335, 341, 356, 362, 363, 376, 381, 386, 387, 392, 393, 395, 396, 398, 406, 407, 414, 417, 418, 419, 420, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440], "onlin": 401, "onnx": [242, 243, 348, 394, 417, 419, 436], "onnx_input_nam": [243, 395], "onnx_str": [243, 395], "onto": 420, "open": [417, 420], "opentelemetri": [417, 419, 427], "oper": [39, 42, 51, 218, 271, 330, 346, 383, 384, 388, 389, 398, 399, 418, 419, 424, 426, 427, 428, 429, 432, 434], "operator_convert": 395, "opposit": 426, "opt": [417, 427], "optim": [18, 28, 42, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 228, 232, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 327, 377, 379, 380, 383, 384, 392, 393, 398, 401, 403, 407, 419, 421, 423, 426, 427, 429, 430, 431, 432, 433, 435, 436, 437, 438], "optimize_acqf": [42, 181], "optimize_acqf_": 42, "optimize_acqf_discret": 181, "optimize_acqf_mix": 181, "option": [28, 76, 80, 84, 95, 96, 97, 98, 99, 100, 101, 102, 106, 116, 121, 125, 128, 129, 131, 139, 142, 144, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 218, 220, 228, 232, 234, 261, 265, 267, 273, 279, 285, 312, 322, 327, 331, 332, 333, 354, 378, 381, 395, 396, 401, 418, 419, 420, 423, 425, 426, 428, 429, 430, 433, 434, 435, 436, 437, 440], "oracl": 435, "orchestr": [420, 425], "order": [199, 205, 392, 401, 416, 417, 419, 420, 425, 426, 431, 434, 438], "ordin": 437, "org": [259, 303, 333, 395, 417, 422], "organ": 420, "origin": [23, 28, 297, 298, 307, 330, 409, 416, 419, 420, 422, 432, 434, 436], "orthogon": 420, "oserror": 418, "other": [50, 103, 197, 298, 376, 378, 380, 381, 383, 384, 392, 399, 401, 407, 413, 414, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440], "otherwis": [42, 124, 125, 126, 128, 129, 131, 138, 139, 142, 422, 423, 428, 430, 438], "our": [375, 386, 388, 391, 392, 393, 396, 398, 399, 401, 405, 406, 407, 410, 411, 413, 414, 417, 420, 423, 425, 426, 428, 434, 435], "out": [205, 403, 414, 417, 422, 427, 435, 438], "outcom": [163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 377, 417, 431, 437], "output": [28, 106, 329, 330, 354, 375, 413, 414, 418, 419, 421, 435, 436], "output_label": 330, "outputscal": 106, "outputscale_initial_valu": 106, "outputscale_prior": 106, "outsid": [28, 170, 271, 288, 289, 327, 335, 403, 419, 434], "outstand": 422, "over": [28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 398, 416, 419, 423, 425, 428, 438], "overal": [199, 395, 396, 398, 399, 401, 419, 420, 425, 430, 438], "overlap": [58, 59, 383, 384, 426], "overrid": [218, 220, 391, 419], "overridden": [391, 420], "overview": [417, 434], "overwritten": 407, "own": [173, 375, 399, 417, 418, 419, 420, 422, 426, 431], "owner": 422, "ownership": 422, "p": [375, 376, 377, 378, 380, 381, 383, 384, 391, 393, 406, 413, 414, 420, 428, 429, 436, 440], "p1": [433, 434, 435], "p1_json": 434, "p1_via_json": 434, "p2": [433, 434, 435], "p2_json": 434, "p2_via_json": 434, "p3c4": [376, 377, 378], "p_cont": 433, "p_disc": 433, "p_g1_amount": 399, "p_g2_amount": 399, "p_g3_amount": 399, "p_i": 31, "pack": 434, "packag": [84, 136, 291, 386, 388, 389, 418, 419, 420, 431, 435, 436, 440], "page": [395, 417, 419, 420, 428], "pair": [297, 417, 431], "pam": 190, "pamclusteringrecommend": 432, "panda": [49, 206, 224, 225, 230, 321, 338, 375, 376, 377, 378, 383, 384, 386, 392, 393, 398, 399, 403, 406, 407, 413, 414, 419, 426, 427, 431, 433, 434, 435], "panic": 416, "paper": 438, "paper_fil": 438, "parallel": 420, "param": [394, 396, 415], "param1": [433, 435], "param2": [433, 435], "param_bounds_comp": 419, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 73, 84, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 117, 121, 124, 125, 128, 129, 131, 133, 134, 135, 136, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 201, 204, 205, 206, 207, 210, 211, 212, 218, 220, 222, 226, 228, 230, 232, 234, 237, 239, 240, 243, 247, 250, 257, 259, 261, 263, 265, 267, 269, 271, 273, 274, 277, 279, 285, 287, 288, 289, 293, 294, 297, 298, 305, 306, 307, 310, 312, 315, 316, 317, 320, 321, 322, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 341, 342, 345, 350, 351, 352, 354, 356, 358, 359, 362, 363, 365, 375, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 401, 403, 405, 406, 407, 409, 410, 411, 413, 414, 417, 419, 420, 426, 427, 428, 430, 434, 435, 436, 438, 439], "parameter": [154, 155, 156, 157, 158, 159, 160], "parameter_json": 434, "parameter_nam": [197, 199, 205, 407], "parameterencod": [125, 133, 134, 136, 139], "parametr": 426, "parent": 420, "pars": [343, 419], "parser": 419, "part": [13, 23, 28, 37, 67, 174, 197, 199, 205, 327, 396, 407, 410, 411, 413, 414, 419, 420, 422, 423, 424, 425, 426, 432, 433, 434, 440], "parti": [422, 435], "partial": [23, 392, 439], "particl": 438, "particular": [28, 205, 226, 391, 407, 416, 417, 418, 420, 422, 425, 431, 433, 434, 435], "particularli": [312, 425], "partit": [190, 232, 234, 419, 432, 435], "partitionexplain": [82, 85], "pass": [28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 65, 84, 142, 188, 189, 190, 191, 199, 205, 216, 247, 261, 265, 267, 336, 398, 409, 414, 419, 420, 424, 428, 429, 430, 431, 434], "passthrough": [25, 112, 201, 251], "patch": 392, "patent": 422, "path": [354, 377, 398, 419, 420, 427, 440], "pattern": [136, 420, 438], "patternfingerprint": 136, "pd": [28, 230, 297, 298, 334, 375, 376, 377, 378, 383, 384, 386, 392, 393, 398, 399, 403, 406, 407, 413, 414, 419, 426, 428, 431, 433, 434, 435], "pdf": 438, "peek": 434, "pend": [23, 28, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 417, 419, 439], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 419, 424, 425], "per": [228, 376, 377, 378, 381, 398, 403, 406, 413, 414, 419, 431, 433, 435], "percent": [228, 422], "percentag": [181, 293, 329, 381, 386, 387, 388, 389, 398, 403, 409, 414, 432], "perf_count": 391, "perfectli": 434, "perform": [181, 228, 293, 377, 386, 387, 388, 389, 393, 398, 410, 413, 414, 416, 417, 419, 420, 422, 423, 425, 427, 429, 431, 432, 435, 436, 438], "period": 97, "period_length_initial_valu": 97, "period_length_prior": 97, "periodickernel": 419, "perm_inv_constraint": 398, "perman": 439, "permiss": [417, 422], "permut": [50, 53, 54, 298, 419, 426], "permutation_invari": 50, "permutationexplain": [82, 85], "perpetu": 422, "persist": [419, 421, 425, 427, 434, 436], "perspect": 434, "pertain": 422, "pharmacophor": 136, "pharmacophorefingerprint": 136, "phase": [171, 399], "phaseagent1": 399, "phaseagent2": 399, "phcpho": [376, 377, 378, 380, 381], "phenomenon": 425, "philosophi": 434, "physic": [429, 435], "physiochemicalproperti": 136, "physiochemicalpropertiesfingerprint": 136, "pi": [7, 381, 392, 393], "pi_max": 393, "pi_per_iter": 393, "pi_required_fract": 392, "pi_threshold": 392, "pickl": 419, "pictur": 417, "piec": [401, 417, 425, 426], "piecewis": 98, "piecewisepolynomialkernel": 419, "pin": [23, 419], "pin_discret": 23, "pinned_part": 23, "pip": [417, 419, 420, 429, 440], "pipelin": [413, 414, 419, 420], "pival": [376, 377, 378, 380, 381], "pl": [35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56], "place": [28, 31, 230, 327, 328, 329, 395, 396, 398, 401, 418, 419, 420, 422, 425, 428, 431, 434, 438], "placehold": 300, "plai": [425, 429, 437], "plain": 251, "plainkernelfactori": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 247], "plan": [242, 428, 431], "platt": 438, "pleas": [395, 396, 417, 423, 429, 432], "plenti": 429, "plot": [84, 86, 228, 376, 377, 378, 413, 414, 419, 436, 438, 439], "plot_abegin_convert_pipelin": 348, "plot_ebegin_float_doubl": 348, "plot_typ": 84, "plotting_them": 354, "plt": [376, 378, 393], "plu": [230, 417], "plugin": 419, "pm": [5, 381], "png": [376, 378], "po16": 431, "poetri": 419, "point": [6, 13, 18, 23, 27, 28, 84, 139, 163, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 347, 348, 360, 361, 362, 363, 367, 376, 380, 381, 392, 399, 406, 407, 413, 414, 416, 417, 419, 421, 423, 424, 425, 428, 429, 432, 433, 439, 440], "points_per_dim": [393, 406, 407, 413, 414], "polar": [35, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 207, 417, 419, 421, 439, 440], "poli": 393, "polici": 401, "polycollect": 393, "polym": 431, "polynomi": [98, 99], "polynomialkernel": 419, "polytop": 419, "popul": 398, "popular": [429, 431, 436], "posit": [84, 312, 362, 419, 429, 430], "posixpath": 354, "possibl": [144, 205, 206, 207, 226, 312, 327, 378, 392, 393, 398, 403, 417, 419, 422, 425, 426, 427, 428, 431, 432, 433, 434, 435, 437, 438, 440], "post": 431, "post_hook": [312, 391, 392, 393], "posterior": [5, 6, 8, 13, 15, 18, 19, 28, 237, 239, 240, 243, 247, 261, 263, 265, 267, 270, 381, 419, 423, 436], "posterior_mean": [237, 401], "posterior_mod": 237, "posteriorstandarddevi": [401, 423], "postprocess": 321, "potassium": [376, 377, 378, 380, 381], "potenti": [199, 335, 417, 418, 419, 420, 425, 429, 430, 433, 440], "power": [99, 422, 426, 432], "pph3": [376, 377, 378], "pr": [419, 420], "practic": [423, 429, 432], "pre": [144, 169, 250, 394, 418, 419, 420], "pre_hook": [312, 391], "precis": [54, 169, 197, 293, 337, 348, 349, 368, 419, 439], "precomput": 131, "predefin": [354, 425, 432], "predict": [8, 19, 28, 70, 191, 237, 239, 240, 243, 247, 261, 263, 265, 267, 417, 419, 423, 424, 425, 435, 436, 438], "predictor": 269, "prefer": [28, 422, 428, 434], "prefix": 322, "preliminari": 438, "prepar": [393, 420, 422, 440], "preprocess": 419, "presenc": 418, "present": [66, 111, 116, 121, 199, 297, 298, 312, 335, 380, 401, 419, 426, 435, 440], "preset": [247, 254, 257, 259, 419], "pressur": [388, 395, 396, 409, 410, 411, 417, 426], "pretrain": [243, 394, 415], "pretti": 337, "pretty_print_df": [398, 419], "prevent": [215, 216, 312, 418, 419, 420], "previou": [169, 392, 393, 419, 425, 427, 438], "previous": [293, 376, 377, 378, 380, 388, 424, 425], "price": 431, "primari": 425, "primarili": 423, "principl": [398, 401, 436], "print": [230, 337, 356, 376, 377, 378, 380, 381, 383, 384, 388, 391, 395, 396, 398, 399, 401, 405, 406, 407, 409, 410, 411, 417, 419, 433, 440], "print_parameter_names_hook": 391, "printer_inst": 391, "prior": [95, 96, 97, 98, 99, 100, 101, 102, 106, 154, 155, 156, 157, 158, 159, 160, 237, 257, 389, 417, 418, 419], "priori": [426, 434, 438], "privat": [419, 421], "probabilist": 423, "probability_of_improv": 393, "probabilityofimprov": [392, 393], "probabl": [7, 16, 18, 381, 390, 392, 415, 419], "problem": [398, 399, 401, 413, 414, 419, 420, 425, 430, 434], "problemat": [316, 418, 431], "proce": [228, 380, 427], "procedur": [423, 438], "proceed": 438, "process": [28, 89, 245, 246, 247, 248, 252, 253, 254, 256, 257, 258, 259, 334, 362, 381, 391, 398, 401, 413, 414, 419, 420, 423, 424, 425, 426, 427, 428, 431, 434, 438], "prod": 389, "prod_constraint": 389, "prod_i": 430, "produc": [117, 230, 417, 419, 420, 427, 435], "product": [55, 105, 199, 205, 206, 207, 308, 385, 415, 417, 419, 422, 426, 428, 439, 440], "product_paramet": [205, 398, 433], "productkernel": 419, "programmat": 398, "progress": [28, 167, 393, 419, 428], "prohibit": 423, "project": [393, 417, 419, 427], "promin": 422, "promis": [392, 424], "proper": 419, "properli": [23, 403, 418, 433], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 119, 121, 124, 125, 126, 128, 129, 131, 133, 134, 136, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 200, 204, 205, 237, 239, 240, 243, 247, 250, 254, 257, 259, 261, 263, 265, 267, 277, 279, 282, 283, 285, 302, 303, 341, 361, 365, 419, 420, 426, 428], "proport": 414, "propos": 425, "protobuf": 419, "protocol": [162, 163, 241, 249, 316, 419], "prototyp": 421, "provid": [13, 28, 42, 84, 88, 117, 131, 142, 144, 163, 169, 170, 173, 174, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 218, 222, 226, 228, 230, 232, 234, 237, 239, 240, 243, 247, 257, 259, 261, 263, 265, 267, 297, 308, 312, 324, 328, 329, 333, 336, 338, 362, 363, 375, 376, 377, 378, 391, 398, 405, 406, 407, 410, 413, 414, 417, 419, 420, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "prune": [12, 14], "prune_baselin": [12, 14], "pstd": [6, 419, 423], "pubchem": 136, "pubchemfingerprint": 136, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 119, 121, 124, 125, 126, 128, 129, 131, 133, 134, 136, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 200, 204, 205, 222, 237, 239, 240, 241, 243, 247, 249, 250, 254, 257, 259, 261, 263, 265, 267, 277, 279, 282, 283, 285, 300, 302, 303, 341, 361, 365, 419, 420], "publicli": 422, "publish": 419, "pull": [401, 419], "pure": [8, 10, 13, 19, 164, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 199, 234, 242, 363, 406, 419, 439], "purerecommend": [166, 168, 169, 170, 171, 173, 179, 186, 419], "purpos": [13, 391, 392, 395, 401, 417, 418, 420, 422, 428, 434, 440], "push": 420, "put": [398, 401, 427, 431], "puzzl": 417, "py": [259, 386, 388, 389, 419, 427], "py310": [386, 388, 389], "py312": 420, "pyarrow": 419, "pydant": 419, "pydoclint": [419, 420], "pydocstyl": 420, "pylint": 419, "pymatgen": 418, "pypi": [417, 419], "pyplot": [376, 378, 393], "pyproject": 419, "pytest": [419, 420], "python": [27, 303, 313, 377, 396, 410, 411, 417, 418, 419, 420, 425, 427, 434], "python3": [386, 388, 389], "python310": 418, "pytorch": 419, "pyupgrad": 419, "q": [98, 269, 270, 381, 424], "qei": [9, 381, 410, 411, 419], "qkg": [10, 419], "qlogei": [11, 381, 419], "qlogexpectedimprov": [381, 386, 387, 388, 389, 403, 409], "qlognei": [12, 419], "qnegintegratedposteriorvari": 423, "qnei": [14, 419], "qnipv": [13, 419, 423], "qpi": [16, 381], "qposteriorstandarddevi": 423, "qpstd": [15, 419, 423], "qsimpleregret": 18, "qsr": [17, 419], "qt": 18, "qthompsonsampl": [401, 419], "quadrat": [102, 375], "qualiti": 420, "quantif": 438, "quantifi": [401, 423, 438], "quantiti": [28, 52, 427, 429, 430, 436, 440], "quantum": 131, "qucb": [19, 381, 423], "queri": [164, 174, 226, 228, 230, 417, 425, 427, 428, 435], "question": [420, 425, 438], "qupperconfidencebound": 423, "qvarucb": 419, "r": [376, 377, 378, 380, 381], "radial": 100, "radiu": [136, 419, 431], "rais": [13, 28, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 84, 88, 117, 144, 148, 149, 169, 170, 179, 181, 197, 199, 205, 211, 212, 215, 216, 228, 230, 234, 237, 239, 240, 242, 243, 244, 247, 261, 263, 265, 267, 274, 298, 310, 312, 315, 317, 320, 324, 325, 327, 328, 329, 335, 336, 356, 362, 363, 391, 392, 393, 407, 418, 419, 420, 424, 432], "rand": 395, "random": [13, 101, 197, 199, 228, 230, 232, 266, 267, 327, 361, 362, 363, 375, 376, 377, 378, 381, 392, 393, 395, 399, 401, 414, 417, 419, 423, 431, 432, 435, 440], "random_campaign": 375, "random_forest": [267, 381], "random_se": [228, 232, 392, 435], "randomforestmodel": 396, "randomforestsurrog": [381, 419, 436], "randomli": [194, 375, 377, 423, 429, 432], "randomrecommend": [375, 376, 377, 378, 381, 386, 387, 388, 389, 391, 392, 393, 399, 401, 403, 419, 424, 432], "rang": [124, 125, 126, 128, 129, 131, 138, 139, 142, 277, 327, 328, 375, 383, 384, 386, 387, 388, 389, 393, 398, 401, 403, 405, 406, 407, 414, 417, 426, 433, 434, 435, 437, 440], "rank": 437, "rare": 419, "rastrigin": [383, 384, 406, 407], "rate": [155, 237, 401], "rather": [409, 418, 423, 434], "ration": 102, "ravel": [413, 414], "raw": [181, 434], "rbf": 100, "rbfkernel": 419, "rdf": 136, "rdffingerprint": 136, "rdkit": [136, 386, 388, 389, 419, 426, 431], "rdkit2ddescriptor": [136, 377, 386, 388, 389, 419], "rdkit2ddescriptorsfingerprint": 136, "rdkitfingerprint": 136, "re": [392, 406, 407, 420, 432], "reach": [287, 289, 403], "reachabl": 427, "reactant": [429, 431], "reaction": [377, 380, 417, 426, 429, 431, 438], "reactor": [424, 438], "reactora": 438, "reactorb": 438, "reactorc": 438, "read": [131, 199, 354, 377, 380, 417, 419, 420], "read_excel": [376, 377, 378, 392], "readabl": [204, 337, 345, 409, 419, 421, 422, 434], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 228, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 420, 424], "readm": [419, 420], "reagent": [426, 431], "real": [341, 417, 425, 437], "realist": 435, "realiz": [226, 435], "reason": [39, 188, 189, 190, 191, 377, 406, 419, 422, 423, 424, 426, 427, 431, 435], "reassembl": 434, "rebas": 420, "rec": [386, 387, 388, 389, 403, 424, 425], "rec_finish": 424, "rec_next": 424, "rec_pend": 424, "receiv": [422, 427, 434], "recip": 420, "recipi": 422, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 67, 72, 73, 84, 129, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 228, 241, 242, 293, 327, 329, 375, 376, 377, 378, 379, 383, 384, 386, 387, 388, 389, 391, 392, 393, 399, 401, 403, 410, 411, 413, 414, 415, 416, 417, 419, 420, 423, 427, 429, 431, 435, 436, 438, 439, 440], "recommendation_orig": 409, "recommendation_recr": 409, "recommended_arm_idx": 401, "recommender_with_hook": 392, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 84, 166, 168, 169, 170, 171, 176, 241, 391, 393, 416, 419, 424], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 341, 417, 425, 427, 434], "record": [28, 293, 294, 417, 427, 438], "recreat": [254, 409, 434], "recreate_model": 396, "recurs": [166, 168, 169, 170, 171, 305, 306], "redesign": 419, "redistribut": 422, "reduc": [142, 393, 401, 413, 414, 428, 431], "reduct": 439, "ref": 417, "refactor": 419, "refer": [226, 259, 293, 311, 327, 335, 348, 376, 377, 378, 381, 383, 384, 386, 387, 388, 389, 391, 393, 395, 396, 398, 403, 406, 407, 409, 418, 419, 425, 429, 430, 431, 432, 433, 434, 435, 436, 438], "referenc": 420, "refin": [392, 417, 419, 425, 428], "reflect": [173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 393, 419, 420, 423, 426, 431], "regard": [31, 37, 383, 384, 420, 422], "regim": [419, 429], "regist": [312, 390, 392], "register_custom_architectur": 419, "register_hook": [390, 391, 392, 393, 419], "registr": 419, "regress": 261, "regressor": 395, "regret": [17, 18], "regroup": 419, "regular": [18, 271, 405, 418, 419, 424, 438], "reinstal": 417, "rel": [228, 328, 426, 430], "relat": [52, 111, 116, 118, 121, 132, 199, 217, 281, 296, 407, 413, 414, 416, 417, 419, 425, 426, 427, 438], "relationship": [413, 414, 417, 420, 430, 438], "relative_perc": 329, "releas": [417, 419], "relev": [50, 84, 230, 336, 387, 398, 419, 420, 425, 426, 428, 438, 440], "reli": [418, 419], "reliabl": 431, "remain": [53, 171, 234, 288, 375, 381, 386, 387, 388, 389, 398, 401, 403, 407, 409, 413, 414, 422, 431, 434, 435], "remain_switch": [171, 419], "remaind": 363, "remind": 419, "remot": 420, "remov": [49, 52, 53, 199, 205, 398, 420, 426, 433], "renam": [377, 413, 414, 419, 420], "render": [84, 395], "reoccur": 438, "reorder": 419, "reorgan": 419, "repeat": [401, 419, 420, 424, 425], "repetit": [232, 381, 392], "rephras": 426, "replac": [406, 407, 419, 420], "replic": 434, "repo": 419, "report": [163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 401, 418], "repositori": [377, 417, 420], "repr": 395, "repres": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 104, 105, 131, 199, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 324, 338, 341, 345, 362, 375, 398, 399, 401, 410, 411, 417, 419, 422, 425, 431, 433, 435, 440], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 222, 237, 239, 240, 241, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 317, 319, 324, 327, 337, 341, 356, 386, 387, 388, 389, 395, 397, 403, 409, 419, 424, 425, 431, 434, 435, 439, 440], "reproduc": [392, 401, 419, 422, 439], "reproduct": 422, "request": [28, 72, 73, 117, 169, 170, 171, 212, 250, 291, 362, 363, 416, 419, 424, 425, 428], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 41, 42, 48, 71, 171, 205, 274, 312, 380, 391, 392, 395, 399, 401, 403, 406, 410, 416, 417, 418, 419, 420, 422, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 437, 438, 440], "rerun": 395, "reserv": [417, 420], "reset_index": 413, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 387, 389, 398, 434], "resolv": 321, "resort": [271, 420, 434, 440], "resource_track": 418, "resp": [200, 378, 407], "respect": [28, 181, 200, 228, 232, 292, 297, 327, 398, 399, 420, 425, 426, 428, 429, 430, 434, 435, 436, 437, 440], "respond": 416, "respons": [166, 168, 169, 170, 171, 422, 425, 432], "restart": [169, 181], "restor": 434, "restr": 18, "restrain": 431, "restrict": [199, 205, 226, 232, 234, 386, 399, 419, 428, 435, 438, 439], "result": [8, 10, 19, 28, 142, 205, 228, 327, 334, 376, 377, 378, 380, 395, 396, 398, 399, 401, 403, 405, 413, 414, 417, 419, 421, 422, 423, 425, 426, 427, 429, 431, 432, 434, 435, 438, 439, 440], "result_baselin": [413, 414], "result_fract": 414, "results_interrupt": 392, "results_uninterrupt": 392, "retain": [422, 426], "retrain": [242, 243, 436], "retriev": [199, 226, 304, 305, 306, 320, 420, 435], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 84, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 111, 112, 114, 116, 117, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 145, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 183, 186, 188, 189, 190, 191, 193, 194, 197, 199, 201, 202, 205, 206, 207, 208, 210, 211, 212, 215, 216, 218, 219, 220, 222, 224, 225, 228, 230, 232, 234, 237, 239, 240, 241, 243, 244, 247, 250, 251, 255, 261, 263, 265, 267, 269, 270, 271, 273, 274, 277, 279, 285, 287, 288, 289, 291, 292, 293, 294, 297, 298, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 350, 351, 352, 354, 355, 356, 362, 363, 365, 370, 371, 372, 373, 375, 386, 392, 393, 395, 398, 401, 413, 419, 425, 426, 435, 436, 440], "return_std": 395, "reus": [171, 419], "reuse_last": 169, "reveal": [393, 399, 414], "review": 420, "revis": [419, 422], "reward": 401, "rework": 419, "rewrit": 419, "rff": 101, "rffkernel": 419, "rh": [42, 44, 45, 383, 384, 399, 426], "right": [42, 160, 335, 341, 376, 378, 387, 401, 417, 418, 420, 422, 426, 428, 430, 431, 437], "right_df": 335, "rihana": 421, "rim": 421, "risk": [418, 422, 425], "roam": 418, "robust": [417, 419, 438], "robustli": 271, "role": [419, 420, 425, 429, 430, 435, 437, 439], "room": [393, 425], "root": [377, 417, 420, 426], "round": [337, 383, 395, 396, 426], "roundtrip": [419, 434], "rout": 434, "row": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 117, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 230, 293, 297, 298, 328, 334, 335, 337, 352, 376, 378, 386, 387, 388, 389, 398, 399, 403, 409, 419, 425, 428, 433, 435], "rowei": 438, "roya": 421, "royalti": 422, "rq": 102, "rqkernel": 419, "ruff": [419, 420], "rule": [391, 419], "run": [228, 232, 376, 377, 378, 392, 393, 413, 414, 417, 418, 419, 420, 425, 428, 434, 435, 440], "run_full_initial_data": 376, "run_impute_mod": 378, "runner": [386, 388, 389], "runtim": [348, 418], "runtimeerror": [28, 169, 391], "rv": 401, "s3": 419, "s41586": [259, 333], "safe": [419, 420, 425], "safeti": 312, "sai": 426, "said": 420, "sake": 398, "same": [52, 171, 205, 211, 230, 237, 239, 240, 243, 247, 261, 263, 265, 267, 307, 381, 392, 395, 396, 398, 401, 409, 418, 419, 426, 427, 428, 434, 435, 438], "sampl": [10, 13, 18, 41, 181, 193, 194, 197, 294, 360, 361, 362, 363, 376, 381, 386, 387, 388, 389, 401, 403, 405, 409, 414, 417, 419, 421, 429, 439], "sample_from_full_factori": [197, 419], "sample_inactive_paramet": 41, "sample_uniform": [197, 405, 419, 435], "sampler": [381, 386, 387, 388, 389, 403, 409], "samples_full_factori": [197, 419], "samples_random": [197, 419], "sampling_algorithm": [361, 423], "sampling_fract": [13, 423], "sampling_method": [13, 423], "sampling_n_point": [13, 423], "sampling_percentag": [181, 432], "satisfi": [37, 38, 39, 205, 383, 384, 398], "save": [354, 376, 378, 395, 419, 435], "savefig": [376, 378], "scalar": [116, 403, 419, 430, 434], "scale": [106, 156, 157, 158, 159, 160, 365, 403, 413, 419, 423, 430], "scalekernel": 419, "scaler": 419, "scatter": [84, 86], "scenario": [234, 375, 376, 377, 378, 392, 398, 413, 414, 424, 426, 430, 438, 439, 440], "scene": [430, 435], "schema": 425, "schembl15068049": [376, 377, 378], "scheme": 419, "scienc": [417, 421], "scientif": [419, 438], "scikit": [136, 417, 419, 421, 431], "scipi": [352, 393, 401, 419], "scope": 375, "screen": [307, 438], "script": [321, 418, 419, 427, 440], "seaborn": [375, 376, 377, 378, 392, 413, 414], "seamlessli": 434, "search": [13, 23, 28, 35, 49, 52, 62, 67, 73, 124, 125, 126, 128, 129, 131, 138, 139, 142, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 205, 209, 228, 232, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 293, 335, 336, 375, 378, 380, 382, 385, 386, 387, 388, 389, 391, 392, 393, 401, 403, 404, 409, 414, 419, 421, 424, 425, 426, 427, 428, 429, 432, 434, 435, 439], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 84, 124, 125, 126, 128, 129, 131, 138, 139, 142, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 200, 204, 205, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 375, 377, 380, 391, 392, 393, 395, 396, 398, 399, 401, 405, 409, 410, 411, 413, 415, 417, 419, 425, 426, 427, 428, 429, 431, 433, 434, 435, 440], "searchspace1": 405, "searchspace2": 405, "searchspace3": 405, "searchspace_ful": 428, "searchspace_json": 434, "searchspace_reduc": 428, "searchspacetyp": [173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 199, 381, 386, 387, 388, 389, 392, 393, 403, 409, 433], "secfp": 136, "secfpfingerprint": 136, "second": [334, 350, 352, 395, 396, 403, 411, 413, 426, 427, 429], "secondari": [417, 427], "section": [417, 419, 420, 422, 434], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 28, 31, 32, 33, 34, 35, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 150, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 204, 205, 228, 232, 234, 237, 239, 240, 241, 243, 247, 250, 257, 259, 261, 263, 265, 267, 277, 279, 285, 290, 310, 316, 329, 334, 341, 365, 376, 377, 378, 383, 384, 391, 392, 396, 399, 407, 416, 417, 420, 425, 427, 428, 429, 430, 431, 434, 435, 439], "seed": [228, 232, 358, 359, 392, 393, 401, 417, 419, 440], "seek": 403, "seem": [348, 411, 418], "seen": 423, "select": [6, 37, 38, 39, 64, 71, 166, 168, 169, 170, 171, 174, 191, 193, 237, 239, 240, 243, 247, 261, 263, 265, 267, 288, 334, 362, 381, 387, 388, 398, 399, 401, 407, 417, 419, 423, 425, 426, 429, 431, 432, 434, 436], "select_recommend": [166, 168, 169, 170, 171, 419], "self": [312, 325, 370, 371, 372, 373, 391, 392, 393, 401, 420], "sell": 422, "semant": [419, 434], "sens": [54, 312, 316, 334, 426, 431], "sent": 422, "sentinel": [301, 302], "separ": [232, 234, 271, 310, 365, 366, 393, 416, 419, 420, 422, 434], "sequenc": [28, 42, 116, 148, 169, 170, 197, 199, 205, 206, 207, 210, 293, 297, 298, 312, 313, 322, 325, 330, 335, 336, 352, 430, 432], "sequenti": [168, 169, 170, 171, 181, 381, 386, 387, 388, 389, 403, 409, 419, 432], "sequential_continu": [181, 432], "sequential_greedy_x": 419, "sequentialgreedyrecommend": 419, "sequentialmetarecommend": [170, 432], "sequentialstrategi": 419, "seri": [28, 37, 38, 39, 49, 125, 128, 129, 131, 139, 142, 277, 279, 285, 386, 398, 419, 426, 428], "serial": [170, 205, 222, 294, 395, 415, 418, 419, 420, 426, 432, 439], "serializ": [417, 426, 432], "serialize_datafram": 434, "serialized_df": 224, "serializetostr": 395, "serialmixin": [21, 28, 32, 37, 93, 111, 126, 152, 166, 197, 199, 205, 240, 250, 277, 279, 285, 341, 419], "serv": [234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 335, 413, 414, 425, 426, 431], "servic": 422, "session": [243, 427, 434], "set": [28, 31, 39, 41, 52, 54, 58, 59, 84, 88, 142, 163, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 228, 232, 254, 292, 327, 333, 334, 354, 358, 359, 376, 377, 378, 379, 381, 386, 388, 391, 396, 397, 398, 399, 401, 403, 407, 416, 417, 419, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 438, 440], "set_box_aspect": 393, "set_dash": 392, "set_random_se": [393, 401, 440], "set_size_inch": [376, 378], "set_x_pend": 23, "set_xlabel": 393, "set_xtick": 393, "set_xticklabel": 393, "set_ylabel": 393, "set_ylim": 393, "set_zlabel": 393, "setpoint": 139, "setup": [228, 392, 426, 435, 440], "sever": [144, 164, 375, 377, 381, 392, 395, 401, 403, 405, 414, 417, 419, 420, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 438, 440], "sh": 429, "shall": [169, 329, 422, 430], "shap": [84, 417, 419, 421, 436, 439], "shap_valu": 436, "shape": [18, 197, 204, 283, 287, 289, 362, 433, 440], "shapinsight": [82, 83, 85, 86, 419, 429], "shaplei": 84, "share": [419, 422, 438], "shield": [259, 333, 377, 417, 431], "shift": [8, 19, 413], "shifted_hartmann": 413, "ship": [366, 427, 434], "shm": 418, "short": 420, "shortcut": [205, 433, 434], "shorten": [419, 420], "shot": 438, "should": [28, 50, 84, 129, 142, 171, 220, 232, 282, 297, 298, 327, 329, 332, 333, 335, 337, 340, 341, 342, 350, 354, 386, 388, 392, 395, 398, 399, 407, 411, 417, 419, 420, 424, 425, 426, 433, 435, 436, 438, 440], "show": [84, 376, 377, 378, 380, 381, 386, 387, 388, 395, 396, 398, 401, 407, 409, 410, 411, 413, 414, 426, 429], "showcas": 432, "shown": [392, 401, 414, 419], "shrink": 393, "shutdown": 418, "side": [42, 288, 419], "sigma": [157, 158, 159, 160, 287, 403, 421], "signal": [61, 430], "signatur": [78, 274, 310, 312, 393, 419, 420, 426, 434], "significantli": [205, 401, 413, 414], "silenc": 420, "silent": [419, 426], "similar": [170, 418, 426, 427, 429, 431, 432, 433, 434, 438, 440], "similarli": 431, "simpl": [17, 18, 303, 377, 391, 392, 399, 417, 419, 432, 435, 437, 438], "simpler": [420, 434], "simplest": 433, "simplex": [205, 439], "simplex_paramet": [205, 398, 433], "simpli": [316, 391, 392, 420, 426, 428, 431, 432, 433, 434, 437, 438], "simplic": 312, "simplifi": 420, "simul": [74, 329, 388, 393, 417, 419, 438, 439], "simulate_experi": [232, 234, 435], "simulate_scenario": [234, 375, 376, 377, 378, 392, 413, 414, 435], "simulate_transfer_learn": [413, 435], "simulationresult": 401, "simultan": 430, "sinc": [54, 199, 242, 312, 376, 383, 384, 396, 406, 409, 410, 411, 413, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 438], "singer": 438, "singl": [18, 28, 37, 50, 84, 108, 121, 197, 199, 205, 228, 277, 279, 285, 341, 349, 356, 362, 368, 376, 377, 378, 387, 392, 398, 403, 413, 414, 417, 419, 426, 427, 428, 429, 430, 431, 433, 438, 439], "single_lin": 356, "singledispatch": 343, "singletargetobject": [28, 277, 279, 285, 376, 377, 378, 380, 381, 386, 387, 388, 389, 392, 395, 396, 409, 410, 411, 417, 419, 436, 439], "site": [386, 388, 389, 418], "situat": [386, 388, 398, 418, 420, 424, 426, 430, 431, 434, 435, 438], "six": [398, 399], "size": [18, 91, 92, 93, 96, 98, 100, 101, 102, 169, 171, 199, 204, 205, 294, 345, 393, 395, 401, 406, 407, 413, 414, 425, 434, 435, 438, 440], "sk": 395, "skeleton": 419, "skfp": 136, "skicit": 419, "skin": 435, "skip": [202, 208, 419, 425], "skl2onnx": 395, "sklearn": [191, 348, 395, 418], "sklearnclusteringrecommend": [188, 189, 190, 419, 424], "slightli": [226, 377, 398, 435], "slot": [397, 401, 415, 419, 426], "slot1_amount": 398, "slot1_label": 398, "slot2_amount": 398, "slot2_label": 398, "slot3_amount": 398, "slot3_label": 398, "slow": [386, 388, 389, 433], "slowest": 419, "small": [295, 299, 383, 398, 413, 414, 419, 423, 431], "smaller": [28, 401, 425, 438], "smallest": [197, 433], "smart": 417, "smartli": 398, "smile": [142, 319, 321, 322, 417, 431], "smoke": 419, "smoke_test": [354, 375, 376, 377, 378, 384, 386, 387, 389, 392, 393, 401, 413, 414], "smooth": [96, 98, 160], "smoothedboxprior": 419, "smoother": 96, "sn": [375, 376, 377, 378, 392, 413, 414], "snippet": 427, "so": [28, 228, 242, 334, 378, 392, 398, 401, 406, 407, 417, 418, 425, 426, 427, 428, 430, 431, 432, 434, 437], "softwar": [417, 422], "sola": 421, "sole": 422, "solut": [425, 433, 434, 438], "solv": [242, 387, 388, 398, 401], "solv_rdkit2ddesc": 388, "solvent": [376, 377, 378, 380, 381, 386, 387, 388, 389, 392, 396, 398, 399, 410, 411, 417, 426, 431], "solvent1": [398, 399], "solvent2": [398, 399], "solvent3": 398, "solvent4": 398, "solvent5": 398, "solvent8": 398, "solvent9": 398, "solvent_1": 426, "solvent_2": 426, "solvent_3": 426, "solvent_data": 392, "solvent_encoding1": 426, "solvent_encoding2": 426, "solvent_mordred_enc": 426, "solvent_rdkit2dd": [386, 389], "solvent_rdkit_enc": 426, "solvent_smil": 392, "solver": 435, "some": [50, 335, 348, 376, 377, 378, 381, 386, 387, 388, 389, 392, 393, 395, 396, 398, 399, 405, 406, 407, 409, 414, 424, 426, 427, 431, 432, 434, 435, 436, 440], "someth": 411, "sometim": [426, 435], "somewhat": 427, "somewher": 425, "soon": [417, 425, 432], "sophist": [419, 428, 434], "sort": 145, "sourabh": 421, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 111, 112, 114, 116, 117, 119, 121, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 138, 139, 142, 144, 145, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 183, 186, 188, 189, 190, 191, 193, 194, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 218, 219, 220, 222, 224, 225, 228, 230, 232, 234, 237, 239, 240, 241, 243, 244, 247, 249, 250, 251, 254, 255, 257, 259, 261, 263, 265, 267, 269, 270, 271, 273, 274, 277, 279, 282, 283, 285, 287, 288, 289, 291, 292, 293, 294, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 345, 350, 351, 352, 354, 355, 356, 358, 359, 361, 362, 363, 365, 373, 417, 418, 419, 420, 422], "space": [10, 13, 22, 23, 28, 35, 42, 49, 52, 62, 67, 69, 73, 124, 125, 126, 128, 129, 131, 138, 139, 142, 163, 172, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 205, 208, 209, 228, 232, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 293, 335, 362, 375, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 401, 403, 404, 406, 409, 414, 415, 419, 421, 424, 426, 427, 428, 429, 431, 432, 434, 435, 439], "span": [124, 125, 126, 128, 129, 131, 138, 139, 142, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 293, 391, 401, 405, 429], "speak": 438, "spec": [202, 208, 219], "special": [171, 417, 418, 422, 423, 428, 438, 440], "specif": [89, 144, 150, 191, 199, 202, 215, 232, 271, 304, 391, 392, 406, 417, 420, 425, 426, 428, 431, 432, 433, 434, 435, 436, 437, 438], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 50, 77, 88, 131, 142, 144, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 218, 219, 228, 230, 232, 241, 287, 288, 289, 297, 311, 320, 327, 330, 336, 362, 363, 377, 381, 383, 395, 396, 401, 403, 413, 417, 418, 419, 423, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438], "speed": [205, 386, 388, 389, 413, 414, 427, 433], "speed_fast": 433, "speed_norm": 433, "speed_slow": 433, "speedup": 438, "spell": 420, "spellcheck": 419, "sphinx": [419, 420], "split": [173, 424], "sporad": 419, "spread": 437, "sqrt": 426, "squar": [401, 426], "squash": 420, "stabil": [419, 427], "stabl": [89, 150, 290], "stage": [425, 426, 434], "stand": 419, "standard": [6, 15, 271, 395, 419, 431], "star": 398, "start": [228, 375, 391, 392, 393, 399, 401, 418, 419, 424, 431, 432, 434, 435, 438], "startup": 419, "stat": [291, 393, 399, 401], "state": [166, 168, 169, 170, 171, 392, 398, 416, 419, 422, 425, 428], "stateless": [401, 416, 419, 428], "statement": [337, 406, 417, 422], "static": [199, 205, 247, 417, 420, 438], "statist": [294, 414, 417, 427], "statu": 425, "std_threshold": 271, "stem": [418, 438], "step": [202, 208, 228, 398, 401, 416, 417, 420, 425, 430, 434, 436], "sterl": 421, "steven": 377, "still": [144, 327, 392, 401, 424, 426, 427, 429, 431, 438, 440], "stop": [390, 415, 419, 420], "stop_on_pi": 392, "stoppag": 422, "storag": [425, 427, 434], "store": [23, 126, 271, 277, 393, 398, 401, 417, 419, 425, 440], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 117, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 179, 181, 188, 189, 190, 191, 197, 199, 204, 205, 218, 222, 232, 234, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 280, 285, 287, 288, 289, 291, 294, 297, 298, 304, 310, 311, 317, 319, 321, 322, 324, 327, 330, 332, 333, 337, 341, 345, 351, 354, 355, 356, 396, 401, 410, 411, 413, 414], "straightforward": [437, 438], "strategi": [13, 181, 199, 226, 375, 401, 419], "stream": [308, 419, 427], "streamingsequentialmetarecommend": [169, 432], "streamingsequentialstrategi": 419, "streamlin": 420, "streamlit": [417, 419], "streibel": 421, "strict": 310, "strictli": [396, 410, 411], "stride": 383, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 141, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 317, 321, 322, 324, 325, 332, 341, 356, 395, 409, 419, 425, 426, 431, 437, 439], "strip": [228, 378], "strong": 419, "strongli": 425, "strtobool": [419, 427], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 46, 114, 218, 417, 418, 419, 420, 421, 425, 431, 434], "studi": [164, 417, 429, 432, 439], "style": [108, 413, 419, 420], "sub": [191, 419, 429, 434], "subclass": [77, 218, 304, 306, 316, 381, 419, 420, 432, 434], "subfold": 427, "subgraph": 431, "subgroup": 399, "subject": 422, "sublicens": 422, "submiss": [419, 422], "submit": [23, 291, 293, 417, 420, 422], "subpackag": [419, 420, 435], "subselectioncondit": [387, 388, 419, 428, 439], "subsequ": [171, 199, 205, 232, 321, 416, 422, 425, 434, 436], "subset": [28, 111, 116, 121, 142, 199, 307, 336, 362, 425, 426, 428], "subspac": [23, 173, 181, 196, 197, 199, 201, 203, 205, 383, 386, 387, 388, 389, 403, 405, 407, 409, 419, 432, 434, 439, 440], "subspace_json": 434, "subspacecontinu": [28, 124, 138, 199, 201, 405, 419, 433], "subspacediscret": [28, 125, 128, 129, 131, 139, 142, 199, 201, 204, 386, 387, 388, 389, 398, 403, 409, 419, 433, 434, 440], "substanc": [136, 142, 320, 377, 380, 386, 388, 389, 399, 419, 426, 429, 431, 438], "substance_12": 426, "substance_3": 426, "substance_43": 426, "substance_data": 419, "substance_encod": 377, "substanceencod": [142, 320, 322, 386, 387, 388, 389, 419, 431], "substanceparamet": [376, 377, 378, 380, 381, 386, 387, 388, 389, 392, 396, 398, 410, 411, 417, 419, 426, 427, 429, 433, 439], "substanti": [142, 440], "substrat": 438, "subtyp": 434, "success": [279, 362, 401, 434], "success_valu": 279, "suffic": 420, "suffici": [392, 433, 434], "suggest": [429, 435], "suit": 420, "suitabl": [191, 205, 228, 317, 420, 423, 425, 431, 435, 436, 438], "sum": [56, 104, 205, 375, 385, 386, 387, 388, 392, 398, 399, 401, 415, 426, 430, 433], "sum_": [426, 430], "sum_constraint": 398, "sum_constraint_1": 389, "sum_constraint_2": 389, "sum_toler": 398, "summar": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142, 277, 279, 285], "summari": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142, 277, 279, 285, 419, 420], "superior": 423, "supersed": 422, "support": [10, 82, 83, 84, 85, 86, 170, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 348, 381, 386, 387, 388, 389, 392, 393, 395, 398, 403, 409, 419, 420, 421, 422, 426, 429, 431, 432, 433, 435, 436], "supports_batch": 419, "supports_pending_experi": 419, "supports_transfer_learn": [237, 239, 240, 243, 247, 261, 263, 265, 267, 436], "suppos": [293, 426], "sure": [398, 405, 417, 420], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 68, 84, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 179, 181, 188, 189, 190, 191, 237, 239, 241, 243, 247, 249, 250, 254, 257, 259, 261, 263, 265, 267, 386, 387, 388, 389, 393, 401, 403, 409, 415, 417, 419, 421, 426, 429, 431, 432, 438, 439], "surrogate_model": [179, 181, 381, 393, 395, 396, 401, 410, 411, 419], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 84, 179, 181, 240, 419], "svg": 354, "sw": 387, "swiss": 421, "switch": [50, 167, 170, 171, 271, 381, 386, 387, 388, 389, 401, 403, 409, 417, 419, 426, 432], "switch1": 387, "switch2": 387, "switch2_left": 387, "switch2_right": 387, "switch_1": 426, "switch_2": 426, "switch_aft": [171, 410, 411, 432], "switzerland": 421, "sy": 418, "symmetri": 426, "syntax": [417, 419], "synthet": [383, 384, 393, 413, 414], "system": [377, 401, 417, 418, 422, 427, 435, 438], "t": [269, 270, 309, 317, 376, 377, 378, 380, 381, 388, 393, 413, 414, 416, 428, 434, 435], "t1": [434, 435], "t2": 434, "t3": 434, "t_1": 430, "t_2": 430, "t_3": 430, "t_i": 430, "tabl": [337, 419, 426, 429], "tabular": 435, "tag": [417, 419, 434], "tailor": 425, "take": [46, 96, 125, 139, 144, 237, 239, 240, 243, 247, 257, 261, 263, 265, 267, 280, 391, 398, 419, 424, 425, 426, 430, 431, 432, 438], "taken": [169, 392, 419, 425, 428, 430], "tantamount": 423, "target": [28, 69, 108, 111, 112, 116, 120, 121, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 228, 229, 230, 237, 239, 240, 243, 247, 261, 263, 265, 267, 271, 279, 282, 283, 285, 312, 327, 330, 336, 350, 351, 357, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 392, 393, 395, 396, 401, 406, 407, 409, 410, 411, 413, 414, 415, 417, 419, 424, 425, 427, 429, 434, 435, 436, 439], "target_1": [387, 388, 389, 403, 430, 437], "target_2": [403, 430, 437], "target_3": [403, 430], "target_3a": 437, "target_3b": 437, "target_cumbest": [375, 413, 414], "target_max": 425, "target_transform": 403, "targetmod": [285, 434, 437], "targetnam": 228, "targettransform": [285, 419, 437], "task": [129, 199, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 277, 279, 285, 401, 419, 425, 432, 434, 435, 438], "task_idx": [199, 419], "task_param": [413, 414, 435], "task_paramet": 434, "task_parameter_json": 434, "task_parameter_reconstruct": 434, "taskparamet": [212, 413, 414, 419, 428, 434, 435, 439], "tb": 440, "technic": [205, 424, 435, 438], "techniqu": [191, 432], "technologi": 421, "telemetri": [419, 421, 439], "tell": 292, "temp": [386, 388, 421], "temp_c": [376, 377, 378, 392], "temperatur": [376, 378, 380, 381, 386, 388, 391, 395, 396, 409, 426, 431, 433, 438], "temperature_resolut": 386, "temperature_valu": 392, "temporari": [107, 113, 182, 199, 359, 392, 419, 427, 434], "temporarili": [419, 440], "temporary_se": 440, "tempt": 438, "tenac": 419, "tend": 393, "tensor": [23, 42, 237, 269, 270, 330, 338, 341, 365, 367, 413, 419], "term": [99, 226, 392, 401, 420, 422, 425, 429, 433, 434, 435, 438], "termin": [392, 393, 418, 422], "terminologi": 439, "tert": [376, 377, 378, 380, 381], "test": [205, 228, 243, 327, 401, 413, 414, 417, 418, 419, 420, 425, 429, 435, 440], "test_funct": [383, 384, 393, 406, 407, 413, 414], "test_scenario": [376, 378], "testabl": [74, 228], "testfunct": [383, 384, 406, 407], "testfunctionclass": [383, 384, 406, 407], "text": [31, 355, 395, 422, 426, 427, 430], "th": [298, 426], "than": [28, 59, 73, 139, 169, 170, 171, 197, 199, 212, 298, 316, 356, 363, 377, 388, 392, 399, 423, 426, 427, 429, 431, 434], "thei": [144, 164, 174, 288, 332, 336, 381, 389, 392, 398, 401, 405, 419, 420, 424, 425, 426, 429, 431, 432, 433, 434, 437, 438, 440], "them": [35, 257, 328, 354, 381, 417, 418, 419, 420, 424, 426, 427, 428, 429, 431, 432, 434, 438], "theme": [354, 419], "theori": 422, "therebi": 205, "therefor": [171, 237, 239, 240, 243, 247, 261, 263, 265, 267, 381, 418, 425, 434, 438], "therein": 419, "thereof": 422, "thf": 426, "thi": [10, 13, 18, 28, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 166, 168, 169, 170, 171, 173, 181, 188, 189, 190, 191, 197, 199, 205, 226, 230, 232, 234, 237, 239, 240, 241, 242, 243, 247, 257, 261, 263, 265, 267, 271, 294, 297, 312, 313, 316, 321, 327, 329, 331, 333, 335, 337, 354, 375, 391, 392, 393, 395, 396, 398, 399, 401, 405, 409, 410, 411, 413, 414, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "think": [401, 431], "third": [403, 422, 435], "thompson": [18, 421], "thomson": 18, "those": [144, 171, 173, 226, 362, 381, 418, 422, 426, 435], "though": 438, "three": [377, 398, 399, 403, 417, 425, 426, 429, 430, 432, 433, 438], "threshold": [39, 131, 142, 171, 271, 333, 383, 388, 389, 392, 398, 419, 426, 431], "thresholdcondit": [55, 56, 383, 388, 389, 398, 439], "through": [28, 199, 287, 297, 327, 336, 396, 398, 401, 403, 417, 419, 420, 422, 426, 434, 435, 439], "throughout": 171, "throw": [321, 426, 431], "thrown": [230, 378, 392, 410, 418, 430], "thu": [181, 312, 336, 376, 377, 383, 384, 386, 387, 388, 389, 395, 396, 398, 401, 403, 406, 407, 409, 418, 420, 425, 427, 428, 431, 432, 434, 435, 438, 440], "tick": 393, "time": [10, 181, 294, 363, 384, 391, 398, 401, 417, 419, 424, 425, 426, 428, 431, 434, 435, 440], "timeout": [419, 427], "timer": 391, "titl": 422, "tl": 413, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 42, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 392, 393, 419], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 341], "to_factori": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106], "to_fram": 375, "to_gpytorch": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 152, 154, 155, 156, 157, 158, 159, 160, 419], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 277, 279, 285, 341, 395, 396, 409, 425, 434], "to_keep": 334, "to_ndarrai": 341, "to_object": [277, 279, 285, 375, 383, 384, 393, 401, 406, 407, 413, 414, 430, 435], "to_polar": [37, 38, 39], "to_searchspac": [124, 125, 126, 128, 129, 131, 138, 139, 142, 197, 205, 401, 405, 419, 428], "to_subspac": [124, 125, 128, 129, 131, 138, 139, 142, 419], "to_tensor": [341, 392, 393, 395, 419], "to_tupl": 341, "togeth": [35, 63, 298, 381, 401, 407, 417, 419], "toggl": 28, "toggle_discrete_candid": [28, 419, 428], "toler": [28, 39, 139, 205, 293, 335, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 392, 395, 396, 398, 403, 406, 407, 409, 410, 411, 417, 419, 426, 431], "tolist": 383, "toluen": 431, "toml": 419, "too": [383, 435, 438], "tool": [318, 419, 434], "toolbox": 417, "top": [419, 420], "topic": 425, "topolog": 431, "topologicaltors": 136, "topologicaltorsionfingerprint": 136, "torch": [330, 341, 392, 393, 395, 413, 419], "toronto": 421, "tort": 422, "total": [170, 171, 362, 398, 399, 401, 433], "total_bas": 399, "total_phase_ag": 399, "toward": [8, 19, 154, 327, 426], "towel": 416, "tox": [386, 388, 389, 417, 419, 420], "tracebackexcept": 418, "track": [163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 205, 392, 422, 428], "trade": [8, 19, 422], "trademark": 422, "tradit": [377, 397, 398, 415, 417, 419], "train": [70, 84, 163, 169, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 234, 237, 239, 240, 241, 242, 243, 247, 261, 263, 265, 267, 271, 394, 413, 414, 419, 435], "train_i": 395, "train_x": 395, "training_funct": 414, "trajectori": [226, 375, 392, 401, 425, 435], "transfer": [233, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 381, 386, 387, 388, 389, 403, 409, 413, 415, 417, 419, 422, 431, 436, 439], "transform": [28, 70, 111, 116, 121, 125, 126, 128, 129, 131, 139, 142, 197, 199, 205, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 277, 279, 283, 285, 322, 330, 336, 341, 342, 365, 386, 387, 388, 389, 409, 419, 422, 427, 431, 436, 437], "transform_rep_exp2comp": 419, "transit": 419, "translat": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 419, 422, 428, 431], "transmiss": 434, "transmit": 294, "travers": 419, "treasur": 439, "treat": [142, 377, 417, 426, 431, 437, 440], "tree": 419, "tremend": 377, "trend": 438, "tri": 433, "triangl": 289, "triangular": [283, 289, 403, 437], "tricki": 429, "tricyclohexylphosphin": [376, 377, 378], "trigger": [169, 297, 392, 396, 401, 419, 420, 424, 430, 434], "trivial": [250, 263, 430, 431], "true": [6, 12, 14, 28, 31, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 84, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 199, 247, 279, 288, 293, 305, 306, 310, 316, 317, 334, 335, 356, 377, 381, 383, 384, 386, 387, 388, 389, 393, 395, 396, 398, 401, 403, 406, 407, 409, 410, 411, 413, 414, 419, 425, 426, 427, 428, 429, 431, 434], "truncat": [417, 427], "trust": [395, 427], "truth": 317, "truthi": 427, "try": [327, 376, 377, 378, 392, 395, 396, 411, 418, 419, 440], "tune": 417, "tupl": [28, 38, 42, 91, 92, 93, 96, 98, 100, 101, 102, 104, 105, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 145, 197, 199, 204, 205, 270, 297, 310, 313, 325, 327, 338, 341, 345, 365], "turn": [197, 205, 345, 405, 417, 418, 419, 426, 427], "turnaround": 435, "twice": [428, 430], "two": [31, 52, 58, 59, 117, 171, 181, 226, 298, 303, 330, 350, 362, 375, 376, 378, 391, 398, 401, 403, 407, 413, 414, 416, 417, 419, 420, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 437], "twofold": 401, "twophasemetarecommend": [376, 378, 381, 386, 387, 388, 389, 392, 393, 395, 396, 401, 403, 407, 409, 410, 411, 417, 419, 432], "twophasestrategi": 419, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 25, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 112, 114, 116, 117, 121, 124, 125, 126, 128, 129, 131, 138, 139, 141, 142, 144, 145, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 183, 186, 188, 189, 190, 191, 193, 194, 197, 199, 200, 201, 202, 205, 206, 207, 208, 210, 211, 212, 215, 216, 218, 219, 220, 222, 224, 225, 228, 230, 232, 234, 237, 239, 240, 241, 243, 244, 247, 250, 251, 255, 261, 263, 265, 267, 269, 270, 271, 273, 274, 277, 279, 280, 285, 287, 288, 289, 291, 292, 293, 294, 297, 298, 300, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 341, 342, 343, 345, 347, 348, 350, 351, 352, 354, 355, 356, 362, 363, 365, 367, 370, 371, 372, 373, 377, 386, 387, 388, 389, 391, 392, 393, 395, 396, 398, 399, 401, 403, 409, 410, 411, 417, 419, 420, 422, 423, 426, 429, 430, 431, 432, 433, 438, 439], "typealia": 280, "typeerror": [28, 84, 88, 228, 243, 312, 327, 328, 363, 392, 393], "typeguard": 309, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 111, 116, 121, 124, 125, 126, 128, 129, 131, 138, 139, 142, 144, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 171, 197, 199, 205, 210, 218, 219, 222, 237, 239, 240, 243, 247, 250, 261, 263, 265, 267, 270, 277, 279, 285, 306, 307, 308, 309, 325, 330, 336, 341], "typic": [13, 312, 356, 377, 417, 424, 425, 429, 431, 434, 440], "typing_extens": 420, "typo": [419, 420], "u": [18, 375, 376, 377, 378, 391, 393, 398, 399, 401, 405, 414, 417, 423, 426, 430], "ucb": [8, 381, 419, 423, 434], "ultim": 420, "ultra": [410, 411], "un": 419, "unabl": 395, "unavail": 419, "unawar": 424, "unbound": [341, 391], "uncaught": 419, "uncertainti": [13, 381, 439], "uncharacter": 438, "uncorrel": [333, 438], "undefin": [237, 428], "under": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 294, 336, 389, 393, 401, 417, 418, 422, 424, 431], "underflow": 75, "underli": [28, 52, 392, 401, 417, 425, 429, 432, 434], "underscor": 419, "understand": [417, 438], "undesir": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 79, 426, 428, 431, 440], "undo": 418, "unequ": 389, "unevenli": 431, "unfinish": 424, "unfortun": 438, "unhandl": 419, "uniform": [197, 237, 328, 329, 419], "uniformli": 362, "uniniti": 316, "uninstal": [76, 417], "unintend": [79, 312, 419, 420], "unintention": 440, "union": [117, 228, 232, 287, 288, 289, 351, 407, 422, 433], "uniqu": [53, 144, 398, 419, 431], "unit": [204, 345], "unknown": [170, 362, 375, 401, 419, 436, 438], "unlabel": 330, "unless": [417, 420, 422, 427, 431, 434], "unlik": [12, 14, 398, 440], "unlock": 439, "unmaintain": 419, "unmatch": 310, "unmatchedattributeerror": 310, "unmeasur": [228, 378], "unnecessari": [419, 425], "unpromis": 392, "unreach": 419, "unrealist": 435, "unrecogn": 327, "unrestrict": 312, "unsaf": 419, "unspecifi": [302, 419, 434], "unspecifiedtyp": 28, "unsqueez": [392, 393], "unstructur": [220, 434], "unstructure_bas": 218, "unsupport": [197, 230], "until": [166, 168, 169, 170, 171, 228, 401, 417, 435], "untouch": 328, "untransform": [28, 436], "unusedobjectwarn": [392, 419, 424], "unveil": 414, "unwant": 35, "up": [28, 205, 228, 230, 375, 376, 377, 378, 379, 386, 388, 391, 393, 397, 398, 399, 407, 413, 414, 417, 418, 419, 423, 426, 440], "updat": [28, 377, 380, 419, 420, 424], "upgrad": 419, "upon": [173, 250, 418, 419, 420, 426, 433, 436, 438], "upper": [8, 19, 160, 199, 205, 287, 288, 289, 341, 381, 393, 403, 413, 414, 419, 437, 440], "upper_bound": [386, 387, 388, 389, 409, 433], "upperconfidencebound": [423, 434], "upstream": 420, "urg": 429, "url": [427, 438], "us": [13, 18, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 63, 67, 84, 96, 116, 117, 131, 136, 139, 142, 144, 163, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 197, 199, 205, 206, 207, 219, 228, 230, 232, 237, 239, 240, 243, 244, 247, 261, 263, 265, 267, 283, 293, 294, 300, 312, 313, 321, 322, 327, 329, 330, 335, 343, 347, 348, 354, 362, 367, 375, 383, 384, 390, 391, 392, 393, 394, 397, 398, 399, 405, 409, 410, 411, 413, 414, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 437, 438, 439, 440], "usa": 421, "usabl": [316, 418, 419, 431, 434], "usag": [344, 417, 419, 426, 427, 432, 439], "use_comp_rep": [84, 88, 429], "use_torch": [330, 383, 384, 393, 406, 407, 413, 414], "user": [49, 50, 61, 71, 79, 131, 134, 237, 239, 240, 243, 247, 261, 263, 265, 267, 274, 291, 329, 335, 380, 381, 386, 403, 411, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 438], "userguid": 290, "usernam": [291, 419, 427], "userwarn": 418, "uses_shap_explain": 84, "usort": 419, "usr": 136, "usrcat": 136, "usrcatfingerprint": 136, "usrfingerprint": 136, "usual": [228, 376, 377, 378, 410, 418, 429, 431], "util": [181, 197, 205, 293, 300, 302, 303, 341, 361, 365, 375, 377, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 401, 403, 406, 407, 413, 414, 417, 419, 423, 424, 429, 430, 431, 432, 434, 435, 436, 438, 439], "uv": 419, "v": 438, "val": [46, 114, 317, 413], "val_from_param1": 54, "val_from_param2": 54, "valid": [28, 31, 32, 33, 34, 35, 38, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 144, 199, 202, 205, 208, 243, 335, 386, 408, 410, 415, 418, 419, 420, 425, 426, 435], "validate_compat": 243, "validate_config": [28, 411, 419, 425], "valu": [6, 8, 19, 23, 28, 31, 37, 38, 39, 42, 50, 52, 69, 84, 95, 96, 97, 98, 99, 100, 101, 102, 106, 111, 116, 117, 121, 125, 128, 129, 131, 133, 134, 136, 139, 142, 144, 147, 148, 149, 171, 188, 189, 190, 191, 197, 199, 205, 206, 207, 226, 228, 230, 232, 237, 239, 240, 243, 247, 261, 263, 265, 267, 279, 280, 282, 287, 288, 289, 294, 297, 301, 302, 307, 310, 317, 324, 327, 328, 329, 332, 335, 336, 337, 341, 343, 350, 351, 352, 370, 371, 372, 373, 376, 377, 378, 380, 381, 383, 386, 387, 388, 389, 391, 392, 393, 395, 396, 398, 401, 403, 406, 407, 409, 410, 411, 413, 414, 417, 419, 420, 423, 425, 426, 427, 428, 429, 430, 431, 437, 438, 439, 440], "valuabl": [432, 435], "valueerror": [13, 28, 58, 59, 84, 88, 117, 144, 148, 149, 197, 199, 205, 211, 228, 230, 237, 239, 240, 243, 247, 261, 263, 265, 267, 274, 298, 310, 315, 317, 320, 324, 327, 329, 335, 336, 356, 362, 363, 396, 407, 418], "var": [401, 439], "vari": [28, 205, 377, 430], "variabl": [31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 124, 125, 126, 128, 129, 131, 138, 139, 142, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 237, 239, 240, 243, 247, 261, 263, 265, 267, 277, 292, 294, 349, 354, 368, 406, 417, 419, 420, 426, 431, 432, 434], "varianc": [8, 13, 19, 95, 263, 331, 419, 423], "variance_initial_valu": 95, "variance_prior": 95, "variant": [381, 413, 429, 438], "varieti": [406, 420, 434, 435], "variou": [341, 398, 404, 419, 424, 429, 432, 435], "varucb": 419, "vector": [31, 395, 421], "vendor": 431, "verbal": 422, "verbos": [396, 419], "veri": [386, 388, 403, 424, 427, 429, 431, 440], "verifi": [316, 383, 386, 387, 388, 389, 398, 399, 405, 407, 409, 417, 420], "versa": [413, 438], "versatil": 432, "version": [199, 291, 348, 386, 388, 389, 398, 401, 405, 413, 414, 417, 418, 419, 420, 422, 434], "vert": 393, "via": [13, 18, 27, 28, 84, 171, 181, 193, 237, 239, 240, 241, 243, 247, 261, 263, 265, 267, 293, 304, 312, 327, 334, 335, 378, 384, 391, 392, 395, 405, 417, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 437, 438, 439], "via_init": 434, "via_json": 434, "viabl": [73, 403], "vice": [413, 438], "view": [197, 205, 393, 433], "view_init": 393, "violat": [35, 48, 49, 50, 51, 52, 53, 54, 55, 56], "viridi": 393, "virtual": 420, "visibl": 419, "visual": [377, 413, 414, 429, 437], "volum": 438, "vpn": [417, 427], "vsa": 136, "vsafingerprint": 136, "vulner": [419, 420], "w_i": 430, "wa": [13, 64, 65, 68, 69, 76, 79, 144, 171, 237, 239, 240, 243, 247, 261, 263, 265, 267, 324, 327, 363, 377, 418, 419, 420, 422, 427, 429, 431, 434, 438], "wai": [199, 391, 398, 399, 404, 405, 413, 416, 417, 427, 428, 429, 431, 433, 434, 435, 437, 438, 440], "wall": 10, "want": [49, 381, 386, 398, 401, 407, 414, 417, 420, 426, 427, 428, 429, 431, 432, 434, 437], "warn": [60, 313, 386, 388, 389, 392, 406, 407, 419, 420], "warranti": [417, 422], "watch": 391, "water": [386, 387, 388, 389, 398, 426, 431], "we": [23, 226, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 398, 399, 401, 403, 405, 406, 407, 409, 410, 411, 413, 414, 417, 418, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440], "web": 420, "weber": 421, "weight": [108, 116, 117, 352, 403, 430, 434], "weight_kdalton": 431, "welcom": 420, "well": [291, 354, 381, 392, 397, 416, 420, 425, 426, 429, 431, 435], "were": [28, 327, 378, 414, 418, 419, 424, 426, 427, 431, 433], "what": [144, 169, 199, 226, 327, 365, 375, 395, 403, 411, 416, 420, 423, 425, 429, 431, 438, 439], "whatsnew": 303, "when": [28, 50, 139, 169, 170, 171, 179, 181, 199, 237, 239, 240, 243, 244, 247, 261, 263, 265, 267, 274, 301, 302, 310, 312, 316, 327, 330, 356, 363, 386, 387, 389, 391, 396, 398, 399, 401, 403, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 440], "whenev": [23, 169, 327, 434], "where": [18, 23, 31, 35, 41, 48, 49, 50, 51, 52, 53, 54, 55, 56, 163, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 226, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 297, 327, 362, 376, 377, 378, 381, 386, 388, 398, 401, 417, 418, 419, 420, 422, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 437, 438], "wherea": 434, "wherev": [422, 424], "whether": [23, 31, 32, 33, 34, 35, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 88, 124, 125, 126, 128, 129, 131, 138, 139, 142, 181, 197, 205, 237, 239, 240, 243, 247, 261, 263, 265, 267, 292, 329, 335, 341, 398, 419, 422, 425, 427, 428, 437], "which": [13, 28, 37, 38, 39, 79, 84, 111, 116, 121, 129, 144, 163, 164, 166, 168, 169, 170, 171, 173, 176, 179, 181, 186, 188, 189, 190, 191, 193, 194, 199, 205, 232, 234, 237, 239, 240, 243, 247, 261, 263, 265, 267, 271, 293, 294, 312, 316, 327, 329, 333, 335, 337, 350, 351, 354, 365, 375, 377, 381, 384, 391, 392, 398, 399, 401, 405, 406, 407, 411, 413, 414, 417, 418, 419, 420, 422, 423, 425, 426, 428, 429, 431, 433, 434, 435, 436, 437, 438, 440], "while": [199, 202, 208, 392, 401, 403, 414, 418, 422, 423, 425, 426, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438], "whilst": 327, "whim": 136, "whimfingerprint": 136, "whole": 422, "whom": 422, "whose": [117, 144, 199, 230, 307, 310, 330, 375, 391, 398, 424, 435], "wide": 435, "wider": 437, "width": 337, "wieczorek": 421, "william": 438, "willing": 425, "win": [237, 401], "win_rat": 401, "window": [419, 427], "winerror": 418, "wise": 352, "wish": 434, "within": [28, 124, 125, 126, 128, 129, 131, 138, 139, 142, 293, 335, 405, 422, 426, 427, 431, 436, 438, 439, 440], "without": [170, 413, 414, 417, 419, 422, 424, 425, 426, 427, 431, 435, 438, 440], "work": [23, 268, 297, 330, 386, 388, 389, 392, 403, 409, 411, 417, 419, 420, 421, 422, 426, 427, 430, 432, 434, 435], "workaround": [418, 419], "workflow": [395, 417, 425, 434, 439], "world": [417, 425], "worldwid": 422, "worst": [228, 230, 232, 378], "would": [53, 75, 144, 226, 228, 234, 242, 391, 398, 401, 417, 420, 424, 426, 427, 428, 429, 431, 432, 433, 434, 435, 438, 440], "wrap": [91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 247, 251, 269, 270, 312, 417, 419, 430], "wrapper": [1, 22, 232, 234, 243, 313, 413, 414, 417, 432], "write": [417, 418, 422, 434], "written": [406, 407, 420, 422], "wrong": [411, 419], "wrongli": 418, "www": [417, 422], "x": [23, 112, 201, 228, 230, 251, 309, 313, 325, 338, 350, 365, 375, 376, 377, 378, 386, 387, 388, 389, 392, 393, 398, 403, 409, 413, 414, 417, 419, 433, 436], "x0": 433, "x1": 433, "x2": 433, "x_": [375, 383, 384, 405, 406, 407], "x_1": [383, 384, 405, 406, 407, 426], "x_2": [383, 384, 405, 406, 407, 426], "x_3": [383, 384, 405, 406, 407, 426], "x_4": [383, 384, 405, 406, 407], "x_5": 407, "x_6": 407, "x_i": 426, "x_pend": 23, "xlsx": [376, 377, 378, 392], "xpho": [376, 377, 378], "xxxx": 418, "xylen": [376, 377, 378, 380, 381], "y": [259, 317, 333, 350, 375, 376, 377, 378, 392, 393, 395, 398, 413, 414, 417, 438], "ye": 317, "year": 438, "yet": [23, 419, 424, 432], "yield": [6, 96, 376, 377, 378, 380, 381, 386, 392, 395, 396, 398, 407, 409, 410, 411, 417, 419, 423, 429, 430, 434], "yield_cumbest": [376, 377, 378, 392], "yml": 419, "you": [28, 49, 377, 381, 383, 391, 396, 398, 401, 406, 407, 410, 416, 417, 418, 420, 422, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440], "your": [377, 391, 398, 401, 407, 416, 417, 418, 419, 420, 422, 425, 427, 428, 429, 431, 434, 435, 436, 437, 438, 440], "your_branch_nam": 420, "yourself": 401, "z": [393, 417], "zdir": 393, "zero": [8, 19, 154, 331, 398, 401, 438], "zip": [392, 393], "\u00b5fmt": 419, "\u0161o\u0161i\u0107": [417, 421]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objective", "baybe.objective.Objective", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.deprecation", "baybe.objectives.deprecation.structure_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.single", "SingleTargetObjective", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "Surrogate", "SurrogateProtocol", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.get_model_params_validator", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.plotting", "baybe.utils.plotting.create_example_plots", "baybe.utils.plotting.indent", "baybe.utils.plotting.to_string", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 420, "0": 419, "01": 419, "02": 419, "03": 419, "04": 419, "05": 419, "06": 419, "07": 419, "08": 419, "09": 419, "1": 419, "10": 419, "11": 419, "12": 419, "13": 419, "14": 419, "15": 419, "16": 419, "17": 419, "19": 419, "2": 419, "2022": 419, "2023": 419, "2024": 419, "2025": 419, "21": 419, "23": 419, "24": 419, "27": 419, "28": 419, "29": 419, "3": 419, "31": 419, "4": 419, "5": 419, "6": 419, "7": 419, "8": 419, "9": 419, "A": 417, "On": 429, "The": [401, 410, 417, 428, 434, 435, 438], "abbrevi": 434, "acqf": 2, "acquisit": [1, 2, 20, 22, 24, 25, 26, 381, 424], "acquisitionfunct": 21, "action": 438, "activ": 423, "ad": [380, 419, 424, 425, 438, 440], "add_fake_measur": 327, "add_noise_to_perturb_degenerate_row": 328, "add_parameter_nois": 329, "addendum": 403, "addit": 398, "additivekernel": 104, "advanc": [417, 436], "altern": 434, "amount": 398, "an": 401, "appli": 428, "arm": [400, 401], "arm64": 418, "arrai": 435, "arrays_to_datafram": 330, "assembli": 434, "asynchron": 424, "attr": 420, "augment": [296, 297, 298], "automat": 434, "avail": [381, 436], "avx": 418, "back": 417, "backtest": [374, 413], "bandit": [236, 400, 401], "base": [20, 30, 90, 110, 112, 123, 151, 162, 165, 175, 178, 185, 238, 276, 376, 377, 378, 383, 384, 398, 399, 407, 428, 435], "basesequentialmetarecommend": 168, "basic": [94, 153, 299, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 379, 380, 425, 427, 429, 434], "basickernel": 91, "batch": 425, "batchify_ensemble_predictor": 269, "batchify_mean_var_predict": 270, "batteri": 417, "bayb": [0, 1, 2, 20, 22, 24, 25, 26, 27, 29, 30, 36, 40, 43, 44, 45, 46, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 94, 103, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 120, 122, 123, 127, 130, 132, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 161, 162, 164, 165, 167, 172, 174, 175, 177, 178, 180, 182, 183, 184, 185, 187, 192, 195, 196, 198, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 244, 245, 246, 248, 251, 252, 253, 255, 256, 258, 260, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 380, 417, 420], "bayesian": [177, 178, 180, 182, 183, 417, 432], "bayesianlinearsurrog": 261, "bayesianrecommend": 179, "bell_transform": 287, "bernoulli": 401, "betabernoullimultiarmedbanditsurrog": 237, "betaprior": 154, "binari": [278, 280], "binarytarget": 279, "black": [375, 401], "block_deserialization_hook": 215, "block_serialization_hook": 216, "bo": 429, "boolean": [314, 315, 316, 317], "both": 409, "botorch": [180, 406], "botorchrecommend": 181, "bound": [391, 430, 433], "box": [375, 401], "break": 419, "build": [401, 433], "bytes_to_human_read": 345, "cach": [425, 427], "call": 428, "callabl": [383, 384, 407, 435], "campaign": [27, 28, 375, 376, 377, 378, 381, 383, 384, 386, 387, 389, 392, 395, 396, 403, 406, 407, 409, 410, 425], "candid": [425, 428], "cardinalityconstraint": 31, "case": 401, "catch_constant_target": 271, "categor": 127, "categoricalencod": 133, "categoricalparamet": [128, 431], "caution": 428, "chang": 419, "changelog": 419, "check_if_in": 315, "chemic": 417, "chemistri": [318, 319, 320, 321, 322], "choicevalu": 280, "class": 420, "classproperti": 303, "clone": 417, "closer_el": 350, "closest_el": 351, "cluster": [187, 432], "code": 420, "columntransform": 365, "compar": 409, "compon": 391, "composit": 103, "compositekernel": 92, "comput": 429, "condit": [36, 37, 426], "config": [410, 411, 425], "configur": [395, 396, 410, 428, 434], "constraint": [29, 30, 32, 36, 40, 43, 44, 45, 46, 47, 57, 58, 59, 382, 383, 384, 385, 386, 387, 388, 389, 398, 399, 426, 428, 433, 440], "construct": [376, 377, 378, 383, 384, 398, 406, 407, 430, 433], "constructor": [433, 434], "continu": [40, 196, 382, 384, 398, 405, 423, 426, 431, 433, 438, 440], "continuouscardinalityconstraint": 41, "continuousconstraint": 33, "continuouslinearconstraint": [42, 426], "continuouslinearequalityconstraint": 44, "continuouslinearinequalityconstraint": 45, "continuousnonlinearconstraint": 34, "continuousparamet": 124, "contribut": 420, "contributor": 421, "control": [425, 428], "conveni": 430, "convent": 420, "convers": [323, 324, 325, 430, 434], "convert": [217, 395], "convert_acqf": 25, "convert_bound": 342, "copi": 434, "core": [198, 201, 202, 214, 215, 216, 217, 218, 219, 220, 227, 228, 246, 253, 255], "cpu": 418, "creat": [375, 376, 377, 378, 381, 383, 384, 386, 387, 388, 389, 395, 396, 403, 405, 406, 409, 410, 413, 414, 425, 433], "create_example_plot": 354, "creation": [376, 377, 378, 398, 399, 425, 440], "current": 436, "custom": [130, 242, 244, 375, 386, 390, 391, 394, 395, 396, 436], "customdiscreteparamet": [131, 431], "customencod": 134, "customonnxsurrog": 243, "data": [376, 377, 378, 433, 438], "datafram": [326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 383, 384, 407, 433, 434, 435], "de": [409, 434], "default": [256, 433, 434], "defaultkernelfactori": 257, "defin": [375, 383, 384, 391, 392, 393, 403, 406, 407, 411, 413, 414, 417], "definit": 392, "depend": [387, 417, 431], "deprec": [43, 44, 45, 46, 113, 114, 419], "deprecationerror": 61, "descript": 403, "deseri": 434, "deserialize_datafram": 224, "design": [417, 420], "desir": [115, 117], "desirabilityobject": [116, 430], "develop": 420, "df_apply_dependency_augment": 297, "df_apply_permutation_augment": 298, "df_drop_single_value_column": 331, "df_drop_string_column": 332, "df_uncorrelated_featur": 333, "dictionari": [410, 411], "differ": 381, "dimens": 407, "discret": [47, 203, 206, 207, 208, 385, 386, 387, 388, 398, 406, 425, 426, 431, 433], "discretecardinalityconstraint": 48, "discreteconstraint": 35, "discretecustomconstraint": [49, 426], "discretedependenciesconstraint": [50, 426], "discreteexcludeconstraint": [51, 426], "discretelinkedparametersconstraint": [52, 426], "discretenolabelduplicatesconstraint": [53, 426], "discreteparamet": 125, "discretepermutationinvarianceconstraint": [54, 426], "discreteproductconstraint": [55, 426], "discretesamplingmethod": 361, "discretesumconstraint": [56, 426], "discuss": 401, "disk": 427, "do": 435, "docstr": 420, "document": 396, "dtypefloatnumpi": 347, "dtypefloatonnx": 348, "dtypefloattorch": 367, "dummi": 300, "duplic": 398, "dure": 440, "dynam": 428, "edbo": 258, "edbokernelfactori": 259, "effici": 440, "emptysearchspaceerror": 62, "encod": 431, "end": 417, "enum": [118, 132, 281], "environ": 427, "equival": 434, "estim": 440, "exampl": [376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 395, 396, 403, 406, 407, 409, 410, 411, 415, 417, 429], "except": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "exceptiongroup": 418, "exclud": 428, "exclus": [388, 389, 428], "expect": 438, "expectedimprov": 3, "experi": [386, 387, 388, 389, 395, 396, 403, 409, 417, 424, 435], "experiment": [425, 427, 428, 429], "expir": 419, "explain": [82, 429], "explicit": 433, "extend": 420, "extract": 436, "fake": 440, "faq": 416, "farthest_point_sampl": 362, "featur": [427, 428], "field": 434, "file": [410, 411], "filter_df": 334, "find_subclass": 304, "finite_float": 370, "fix": [418, 419], "float": 427, "fpsrecommend": 193, "fraction_to_float": 324, "from": [410, 417, 419, 425, 433, 434], "full": [376, 377, 378, 433], "function": [375, 376, 377, 378, 381, 383, 384, 392, 403, 406, 407, 420, 424], "further": 425, "fuzzy_row_match": 335, "gammaprior": 155, "gaussian_process": [245, 246, 248, 251, 252, 253, 255, 256, 258], "gaussianmixtureclusteringrecommend": 188, "gaussianprocesspreset": 254, "gaussianprocesssurrog": 247, "gener": [413, 414, 420, 432], "geom_mean": 352, "get": [380, 425, 428], "get_base_structure_hook": 218, "get_baseclass": 305, "get_canonical_smil": 319, "get_fingerprint_class": 320, "get_model_params_valid": 273, "get_parameters_from_datafram": 144, "get_subclass": 306, "get_transform_object": 336, "get_transform_paramet": 210, "get_user_detail": 291, "github": 417, "global": 423, "group_duplicate_valu": 307, "guid": 439, "halfcauchyprior": 156, "halfnormalprior": 157, "hilberts_factori": 308, "hook": [390, 391, 392, 393], "hybrid": [383, 407, 426], "imaginari": 401, "implicit": 430, "import": [375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 391, 393, 395, 396, 398, 399, 401, 403, 405, 406, 407, 409, 410, 411, 413, 414, 429], "improv": 393, "includ": 417, "inclus": 376, "incompatibilityerror": 63, "incompatibleacquisitionfunctionerror": 64, "incompatibleargumenterror": 65, "incompatibleexplainererror": 66, "incompatiblesearchspaceerror": 67, "incomplet": 378, "incorpor": 389, "indent": 355, "independentgaussiansurrog": 239, "index": 417, "indic": 417, "infiniteintervalerror": 340, "influenc": 440, "inform": [425, 432], "initi": [376, 381], "insight": [80, 81, 82, 83, 85, 86, 87, 88, 429], "instal": [417, 418], "instanc": 391, "instead": [395, 396], "instruct": 427, "internet": 427, "interpret": 429, "interrupt": 392, "interv": [339, 340, 341, 342, 343], "invalidsurrogatemodelerror": 68, "invalidtargetvalueerror": 69, "invari": 398, "invok": 434, "irrelev": 438, "is_abstract": 316, "is_all_inst": 309, "is_en": 292, "is_shap_explain": 87, "issu": [417, 418], "iter": [383, 384, 395, 396, 403], "json": [425, 434], "kernel": [89, 90, 93, 94, 103], "kernel_factori": [248, 251], "kernelfactori": 249, "kmeansclusteringrecommend": 189, "known": [417, 418], "leak": 418, "learn": [412, 414, 423, 435, 438], "licens": [417, 422], "limit": [429, 436, 437], "linear": [260, 384], "linear_transform": 288, "linearkernel": 95, "link": 396, "local": [417, 423], "logexpectedimprov": 4, "lognormalprior": 158, "look_up_target": 230, "lookup": [229, 230, 376, 377, 378, 383, 384, 392, 407, 413, 414, 435], "loop": [375, 376, 377, 378, 413, 414, 417], "maco": 418, "maintain": [417, 421], "make_explainer_for_surrog": 88, "make_gp_from_preset": 255, "mandatori": 430, "manual": [386, 387, 388, 389], "mark": 424, "match": 437, "match_attribut": 310, "maternkernel": 96, "max": 437, "mean": 435, "meanpredictionsurrog": 263, "measur": [380, 395, 396, 425, 440], "mechan": [376, 377, 378, 435], "memori": [344, 345, 440], "memorys": 204, "meta": [164, 165, 167, 428, 432], "metarecommend": 166, "method": [391, 420, 423], "min": 437, "miss": 435, "mixin": 221, "mixtur": [397, 398, 399], "mode": [403, 437], "model": [381, 395, 396, 398, 399, 401, 429, 436], "modelnottrainederror": 70, "monitor": 393, "monkeypatch": [391, 392, 393], "multi": [400, 401, 402, 403], "multipl": 435, "naiv": [172, 262], "naivehybridspacerecommend": 173, "name": 431, "name_to_smil": 321, "necessari": [376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 395, 396, 403, 406, 407, 409, 410, 411], "nest": 434, "ngboost": 264, "ngboostsurrog": 265, "nois": 440, "nomcacquisitionfunctionerror": 71, "non_inf_float": 371, "non_nan_float": 372, "non_shap_explain": 83, "none": 435, "nonpredict": [184, 185, 187, 192], "nonpredictiverecommend": 186, "nonstring_to_tupl": 325, "norecommenderslefterror": 72, "normalprior": 159, "notenoughpointslefterror": 73, "nothingtosimulateerror": 74, "numer": [137, 284, 346, 347, 348, 349, 350, 351, 352], "numericalcontinuousparamet": [138, 431], "numericaldiscreteparamet": [139, 431], "numericaltarget": [285, 437], "numericalunderflowerror": 75, "object": [107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 376, 377, 378, 381, 383, 384, 386, 387, 388, 389, 403, 406, 409, 413, 414, 417, 430, 434], "onli": 427, "onnx": 395, "optim": [375, 413, 414, 417, 425, 440], "option": [417, 431], "optionalimporterror": 76, "order": [398, 427], "output": [395, 396], "overrid": 420, "packag": [417, 427], "page": 429, "pamclusteringrecommend": 190, "parallel": 425, "paramet": [122, 123, 126, 127, 130, 132, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 376, 377, 378, 381, 396, 398, 399, 425, 429, 431, 433, 440], "parameter_cartesian_prod_panda": 206, "parameter_cartesian_prod_polar": 207, "parameterencod": 135, "partial": [22, 424], "partialacquisitionfunct": 23, "pass": 396, "pend": 424, "perform": [376, 403, 406, 407], "periodickernel": 97, "perman": 428, "permut": 398, "piecewisepolynomialkernel": 98, "plainkernelfactori": 250, "plot": [353, 354, 355, 356, 375, 392, 393, 429], "point": 427, "polar": [418, 427], "polynomialkernel": 99, "posteriormean": 5, "posteriorstandarddevi": 6, "pre": 395, "precis": 427, "preset": [252, 253, 255, 256, 258], "pretrain": 395, "pretty_print_df": 337, "print": [386, 387, 389, 403], "prior": [150, 151, 152, 153], "probabilityofimprov": 7, "probabl": 393, "problem": [375, 392, 418], "product": [389, 433], "productkernel": 105, "pull": 420, "pure": [174, 175, 177, 178, 180, 182, 183, 184, 185, 187, 192, 423, 432], "purerecommend": 176, "pycharm": 418, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedimprov": 12, "qnegintegratedposteriorvari": 13, "qnoisyexpectedimprov": 14, "qposteriorstandarddevi": 15, "qprobabilityofimprov": 16, "qsimpleregret": 17, "qthompsonsampl": 18, "quick": 417, "qupperconfidencebound": 19, "random": [357, 358, 359], "random_forest": 266, "randomforestsurrog": 267, "randomrecommend": 194, "rbfkernel": 100, "recommend": [161, 162, 164, 165, 167, 172, 174, 175, 177, 178, 180, 182, 183, 184, 185, 187, 192, 380, 381, 395, 396, 406, 407, 409, 424, 425, 428, 432], "recommenderprotocol": 163, "reduct": 423, "refers_to": 311, "regist": 391, "register_custom_architectur": 244, "register_hook": 312, "relat": 418, "remov": 419, "represent": [398, 399, 429, 433], "reproduc": 440, "request": 420, "restrict": 433, "result": [375, 392, 393, 424], "rffkernel": 101, "role": 438, "row": 427, "rqkernel": 102, "run": [375, 383, 384, 401], "sampl": [192, 423, 432], "sample_numerical_df": 363, "sampling_algorithm": [360, 362, 363], "scalar": [117, 119, 436], "scale": 364, "scalekernel": 106, "scenario": [231, 232, 435], "scope": 427, "search": [398, 399, 405, 413, 417, 423, 433, 440], "searchspac": [195, 196, 198, 199, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 376, 378, 381, 383, 384, 386, 387, 388, 389, 403, 404, 406, 407, 414], "searchspacetyp": 200, "see": 438, "select_constructor_hook": 219, "semaphor": 418, "sequenti": [167, 425], "sequential_greedi": [182, 183], "sequentialgreedyrecommend": 183, "sequentialmetarecommend": 169, "serial": [213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 408, 409, 425, 434], "serialize_datafram": 225, "serialmixin": 222, "set": [375, 392, 393, 405, 413, 414], "set_random_se": 358, "setup": [380, 386, 387, 388, 389, 395, 396, 398, 399, 401, 403, 409], "shap": [81, 82, 83, 85, 86, 87, 88, 429], "shap_explain": 85, "shap_plot": 86, "shapinsight": 84, "signatur": 391, "simplex": [398, 433], "simul": [226, 227, 228, 229, 230, 231, 232, 233, 234, 375, 376, 377, 378, 392, 401, 413, 414, 435], "simulate_experi": 228, "simulate_scenario": 232, "simulate_transfer_learn": 234, "singl": [120, 435], "singletargetobject": [121, 430], "sklearnclusteringrecommend": 191, "slot": [398, 399], "smile": 141, "smiles_to_fingerprint_featur": 322, "smoothedboxprior": 160, "some": [383, 384, 403], "sort_paramet": 145, "space": [398, 399, 405, 407, 413, 417, 423, 425, 433, 440], "span": 398, "stage": 395, "start": 417, "stop": 392, "str_to_acqf": 26, "strategi": [381, 417], "streamingsequentialmetarecommend": 170, "string": [410, 434], "strtobool": 317, "structure_constraint": 46, "structure_object": 114, "studi": 436, "sub": 423, "subselectioncondit": [38, 426], "subspac": 433, "subspacecontinu": 197, "subspacediscret": 205, "substanc": [140, 141, 398, 417], "substanceencod": 136, "substanceparamet": [142, 431], "suggest": 418, "suitabl": 381, "sum": 389, "support": [418, 424], "surrog": [235, 236, 238, 240, 242, 244, 245, 246, 248, 251, 252, 253, 255, 256, 258, 260, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 381, 394, 395, 396, 436], "surrogateprotocol": 241, "synchron": 420, "synthet": [406, 407], "tabl": [376, 377, 378, 413, 414, 417], "target": [275, 276, 277, 278, 280, 281, 284, 286, 287, 288, 289, 391, 402, 403, 430, 437, 440], "targetmod": 282, "targettransform": 283, "task": [413, 414], "taskparamet": [129, 431, 438], "technologi": 438, "telemetri": [290, 291, 292, 293, 294, 417, 427], "telemetry_record_recommended_measurement_percentag": 293, "telemetry_record_valu": 294, "temporary_se": 359, "terminologi": [398, 434, 435, 438], "test": [383, 384, 406, 407], "theoret": 398, "thi": [376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 389, 403, 406, 407, 429], "thresholdcondit": [39, 426], "through": 438, "to_kernel_factori": 251, "to_object": 112, "to_searchspac": 201, "to_str": 356, "to_tensor": 338, "to_tupl": 313, "toggl": 428, "toler": 425, "tool": 420, "torch": [366, 367, 368, 418], "tradit": 399, "train": 395, "trajectori": 428, "transfer": [412, 414, 435, 438], "transfer_learn": [233, 234], "transform": [286, 287, 288, 289, 403], "treasur": 438, "triangular_transform": 289, "trigger": [391, 393], "two": 411, "twophasemetarecommend": 171, "type": 434, "uncertainti": 423, "unidentifiedsubclasserror": 77, "uninstal": 427, "uninterrupt": 392, "unlock": 438, "unmatchedattributeerror": 78, "unreleas": 419, "unspecifi": 301, "unspecifiedtyp": 302, "unstructure_bas": 220, "unusedobjectwarn": 79, "upperconfidencebound": 8, "us": [376, 377, 378, 380, 381, 386, 387, 388, 389, 395, 396, 401, 403, 406, 407, 433, 434, 435, 436], "usag": 429, "use_fallback_constructor_hook": 343, "user": 439, "util": [24, 25, 26, 143, 144, 145, 223, 224, 225, 268, 269, 270, 271, 295, 296, 297, 298, 299, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 440], "v": [391, 398, 418, 425, 428], "valid": [57, 58, 59, 146, 147, 148, 149, 209, 210, 211, 212, 272, 273, 274, 369, 370, 371, 372, 373, 396, 411], "validate_cardinality_constraints_are_nonoverlap": 58, "validate_constraint": 59, "validate_custom_architecture_cl": 274, "validate_decorrel": 147, "validate_is_finit": 148, "validate_not_nan": 373, "validate_paramet": 212, "validate_parameter_nam": 211, "validate_searchspace_from_config": 202, "validate_simplex_subspace_from_config": 208, "validate_unique_valu": 149, "valu": [433, 434, 435], "variabl": 427, "varname_numpy_use_single_precis": 349, "varname_torch_use_single_precis": 368, "verif": [386, 387, 388, 389, 398, 399, 411], "verifi": 384, "via": 429, "we": 435, "what": 435, "window": 418, "within": 433, "without": 418, "workflow": [420, 424], "wrap": [383, 384, 407], "write": 420}})