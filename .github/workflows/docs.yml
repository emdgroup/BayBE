name: Documentation

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      force:
        description: 'Force'
        default: false
        required: false
        type: boolean
      tag:
        description: 'Specify tag (empty builds branch HEAD)'
        required: false
        default: ''

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag || github.ref }}
      - uses: actions/setup-python@v5
        with: {python-version: "3.9"}
      - name: Install tox
        run: pip install tox-uv
      - name: Build Docs ${{ inputs.force == true && '(Force)' || '' }}
        run: tox -e docs-py39 ${{ inputs.force == true && '-- -f' || '' }}
      - name: Prepare gh-pages branch with HTML output from Sphinx
        run: |
            git fetch origin gh-pages:gh-pages
            git checkout gh-pages
            if ${{ github.event_name == 'workflow_dispatch'}}; then
              echo "Triggered by workflow_dispatch"
              FOLDER='latest'
            else
              echo "Triggered by release"
              FOLDER=${{github.event.release.tag_name}}
            fi
            echo "$FOLDER"
            if [-d $FOLDER]; then
              rm -rf ./$FOLDER
            fi
            mkdir ./$FOLDER
            cp -rv docs/build/* ./$FOLDER
      - name: Update gh-pages branch
        run: |
            if ${{ github.event_name == 'workflow_dispatch'}}; then
              echo "Triggered by workflow_dispatch"
              FOLDER='latest'
            else
              echo "Triggered by release"
              FOLDER=${{github.event.release.tag_name}}
            fi
            git config --local user.email "sphinx-upload[bot]@users.noreply.github.com"
            git config --local user.name "sphinx-upload[bot]"
            git_hash=$(git rev-parse --short "$GITHUB_SHA")
            git add -f $FOLDER
            git commit --allow-empty -m "Sphinx documentation for ${git_hash}"
            git push origin gh-pages
